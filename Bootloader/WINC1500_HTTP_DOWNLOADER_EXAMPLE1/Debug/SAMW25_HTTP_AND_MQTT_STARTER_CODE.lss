
SAMW25_HTTP_AND_MQTT_STARTER_CODE.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00007b68  00000000  00000000  00010000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .relocate     00000200  20000000  00007b68  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          000004dc  20000200  00007d68  00020200  2**2
                  ALLOC
  3 .stack        00002004  200006dc  00008244  00020200  2**0
                  ALLOC
  4 .ARM.attributes 00000028  00000000  00000000  00020200  2**0
                  CONTENTS, READONLY
  5 .comment      00000059  00000000  00000000  00020228  2**0
                  CONTENTS, READONLY
  6 .debug_info   0004ad53  00000000  00000000  00020281  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000724f  00000000  00000000  0006afd4  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_loc    000117a6  00000000  00000000  00072223  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_aranges 00000c30  00000000  00000000  000839c9  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00001210  00000000  00000000  000845f9  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_macro  000211c5  00000000  00000000  00085809  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_line   00018128  00000000  00000000  000a69ce  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    00098ff1  00000000  00000000  000beaf6  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_frame  000029b8  00000000  00000000  00157ae8  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <exception_table>:
       0:	e0 26 00 20 a9 33 00 00 a5 33 00 00 a5 33 00 00     .&. .3...3...3..
	...
      2c:	a5 33 00 00 00 00 00 00 00 00 00 00 a5 33 00 00     .3...........3..
      3c:	31 50 00 00 a5 33 00 00 a5 33 00 00 a5 33 00 00     1P...3...3...3..
      4c:	c9 1a 00 00 b1 14 00 00 a5 33 00 00 a5 33 00 00     .........3...3..
      5c:	a5 33 00 00 a5 33 00 00 f1 1e 00 00 01 1f 00 00     .3...3..........
      6c:	11 1f 00 00 21 1f 00 00 31 1f 00 00 41 1f 00 00     ....!...1...A...
      7c:	a5 33 00 00 a5 33 00 00 a5 33 00 00 a5 33 00 00     .3...3...3...3..
      8c:	a5 33 00 00 a5 33 00 00 00 00 00 00 00 00 00 00     .3...3..........
      9c:	a5 33 00 00 a5 33 00 00 a5 33 00 00 a5 33 00 00     .3...3...3...3..
      ac:	a5 33 00 00 00 00 00 00                             .3......

000000b4 <__do_global_dtors_aux>:
      b4:	b510      	push	{r4, lr}
      b6:	4c06      	ldr	r4, [pc, #24]	; (d0 <__do_global_dtors_aux+0x1c>)
      b8:	7823      	ldrb	r3, [r4, #0]
      ba:	2b00      	cmp	r3, #0
      bc:	d107      	bne.n	ce <__do_global_dtors_aux+0x1a>
      be:	4b05      	ldr	r3, [pc, #20]	; (d4 <__do_global_dtors_aux+0x20>)
      c0:	2b00      	cmp	r3, #0
      c2:	d002      	beq.n	ca <__do_global_dtors_aux+0x16>
      c4:	4804      	ldr	r0, [pc, #16]	; (d8 <__do_global_dtors_aux+0x24>)
      c6:	e000      	b.n	ca <__do_global_dtors_aux+0x16>
      c8:	bf00      	nop
      ca:	2301      	movs	r3, #1
      cc:	7023      	strb	r3, [r4, #0]
      ce:	bd10      	pop	{r4, pc}
      d0:	20000200 	.word	0x20000200
      d4:	00000000 	.word	0x00000000
      d8:	00007b68 	.word	0x00007b68

000000dc <frame_dummy>:
      dc:	4b08      	ldr	r3, [pc, #32]	; (100 <frame_dummy+0x24>)
      de:	b510      	push	{r4, lr}
      e0:	2b00      	cmp	r3, #0
      e2:	d003      	beq.n	ec <frame_dummy+0x10>
      e4:	4907      	ldr	r1, [pc, #28]	; (104 <frame_dummy+0x28>)
      e6:	4808      	ldr	r0, [pc, #32]	; (108 <frame_dummy+0x2c>)
      e8:	e000      	b.n	ec <frame_dummy+0x10>
      ea:	bf00      	nop
      ec:	4807      	ldr	r0, [pc, #28]	; (10c <frame_dummy+0x30>)
      ee:	6803      	ldr	r3, [r0, #0]
      f0:	2b00      	cmp	r3, #0
      f2:	d100      	bne.n	f6 <frame_dummy+0x1a>
      f4:	bd10      	pop	{r4, pc}
      f6:	4b06      	ldr	r3, [pc, #24]	; (110 <frame_dummy+0x34>)
      f8:	2b00      	cmp	r3, #0
      fa:	d0fb      	beq.n	f4 <frame_dummy+0x18>
      fc:	4798      	blx	r3
      fe:	e7f9      	b.n	f4 <frame_dummy+0x18>
     100:	00000000 	.word	0x00000000
     104:	20000204 	.word	0x20000204
     108:	00007b68 	.word	0x00007b68
     10c:	00007b68 	.word	0x00007b68
     110:	00000000 	.word	0x00000000

00000114 <sd_mmc_configure_slot>:

/**
 * \brief Configures the driver with the selected card configuration
 */
static void sd_mmc_configure_slot(void)
{
     114:	b510      	push	{r4, lr}
	driver_select_device(sd_mmc_slot_sel, sd_mmc_card->clock,
     116:	4b06      	ldr	r3, [pc, #24]	; (130 <sd_mmc_configure_slot+0x1c>)
     118:	6819      	ldr	r1, [r3, #0]
     11a:	7f8b      	ldrb	r3, [r1, #30]
     11c:	1e5a      	subs	r2, r3, #1
     11e:	4193      	sbcs	r3, r2
     120:	b2db      	uxtb	r3, r3
     122:	7b4a      	ldrb	r2, [r1, #13]
     124:	6809      	ldr	r1, [r1, #0]
     126:	4803      	ldr	r0, [pc, #12]	; (134 <sd_mmc_configure_slot+0x20>)
     128:	7800      	ldrb	r0, [r0, #0]
     12a:	4c03      	ldr	r4, [pc, #12]	; (138 <sd_mmc_configure_slot+0x24>)
     12c:	47a0      	blx	r4
			sd_mmc_card->bus_width, sd_mmc_card->high_speed);
}
     12e:	bd10      	pop	{r4, pc}
     130:	2000021c 	.word	0x2000021c
     134:	20000244 	.word	0x20000244
     138:	00000dd1 	.word	0x00000dd1

0000013c <sd_mmc_select_slot>:
{
     13c:	b510      	push	{r4, lr}
		return SD_MMC_ERR_SLOT;
     13e:	2304      	movs	r3, #4
	if (slot >= SD_MMC_MEM_CNT) {
     140:	2800      	cmp	r0, #0
     142:	d001      	beq.n	148 <sd_mmc_select_slot+0xc>
}
     144:	0018      	movs	r0, r3
     146:	bd10      	pop	{r4, pc}
	if ((sd_mmc_cards[slot].state == SD_MMC_CARD_STATE_NO_CARD)
     148:	4b0e      	ldr	r3, [pc, #56]	; (184 <sd_mmc_select_slot+0x48>)
			|| (sd_mmc_cards[slot].state == SD_MMC_CARD_STATE_UNUSABLE)) {
     14a:	7a9b      	ldrb	r3, [r3, #10]
	if ((sd_mmc_cards[slot].state == SD_MMC_CARD_STATE_NO_CARD)
     14c:	3b03      	subs	r3, #3
     14e:	2b01      	cmp	r3, #1
     150:	d90d      	bls.n	16e <sd_mmc_select_slot+0x32>
	sd_mmc_slot_sel = slot;
     152:	2200      	movs	r2, #0
     154:	4b0c      	ldr	r3, [pc, #48]	; (188 <sd_mmc_select_slot+0x4c>)
     156:	701a      	strb	r2, [r3, #0]
	sd_mmc_card = &sd_mmc_cards[slot];
     158:	4c0a      	ldr	r4, [pc, #40]	; (184 <sd_mmc_select_slot+0x48>)
     15a:	4b0c      	ldr	r3, [pc, #48]	; (18c <sd_mmc_select_slot+0x50>)
     15c:	601c      	str	r4, [r3, #0]
	sd_mmc_configure_slot();
     15e:	4b0c      	ldr	r3, [pc, #48]	; (190 <sd_mmc_select_slot+0x54>)
     160:	4798      	blx	r3
			SD_MMC_INIT_ONGOING : SD_MMC_OK;
     162:	7aa3      	ldrb	r3, [r4, #10]
     164:	3b02      	subs	r3, #2
     166:	4258      	negs	r0, r3
     168:	4143      	adcs	r3, r0
     16a:	b2db      	uxtb	r3, r3
     16c:	e7ea      	b.n	144 <sd_mmc_select_slot+0x8>
		sd_mmc_cards[slot].state = SD_MMC_CARD_STATE_INIT;
     16e:	4b05      	ldr	r3, [pc, #20]	; (184 <sd_mmc_select_slot+0x48>)
     170:	2202      	movs	r2, #2
     172:	729a      	strb	r2, [r3, #10]
		sd_mmc_cards[slot].clock = SDMMC_CLOCK_INIT;
     174:	4a07      	ldr	r2, [pc, #28]	; (194 <sd_mmc_select_slot+0x58>)
     176:	601a      	str	r2, [r3, #0]
		sd_mmc_cards[slot].bus_width = 1;
     178:	2201      	movs	r2, #1
     17a:	735a      	strb	r2, [r3, #13]
		sd_mmc_cards[slot].high_speed = 0;
     17c:	2200      	movs	r2, #0
     17e:	779a      	strb	r2, [r3, #30]
     180:	e7e7      	b.n	152 <sd_mmc_select_slot+0x16>
     182:	46c0      	nop			; (mov r8, r8)
     184:	20000220 	.word	0x20000220
     188:	20000244 	.word	0x20000244
     18c:	2000021c 	.word	0x2000021c
     190:	00000115 	.word	0x00000115
     194:	00061a80 	.word	0x00061a80

00000198 <sd_mmc_cmd13>:
{
     198:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
     19a:	4d09      	ldr	r5, [pc, #36]	; (1c0 <sd_mmc_cmd13+0x28>)
			if (!driver_send_cmd(SDMMC_SPI_CMD13_SEND_STATUS, 0)) {
     19c:	4f09      	ldr	r7, [pc, #36]	; (1c4 <sd_mmc_cmd13+0x2c>)
			if (!(driver_get_response() & 0xFF)) {
     19e:	4e0a      	ldr	r6, [pc, #40]	; (1c8 <sd_mmc_cmd13+0x30>)
			if (!driver_send_cmd(SDMMC_SPI_CMD13_SEND_STATUS, 0)) {
     1a0:	2100      	movs	r1, #0
     1a2:	480a      	ldr	r0, [pc, #40]	; (1cc <sd_mmc_cmd13+0x34>)
     1a4:	47b8      	blx	r7
     1a6:	1e04      	subs	r4, r0, #0
     1a8:	d007      	beq.n	1ba <sd_mmc_cmd13+0x22>
			if (!(driver_get_response() & 0xFF)) {
     1aa:	47b0      	blx	r6
     1ac:	23ff      	movs	r3, #255	; 0xff
     1ae:	4203      	tst	r3, r0
     1b0:	d003      	beq.n	1ba <sd_mmc_cmd13+0x22>
     1b2:	3d01      	subs	r5, #1
		if (nec_timeout-- == 0) {
     1b4:	2d00      	cmp	r5, #0
     1b6:	d1f3      	bne.n	1a0 <sd_mmc_cmd13+0x8>
			return false;
     1b8:	2400      	movs	r4, #0
}
     1ba:	0020      	movs	r0, r4
     1bc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
     1be:	46c0      	nop			; (mov r8, r8)
     1c0:	00030d41 	.word	0x00030d41
     1c4:	00001015 	.word	0x00001015
     1c8:	0000102d 	.word	0x0000102d
     1cc:	00001b0d 	.word	0x00001b0d

000001d0 <sd_mmc_cmd9_spi>:
{
     1d0:	b510      	push	{r4, lr}
     1d2:	b082      	sub	sp, #8
	if (!driver_adtc_start(SDMMC_SPI_CMD9_SEND_CSD, (uint32_t)sd_mmc_card->rca << 16,
     1d4:	4b0c      	ldr	r3, [pc, #48]	; (208 <sd_mmc_cmd9_spi+0x38>)
     1d6:	681b      	ldr	r3, [r3, #0]
     1d8:	8919      	ldrh	r1, [r3, #8]
     1da:	0409      	lsls	r1, r1, #16
     1dc:	2301      	movs	r3, #1
     1de:	9300      	str	r3, [sp, #0]
     1e0:	2210      	movs	r2, #16
     1e2:	480a      	ldr	r0, [pc, #40]	; (20c <sd_mmc_cmd9_spi+0x3c>)
     1e4:	4c0a      	ldr	r4, [pc, #40]	; (210 <sd_mmc_cmd9_spi+0x40>)
     1e6:	47a0      	blx	r4
     1e8:	2800      	cmp	r0, #0
     1ea:	d101      	bne.n	1f0 <sd_mmc_cmd9_spi+0x20>
}
     1ec:	b002      	add	sp, #8
     1ee:	bd10      	pop	{r4, pc}
	if (!driver_start_read_blocks(sd_mmc_card->csd, 1)) {
     1f0:	4b05      	ldr	r3, [pc, #20]	; (208 <sd_mmc_cmd9_spi+0x38>)
     1f2:	6818      	ldr	r0, [r3, #0]
     1f4:	300e      	adds	r0, #14
     1f6:	2101      	movs	r1, #1
     1f8:	4b06      	ldr	r3, [pc, #24]	; (214 <sd_mmc_cmd9_spi+0x44>)
     1fa:	4798      	blx	r3
     1fc:	2800      	cmp	r0, #0
     1fe:	d0f5      	beq.n	1ec <sd_mmc_cmd9_spi+0x1c>
	return driver_wait_end_of_read_blocks();
     200:	4b05      	ldr	r3, [pc, #20]	; (218 <sd_mmc_cmd9_spi+0x48>)
     202:	4798      	blx	r3
     204:	e7f2      	b.n	1ec <sd_mmc_cmd9_spi+0x1c>
     206:	46c0      	nop			; (mov r8, r8)
     208:	2000021c 	.word	0x2000021c
     20c:	00081109 	.word	0x00081109
     210:	00000e85 	.word	0x00000e85
     214:	000010b1 	.word	0x000010b1
     218:	0000113d 	.word	0x0000113d

0000021c <sd_mmc_deselect_slot>:

/**
 * \brief Deselect the current card slot
 */
static void sd_mmc_deselect_slot(void)
{
     21c:	b510      	push	{r4, lr}
	if (sd_mmc_slot_sel < SD_MMC_MEM_CNT) {
     21e:	4b04      	ldr	r3, [pc, #16]	; (230 <sd_mmc_deselect_slot+0x14>)
     220:	781b      	ldrb	r3, [r3, #0]
     222:	2b00      	cmp	r3, #0
     224:	d000      	beq.n	228 <sd_mmc_deselect_slot+0xc>
		driver_deselect_device(sd_mmc_slot_sel);
	}
}
     226:	bd10      	pop	{r4, pc}
		driver_deselect_device(sd_mmc_slot_sel);
     228:	2000      	movs	r0, #0
     22a:	4b02      	ldr	r3, [pc, #8]	; (234 <sd_mmc_deselect_slot+0x18>)
     22c:	4798      	blx	r3
}
     22e:	e7fa      	b.n	226 <sd_mmc_deselect_slot+0xa>
     230:	20000244 	.word	0x20000244
     234:	00000e25 	.word	0x00000e25

00000238 <sd_mmc_init>:

//-------------------------------------------------------------------
//--------------------- PUBLIC FUNCTIONS ----------------------------

void sd_mmc_init(void)
{
     238:	b510      	push	{r4, lr}
	pmc_enable_periph_clk(SD_MMC_##slot##_WP_PIO_ID);
	MREPEAT(SD_MMC_MEM_CNT, SD_MMC_ENABLE_WP_PIN, ~)
# undef SD_MMC_ENABLE_WP_PIN
#endif
	for (uint8_t slot = 0; slot < SD_MMC_MEM_CNT; slot++) {
		sd_mmc_cards[slot].state = SD_MMC_CARD_STATE_NO_CARD;
     23a:	2204      	movs	r2, #4
     23c:	4b03      	ldr	r3, [pc, #12]	; (24c <sd_mmc_init+0x14>)
     23e:	729a      	strb	r2, [r3, #10]
	}
	sd_mmc_slot_sel = 0xFF; // No slot configurated
     240:	32fb      	adds	r2, #251	; 0xfb
     242:	4b03      	ldr	r3, [pc, #12]	; (250 <sd_mmc_init+0x18>)
     244:	701a      	strb	r2, [r3, #0]
	driver_init();
     246:	4b03      	ldr	r3, [pc, #12]	; (254 <sd_mmc_init+0x1c>)
     248:	4798      	blx	r3
}
     24a:	bd10      	pop	{r4, pc}
     24c:	20000220 	.word	0x20000220
     250:	20000244 	.word	0x20000244
     254:	00000cd1 	.word	0x00000cd1

00000258 <sd_mmc_check>:
{
	return SD_MMC_MEM_CNT;
}

sd_mmc_err_t sd_mmc_check(uint8_t slot)
{
     258:	b5f0      	push	{r4, r5, r6, r7, lr}
     25a:	46c6      	mov	lr, r8
     25c:	b500      	push	{lr}
     25e:	b088      	sub	sp, #32
	sd_mmc_err_t sd_mmc_err;

	sd_mmc_err = sd_mmc_select_slot(slot);
     260:	4bcb      	ldr	r3, [pc, #812]	; (590 <sd_mmc_check+0x338>)
     262:	4798      	blx	r3
     264:	0004      	movs	r4, r0
	if (sd_mmc_err != SD_MMC_INIT_ONGOING) {
     266:	2801      	cmp	r0, #1
     268:	d006      	beq.n	278 <sd_mmc_check+0x20>
		sd_mmc_deselect_slot();
     26a:	4bca      	ldr	r3, [pc, #808]	; (594 <sd_mmc_check+0x33c>)
     26c:	4798      	blx	r3
	}
	sd_mmc_debug("SD/MMC card initialization failed\n\r");
	sd_mmc_card->state = SD_MMC_CARD_STATE_UNUSABLE;
	sd_mmc_deselect_slot();
	return SD_MMC_ERR_UNUSABLE;
}
     26e:	0020      	movs	r0, r4
     270:	b008      	add	sp, #32
     272:	bc04      	pop	{r2}
     274:	4690      	mov	r8, r2
     276:	bdf0      	pop	{r4, r5, r6, r7, pc}
	sd_mmc_card->type = CARD_TYPE_SD;
     278:	4bc7      	ldr	r3, [pc, #796]	; (598 <sd_mmc_check+0x340>)
     27a:	681b      	ldr	r3, [r3, #0]
     27c:	2201      	movs	r2, #1
     27e:	72da      	strb	r2, [r3, #11]
	sd_mmc_card->version = CARD_VER_UNKNOWN;
     280:	2200      	movs	r2, #0
     282:	731a      	strb	r2, [r3, #12]
	sd_mmc_card->rca = 0;
     284:	811a      	strh	r2, [r3, #8]
	driver_send_clock();
     286:	4bc5      	ldr	r3, [pc, #788]	; (59c <sd_mmc_check+0x344>)
     288:	4798      	blx	r3
	if (!driver_send_cmd(SDMMC_SPI_CMD0_GO_IDLE_STATE, 0)) {
     28a:	2100      	movs	r1, #0
     28c:	2088      	movs	r0, #136	; 0x88
     28e:	0140      	lsls	r0, r0, #5
     290:	4bc3      	ldr	r3, [pc, #780]	; (5a0 <sd_mmc_check+0x348>)
     292:	4798      	blx	r3
     294:	2800      	cmp	r0, #0
     296:	d107      	bne.n	2a8 <sd_mmc_check+0x50>
	sd_mmc_card->state = SD_MMC_CARD_STATE_UNUSABLE;
     298:	4bbf      	ldr	r3, [pc, #764]	; (598 <sd_mmc_check+0x340>)
     29a:	681b      	ldr	r3, [r3, #0]
     29c:	2203      	movs	r2, #3
     29e:	729a      	strb	r2, [r3, #10]
	sd_mmc_deselect_slot();
     2a0:	4bbc      	ldr	r3, [pc, #752]	; (594 <sd_mmc_check+0x33c>)
     2a2:	4798      	blx	r3
	return SD_MMC_ERR_UNUSABLE;
     2a4:	2403      	movs	r4, #3
     2a6:	e7e2      	b.n	26e <sd_mmc_check+0x16>
	if (!driver_send_cmd(SD_CMD8_SEND_IF_COND,
     2a8:	21d5      	movs	r1, #213	; 0xd5
     2aa:	0049      	lsls	r1, r1, #1
     2ac:	48bd      	ldr	r0, [pc, #756]	; (5a4 <sd_mmc_check+0x34c>)
     2ae:	4bbc      	ldr	r3, [pc, #752]	; (5a0 <sd_mmc_check+0x348>)
     2b0:	4798      	blx	r3
	*v2 = 0;
     2b2:	2600      	movs	r6, #0
	if (!driver_send_cmd(SD_CMD8_SEND_IF_COND,
     2b4:	2800      	cmp	r0, #0
     2b6:	d125      	bne.n	304 <sd_mmc_check+0xac>
	if (sd_mmc_card->type & CARD_TYPE_SD) {
     2b8:	4bb7      	ldr	r3, [pc, #732]	; (598 <sd_mmc_check+0x340>)
     2ba:	681b      	ldr	r3, [r3, #0]
     2bc:	7adb      	ldrb	r3, [r3, #11]
     2be:	07db      	lsls	r3, r3, #31
     2c0:	d500      	bpl.n	2c4 <sd_mmc_check+0x6c>
     2c2:	e1eb      	b.n	69c <sd_mmc_check+0x444>
	if ((sd_mmc_card->type & CARD_TYPE_SD) &&
     2c4:	4bb4      	ldr	r3, [pc, #720]	; (598 <sd_mmc_check+0x340>)
     2c6:	681b      	ldr	r3, [r3, #0]
     2c8:	7ada      	ldrb	r2, [r3, #11]
     2ca:	2309      	movs	r3, #9
     2cc:	4013      	ands	r3, r2
     2ce:	2b01      	cmp	r3, #1
     2d0:	d10f      	bne.n	2f2 <sd_mmc_check+0x9a>
		if (!driver_send_cmd(SDMMC_CMD16_SET_BLOCKLEN, SD_MMC_BLOCK_SIZE)) {
     2d2:	2180      	movs	r1, #128	; 0x80
     2d4:	0089      	lsls	r1, r1, #2
     2d6:	48b4      	ldr	r0, [pc, #720]	; (5a8 <sd_mmc_check+0x350>)
     2d8:	4bb1      	ldr	r3, [pc, #708]	; (5a0 <sd_mmc_check+0x348>)
     2da:	4798      	blx	r3
     2dc:	2800      	cmp	r0, #0
     2de:	d0db      	beq.n	298 <sd_mmc_check+0x40>
	if (sd_mmc_card->type & CARD_TYPE_SD) {
     2e0:	4bad      	ldr	r3, [pc, #692]	; (598 <sd_mmc_check+0x340>)
     2e2:	681b      	ldr	r3, [r3, #0]
     2e4:	7adb      	ldrb	r3, [r3, #11]
     2e6:	07db      	lsls	r3, r3, #31
     2e8:	d503      	bpl.n	2f2 <sd_mmc_check+0x9a>
		if (!sd_mmc_cmd13()) {
     2ea:	4bb0      	ldr	r3, [pc, #704]	; (5ac <sd_mmc_check+0x354>)
     2ec:	4798      	blx	r3
     2ee:	2800      	cmp	r0, #0
     2f0:	d0d2      	beq.n	298 <sd_mmc_check+0x40>
	sd_mmc_configure_slot();
     2f2:	4baf      	ldr	r3, [pc, #700]	; (5b0 <sd_mmc_check+0x358>)
     2f4:	4798      	blx	r3
		sd_mmc_card->state = SD_MMC_CARD_STATE_READY;
     2f6:	4ba8      	ldr	r3, [pc, #672]	; (598 <sd_mmc_check+0x340>)
     2f8:	681b      	ldr	r3, [r3, #0]
     2fa:	2200      	movs	r2, #0
     2fc:	729a      	strb	r2, [r3, #10]
		sd_mmc_deselect_slot();
     2fe:	4ba5      	ldr	r3, [pc, #660]	; (594 <sd_mmc_check+0x33c>)
     300:	4798      	blx	r3
		return SD_MMC_INIT_ONGOING;
     302:	e7b4      	b.n	26e <sd_mmc_check+0x16>
	resp = driver_get_response();
     304:	4bab      	ldr	r3, [pc, #684]	; (5b4 <sd_mmc_check+0x35c>)
     306:	4798      	blx	r3
	if (resp == 0xFFFFFFFF) {
     308:	1c43      	adds	r3, r0, #1
     30a:	d100      	bne.n	30e <sd_mmc_check+0xb6>
     30c:	e1c4      	b.n	698 <sd_mmc_check+0x440>
	if ((resp & (SD_CMD8_MASK_PATTERN | SD_CMD8_MASK_VOLTAGE))
     30e:	0500      	lsls	r0, r0, #20
     310:	0d00      	lsrs	r0, r0, #20
     312:	23d5      	movs	r3, #213	; 0xd5
     314:	005b      	lsls	r3, r3, #1
	*v2 = 1;
     316:	3601      	adds	r6, #1
	if ((resp & (SD_CMD8_MASK_PATTERN | SD_CMD8_MASK_VOLTAGE))
     318:	4298      	cmp	r0, r3
     31a:	d1bd      	bne.n	298 <sd_mmc_check+0x40>
     31c:	e7cc      	b.n	2b8 <sd_mmc_check+0x60>
	if (!driver_send_cmd(SDMMC_SPI_CMD58_READ_OCR, 0)) {
     31e:	2100      	movs	r1, #0
     320:	48a5      	ldr	r0, [pc, #660]	; (5b8 <sd_mmc_check+0x360>)
     322:	4b9f      	ldr	r3, [pc, #636]	; (5a0 <sd_mmc_check+0x348>)
     324:	4798      	blx	r3
     326:	2800      	cmp	r0, #0
     328:	d119      	bne.n	35e <sd_mmc_check+0x106>
			sd_mmc_card->type = CARD_TYPE_MMC;
     32a:	4b9b      	ldr	r3, [pc, #620]	; (598 <sd_mmc_check+0x340>)
     32c:	681b      	ldr	r3, [r3, #0]
     32e:	2202      	movs	r2, #2
     330:	72da      	strb	r2, [r3, #11]
	if (!driver_send_cmd(SDMMC_SPI_CMD0_GO_IDLE_STATE, 0)) {
     332:	2100      	movs	r1, #0
     334:	2088      	movs	r0, #136	; 0x88
     336:	0140      	lsls	r0, r0, #5
     338:	4b99      	ldr	r3, [pc, #612]	; (5a0 <sd_mmc_check+0x348>)
     33a:	4798      	blx	r3
     33c:	2800      	cmp	r0, #0
     33e:	d0ab      	beq.n	298 <sd_mmc_check+0x40>
     340:	4d9e      	ldr	r5, [pc, #632]	; (5bc <sd_mmc_check+0x364>)
		if (!driver_send_cmd(MMC_SPI_CMD1_SEND_OP_COND, 0)) {
     342:	4f97      	ldr	r7, [pc, #604]	; (5a0 <sd_mmc_check+0x348>)
		resp = driver_get_response();
     344:	4e9b      	ldr	r6, [pc, #620]	; (5b4 <sd_mmc_check+0x35c>)
		if (!driver_send_cmd(MMC_SPI_CMD1_SEND_OP_COND, 0)) {
     346:	2100      	movs	r1, #0
     348:	489d      	ldr	r0, [pc, #628]	; (5c0 <sd_mmc_check+0x368>)
     34a:	47b8      	blx	r7
     34c:	2800      	cmp	r0, #0
     34e:	d0a3      	beq.n	298 <sd_mmc_check+0x40>
		resp = driver_get_response();
     350:	47b0      	blx	r6
		if (!(resp & R1_SPI_IDLE)) {
     352:	07c3      	lsls	r3, r0, #31
     354:	d57d      	bpl.n	452 <sd_mmc_check+0x1fa>
     356:	3d01      	subs	r5, #1
		if (retry-- == 0) {
     358:	2d00      	cmp	r5, #0
     35a:	d1f4      	bne.n	346 <sd_mmc_check+0xee>
     35c:	e79c      	b.n	298 <sd_mmc_check+0x40>
	if ((driver_get_response() & OCR_CCS) != 0) {
     35e:	4b95      	ldr	r3, [pc, #596]	; (5b4 <sd_mmc_check+0x35c>)
     360:	4798      	blx	r3
     362:	0043      	lsls	r3, r0, #1
     364:	d505      	bpl.n	372 <sd_mmc_check+0x11a>
		sd_mmc_card->type |= CARD_TYPE_HC;
     366:	4b8c      	ldr	r3, [pc, #560]	; (598 <sd_mmc_check+0x340>)
     368:	681a      	ldr	r2, [r3, #0]
     36a:	7ad3      	ldrb	r3, [r2, #11]
     36c:	2108      	movs	r1, #8
     36e:	430b      	orrs	r3, r1
     370:	72d3      	strb	r3, [r2, #11]
		if (!driver_send_cmd(SDMMC_SPI_CMD59_CRC_ON_OFF, 0)) {
     372:	2100      	movs	r1, #0
     374:	4893      	ldr	r0, [pc, #588]	; (5c4 <sd_mmc_check+0x36c>)
     376:	4b8a      	ldr	r3, [pc, #552]	; (5a0 <sd_mmc_check+0x348>)
     378:	4798      	blx	r3
     37a:	2800      	cmp	r0, #0
     37c:	d08c      	beq.n	298 <sd_mmc_check+0x40>
	if (sd_mmc_card->type & CARD_TYPE_SD) {
     37e:	4b86      	ldr	r3, [pc, #536]	; (598 <sd_mmc_check+0x340>)
     380:	681b      	ldr	r3, [r3, #0]
     382:	7adb      	ldrb	r3, [r3, #11]
     384:	07da      	lsls	r2, r3, #31
     386:	d400      	bmi.n	38a <sd_mmc_check+0x132>
     388:	e1a4      	b.n	6d4 <sd_mmc_check+0x47c>
		if (!sd_mmc_cmd9_spi()) {
     38a:	4b8f      	ldr	r3, [pc, #572]	; (5c8 <sd_mmc_check+0x370>)
     38c:	4798      	blx	r3
     38e:	2800      	cmp	r0, #0
     390:	d082      	beq.n	298 <sd_mmc_check+0x40>
	tran_speed = CSD_TRAN_SPEED(sd_mmc_card->csd);
     392:	4b81      	ldr	r3, [pc, #516]	; (598 <sd_mmc_check+0x340>)
     394:	681a      	ldr	r2, [r3, #0]
 */
static inline uint32_t SDMMC_UNSTUFF_BITS(uint8_t *reg, uint16_t reg_size,
		uint16_t pos, uint8_t size)
{
	uint32_t value;
	value = reg[((reg_size - pos + 7) / 8) - 1] >> (pos % 8);
     396:	7c53      	ldrb	r3, [r2, #17]
	unit = sd_mmc_trans_units[tran_speed & 0x7];
     398:	2107      	movs	r1, #7
     39a:	4019      	ands	r1, r3
     39c:	0089      	lsls	r1, r1, #2
	sd_mmc_card->clock = unit * mul * 1000;
     39e:	488b      	ldr	r0, [pc, #556]	; (5cc <sd_mmc_check+0x374>)
     3a0:	5808      	ldr	r0, [r1, r0]
     3a2:	21fa      	movs	r1, #250	; 0xfa
     3a4:	0089      	lsls	r1, r1, #2
     3a6:	4341      	muls	r1, r0
	mul = sd_trans_multipliers[(tran_speed >> 3) & 0xF];
     3a8:	065b      	lsls	r3, r3, #25
     3aa:	0f1b      	lsrs	r3, r3, #28
     3ac:	009b      	lsls	r3, r3, #2
	sd_mmc_card->clock = unit * mul * 1000;
     3ae:	4888      	ldr	r0, [pc, #544]	; (5d0 <sd_mmc_check+0x378>)
     3b0:	581b      	ldr	r3, [r3, r0]
     3b2:	434b      	muls	r3, r1
     3b4:	6013      	str	r3, [r2, #0]
	if (CSD_STRUCTURE_VERSION(sd_mmc_card->csd) >= SD_CSD_VER_2_0) {
     3b6:	7b93      	ldrb	r3, [r2, #14]
     3b8:	099b      	lsrs	r3, r3, #6
     3ba:	d000      	beq.n	3be <sd_mmc_check+0x166>
     3bc:	e13c      	b.n	638 <sd_mmc_check+0x3e0>
     3be:	7d91      	ldrb	r1, [r2, #22]
     3c0:	1189      	asrs	r1, r1, #6
	if (((pos % 8) + size) > 8) {
		value |= (uint32_t)reg[((reg_size - pos + 7) / 8) - 2] << (8 - (pos % 8));
     3c2:	7d53      	ldrb	r3, [r2, #21]
     3c4:	009b      	lsls	r3, r3, #2
	}
	if (((pos % 8) + size) > 16) {
		value |= (uint32_t)reg[((reg_size - pos + 7) / 8) - 3] << (16 - (pos % 8));
     3c6:	7d10      	ldrb	r0, [r2, #20]
     3c8:	0280      	lsls	r0, r0, #10
	}
	if (((pos % 8) + size) > 16) {
		value |= (uint32_t)reg[((reg_size - pos + 7) / 8) - 3] << (16 - (pos % 8));
     3ca:	4303      	orrs	r3, r0
     3cc:	430b      	orrs	r3, r1
	value = reg[((reg_size - pos + 7) / 8) - 1] >> (pos % 8);
     3ce:	7e10      	ldrb	r0, [r2, #24]
     3d0:	11c0      	asrs	r0, r0, #7
		value |= (uint32_t)reg[((reg_size - pos + 7) / 8) - 2] << (8 - (pos % 8));
     3d2:	7dd1      	ldrb	r1, [r2, #23]
     3d4:	0049      	lsls	r1, r1, #1
     3d6:	4308      	orrs	r0, r1
	}
	value &=  ((uint32_t)1 << size) - 1;
     3d8:	051b      	lsls	r3, r3, #20
     3da:	0d1b      	lsrs	r3, r3, #20
		uint32_t blocknr = ((SD_CSD_1_0_C_SIZE(sd_mmc_card->csd) + 1) *
     3dc:	3301      	adds	r3, #1
     3de:	2107      	movs	r1, #7
     3e0:	4001      	ands	r1, r0
				(1 << (SD_CSD_1_0_C_SIZE_MULT(sd_mmc_card->csd) + 2)));
     3e2:	3102      	adds	r1, #2
		uint32_t blocknr = ((SD_CSD_1_0_C_SIZE(sd_mmc_card->csd) + 1) *
     3e4:	408b      	lsls	r3, r1
     3e6:	7cd0      	ldrb	r0, [r2, #19]
     3e8:	210f      	movs	r1, #15
     3ea:	4001      	ands	r1, r0
		sd_mmc_card->capacity = blocknr *
     3ec:	408b      	lsls	r3, r1
				/ 1024;
     3ee:	0a9b      	lsrs	r3, r3, #10
		sd_mmc_card->capacity = blocknr *
     3f0:	6053      	str	r3, [r2, #4]
	if (!driver_send_cmd(SDMMC_CMD55_APP_CMD, (uint32_t)sd_mmc_card->rca << 16)) {
     3f2:	8911      	ldrh	r1, [r2, #8]
     3f4:	0409      	lsls	r1, r1, #16
     3f6:	4877      	ldr	r0, [pc, #476]	; (5d4 <sd_mmc_check+0x37c>)
     3f8:	4b69      	ldr	r3, [pc, #420]	; (5a0 <sd_mmc_check+0x348>)
     3fa:	4798      	blx	r3
     3fc:	2800      	cmp	r0, #0
     3fe:	d100      	bne.n	402 <sd_mmc_check+0x1aa>
     400:	e74a      	b.n	298 <sd_mmc_check+0x40>
	if (!driver_adtc_start(SD_ACMD51_SEND_SCR, 0,
     402:	2301      	movs	r3, #1
     404:	9300      	str	r3, [sp, #0]
     406:	2208      	movs	r2, #8
     408:	2100      	movs	r1, #0
     40a:	4873      	ldr	r0, [pc, #460]	; (5d8 <sd_mmc_check+0x380>)
     40c:	4d73      	ldr	r5, [pc, #460]	; (5dc <sd_mmc_check+0x384>)
     40e:	47a8      	blx	r5
     410:	2800      	cmp	r0, #0
     412:	d100      	bne.n	416 <sd_mmc_check+0x1be>
     414:	e740      	b.n	298 <sd_mmc_check+0x40>
	if (!driver_start_read_blocks(scr, 1)) {
     416:	2101      	movs	r1, #1
     418:	a806      	add	r0, sp, #24
     41a:	4b71      	ldr	r3, [pc, #452]	; (5e0 <sd_mmc_check+0x388>)
     41c:	4798      	blx	r3
     41e:	2800      	cmp	r0, #0
     420:	d100      	bne.n	424 <sd_mmc_check+0x1cc>
     422:	e739      	b.n	298 <sd_mmc_check+0x40>
	if (!driver_wait_end_of_read_blocks()) {
     424:	4b6f      	ldr	r3, [pc, #444]	; (5e4 <sd_mmc_check+0x38c>)
     426:	4798      	blx	r3
     428:	2800      	cmp	r0, #0
     42a:	d100      	bne.n	42e <sd_mmc_check+0x1d6>
     42c:	e734      	b.n	298 <sd_mmc_check+0x40>
	value = reg[((reg_size - pos + 7) / 8) - 1] >> (pos % 8);
     42e:	ab06      	add	r3, sp, #24
	switch (SD_SCR_SD_SPEC(scr)) {
     430:	781b      	ldrb	r3, [r3, #0]
     432:	220f      	movs	r2, #15
     434:	4013      	ands	r3, r2
     436:	2b01      	cmp	r3, #1
     438:	d100      	bne.n	43c <sd_mmc_check+0x1e4>
     43a:	e119      	b.n	670 <sd_mmc_check+0x418>
     43c:	2b00      	cmp	r3, #0
     43e:	d100      	bne.n	442 <sd_mmc_check+0x1ea>
     440:	e109      	b.n	656 <sd_mmc_check+0x3fe>
     442:	2b02      	cmp	r3, #2
     444:	d100      	bne.n	448 <sd_mmc_check+0x1f0>
     446:	e118      	b.n	67a <sd_mmc_check+0x422>
		sd_mmc_card->version = CARD_VER_SD_1_0;
     448:	4b53      	ldr	r3, [pc, #332]	; (598 <sd_mmc_check+0x340>)
     44a:	681b      	ldr	r3, [r3, #0]
     44c:	2210      	movs	r2, #16
     44e:	731a      	strb	r2, [r3, #12]
     450:	e105      	b.n	65e <sd_mmc_check+0x406>
	if (!driver_send_cmd(SDMMC_SPI_CMD58_READ_OCR, 0)) {
     452:	2100      	movs	r1, #0
     454:	4858      	ldr	r0, [pc, #352]	; (5b8 <sd_mmc_check+0x360>)
     456:	4b52      	ldr	r3, [pc, #328]	; (5a0 <sd_mmc_check+0x348>)
     458:	4798      	blx	r3
     45a:	2800      	cmp	r0, #0
     45c:	d100      	bne.n	460 <sd_mmc_check+0x208>
     45e:	e71b      	b.n	298 <sd_mmc_check+0x40>
	if ((driver_get_response() & OCR_ACCESS_MODE_MASK)
     460:	4b54      	ldr	r3, [pc, #336]	; (5b4 <sd_mmc_check+0x35c>)
     462:	4798      	blx	r3
     464:	23c0      	movs	r3, #192	; 0xc0
     466:	05db      	lsls	r3, r3, #23
     468:	4018      	ands	r0, r3
     46a:	2380      	movs	r3, #128	; 0x80
     46c:	05db      	lsls	r3, r3, #23
     46e:	4298      	cmp	r0, r3
     470:	d105      	bne.n	47e <sd_mmc_check+0x226>
		sd_mmc_card->type |= CARD_TYPE_HC;
     472:	4b49      	ldr	r3, [pc, #292]	; (598 <sd_mmc_check+0x340>)
     474:	681a      	ldr	r2, [r3, #0]
     476:	7ad1      	ldrb	r1, [r2, #11]
     478:	2308      	movs	r3, #8
     47a:	430b      	orrs	r3, r1
     47c:	72d3      	strb	r3, [r2, #11]
	if (!driver_send_cmd(SDMMC_SPI_CMD59_CRC_ON_OFF, 0)) {
     47e:	2100      	movs	r1, #0
     480:	4850      	ldr	r0, [pc, #320]	; (5c4 <sd_mmc_check+0x36c>)
     482:	4b47      	ldr	r3, [pc, #284]	; (5a0 <sd_mmc_check+0x348>)
     484:	4798      	blx	r3
     486:	2800      	cmp	r0, #0
     488:	d100      	bne.n	48c <sd_mmc_check+0x234>
     48a:	e705      	b.n	298 <sd_mmc_check+0x40>
	if (!sd_mmc_cmd9_spi()) {
     48c:	4b4e      	ldr	r3, [pc, #312]	; (5c8 <sd_mmc_check+0x370>)
     48e:	4798      	blx	r3
     490:	2800      	cmp	r0, #0
     492:	d100      	bne.n	496 <sd_mmc_check+0x23e>
     494:	e700      	b.n	298 <sd_mmc_check+0x40>
	switch (MMC_CSD_SPEC_VERS(sd_mmc_card->csd)) {
     496:	4b40      	ldr	r3, [pc, #256]	; (598 <sd_mmc_check+0x340>)
     498:	681a      	ldr	r2, [r3, #0]
     49a:	7b93      	ldrb	r3, [r2, #14]
	value &=  ((uint32_t)1 << size) - 1;
     49c:	069b      	lsls	r3, r3, #26
     49e:	0f1b      	lsrs	r3, r3, #28
     4a0:	2b02      	cmp	r3, #2
     4a2:	d100      	bne.n	4a6 <sd_mmc_check+0x24e>
     4a4:	e0a8      	b.n	5f8 <sd_mmc_check+0x3a0>
     4a6:	d907      	bls.n	4b8 <sd_mmc_check+0x260>
     4a8:	2b03      	cmp	r3, #3
     4aa:	d100      	bne.n	4ae <sd_mmc_check+0x256>
     4ac:	e0a7      	b.n	5fe <sd_mmc_check+0x3a6>
     4ae:	2b04      	cmp	r3, #4
     4b0:	d104      	bne.n	4bc <sd_mmc_check+0x264>
		sd_mmc_card->version = CARD_VER_MMC_4;
     4b2:	2340      	movs	r3, #64	; 0x40
     4b4:	7313      	strb	r3, [r2, #12]
     4b6:	e003      	b.n	4c0 <sd_mmc_check+0x268>
	switch (MMC_CSD_SPEC_VERS(sd_mmc_card->csd)) {
     4b8:	2b01      	cmp	r3, #1
     4ba:	d066      	beq.n	58a <sd_mmc_check+0x332>
		sd_mmc_card->version = CARD_VER_MMC_1_2;
     4bc:	2312      	movs	r3, #18
     4be:	7313      	strb	r3, [r2, #12]
	value = reg[((reg_size - pos + 7) / 8) - 1] >> (pos % 8);
     4c0:	7c53      	ldrb	r3, [r2, #17]
	mul = mmc_trans_multipliers[(tran_speed >> 3) & 0xF];
     4c2:	0659      	lsls	r1, r3, #25
     4c4:	0f09      	lsrs	r1, r1, #28
     4c6:	0089      	lsls	r1, r1, #2
	unit = sd_mmc_trans_units[tran_speed & 0x7];
     4c8:	2007      	movs	r0, #7
     4ca:	4003      	ands	r3, r0
     4cc:	009b      	lsls	r3, r3, #2
	sd_mmc_card->clock = unit * mul * 1000;
     4ce:	483f      	ldr	r0, [pc, #252]	; (5cc <sd_mmc_check+0x374>)
     4d0:	5818      	ldr	r0, [r3, r0]
     4d2:	23fa      	movs	r3, #250	; 0xfa
     4d4:	009b      	lsls	r3, r3, #2
     4d6:	4343      	muls	r3, r0
     4d8:	4843      	ldr	r0, [pc, #268]	; (5e8 <sd_mmc_check+0x390>)
     4da:	5809      	ldr	r1, [r1, r0]
     4dc:	434b      	muls	r3, r1
     4de:	6013      	str	r3, [r2, #0]
     4e0:	7d91      	ldrb	r1, [r2, #22]
     4e2:	1189      	asrs	r1, r1, #6
		value |= (uint32_t)reg[((reg_size - pos + 7) / 8) - 2] << (8 - (pos % 8));
     4e4:	7d53      	ldrb	r3, [r2, #21]
     4e6:	009b      	lsls	r3, r3, #2
		value |= (uint32_t)reg[((reg_size - pos + 7) / 8) - 3] << (16 - (pos % 8));
     4e8:	7d10      	ldrb	r0, [r2, #20]
     4ea:	0280      	lsls	r0, r0, #10
		value |= (uint32_t)reg[((reg_size - pos + 7) / 8) - 3] << (16 - (pos % 8));
     4ec:	4303      	orrs	r3, r0
     4ee:	430b      	orrs	r3, r1
	value &=  ((uint32_t)1 << size) - 1;
     4f0:	051b      	lsls	r3, r3, #20
     4f2:	0d1b      	lsrs	r3, r3, #20
	if (MMC_CSD_C_SIZE(sd_mmc_card->csd) != 0xFFF) {
     4f4:	493d      	ldr	r1, [pc, #244]	; (5ec <sd_mmc_check+0x394>)
     4f6:	428b      	cmp	r3, r1
     4f8:	d00f      	beq.n	51a <sd_mmc_check+0x2c2>
	value = reg[((reg_size - pos + 7) / 8) - 1] >> (pos % 8);
     4fa:	7e10      	ldrb	r0, [r2, #24]
     4fc:	11c0      	asrs	r0, r0, #7
		value |= (uint32_t)reg[((reg_size - pos + 7) / 8) - 2] << (8 - (pos % 8));
     4fe:	7dd1      	ldrb	r1, [r2, #23]
     500:	0049      	lsls	r1, r1, #1
     502:	4301      	orrs	r1, r0
		uint32_t blocknr = ((MMC_CSD_C_SIZE(sd_mmc_card->csd) + 1) *
     504:	3301      	adds	r3, #1
	value &=  ((uint32_t)1 << size) - 1;
     506:	2007      	movs	r0, #7
     508:	4001      	ands	r1, r0
			(1 << (MMC_CSD_C_SIZE_MULT(sd_mmc_card->csd) + 2)));
     50a:	3102      	adds	r1, #2
		uint32_t blocknr = ((MMC_CSD_C_SIZE(sd_mmc_card->csd) + 1) *
     50c:	408b      	lsls	r3, r1
     50e:	7cd1      	ldrb	r1, [r2, #19]
     510:	3008      	adds	r0, #8
     512:	4001      	ands	r1, r0
		sd_mmc_card->capacity = blocknr *
     514:	408b      	lsls	r3, r1
			(1 << MMC_CSD_READ_BL_LEN(sd_mmc_card->csd)) / 1024;
     516:	0a9b      	lsrs	r3, r3, #10
		sd_mmc_card->capacity = blocknr *
     518:	6053      	str	r3, [r2, #4]
	if (sd_mmc_card->version >= CARD_VER_MMC_4) {
     51a:	7b13      	ldrb	r3, [r2, #12]
     51c:	2b3f      	cmp	r3, #63	; 0x3f
     51e:	d97b      	bls.n	618 <sd_mmc_check+0x3c0>
	if (!driver_adtc_start(MMC_CMD8_SEND_EXT_CSD, 0,
     520:	2100      	movs	r1, #0
     522:	9100      	str	r1, [sp, #0]
     524:	2301      	movs	r3, #1
     526:	2280      	movs	r2, #128	; 0x80
     528:	0092      	lsls	r2, r2, #2
     52a:	4831      	ldr	r0, [pc, #196]	; (5f0 <sd_mmc_check+0x398>)
     52c:	4d2b      	ldr	r5, [pc, #172]	; (5dc <sd_mmc_check+0x384>)
     52e:	47a8      	blx	r5
     530:	2800      	cmp	r0, #0
     532:	d100      	bne.n	536 <sd_mmc_check+0x2de>
     534:	e6b0      	b.n	298 <sd_mmc_check+0x40>
     536:	2500      	movs	r5, #0
		if (!driver_read_word(&ext_csd)) {
     538:	4e2e      	ldr	r6, [pc, #184]	; (5f4 <sd_mmc_check+0x39c>)
     53a:	a805      	add	r0, sp, #20
     53c:	47b0      	blx	r6
     53e:	2800      	cmp	r0, #0
     540:	d100      	bne.n	544 <sd_mmc_check+0x2ec>
     542:	e6a9      	b.n	298 <sd_mmc_check+0x40>
	for (i = 0; i < (EXT_CSD_CARD_TYPE_INDEX + 4) / 4; i++) {
     544:	3501      	adds	r5, #1
     546:	b2ad      	uxth	r5, r5
     548:	2d32      	cmp	r5, #50	; 0x32
     54a:	d1f6      	bne.n	53a <sd_mmc_check+0x2e2>
	if (MMC_CSD_C_SIZE(sd_mmc_card->csd) == 0xFFF) {
     54c:	4b12      	ldr	r3, [pc, #72]	; (598 <sd_mmc_check+0x340>)
     54e:	6819      	ldr	r1, [r3, #0]
	value = reg[((reg_size - pos + 7) / 8) - 1] >> (pos % 8);
     550:	7d8a      	ldrb	r2, [r1, #22]
     552:	1192      	asrs	r2, r2, #6
		value |= (uint32_t)reg[((reg_size - pos + 7) / 8) - 2] << (8 - (pos % 8));
     554:	7d4b      	ldrb	r3, [r1, #21]
     556:	009b      	lsls	r3, r3, #2
		value |= (uint32_t)reg[((reg_size - pos + 7) / 8) - 3] << (16 - (pos % 8));
     558:	7d09      	ldrb	r1, [r1, #20]
     55a:	0289      	lsls	r1, r1, #10
		value |= (uint32_t)reg[((reg_size - pos + 7) / 8) - 3] << (16 - (pos % 8));
     55c:	430b      	orrs	r3, r1
     55e:	4313      	orrs	r3, r2
	value &=  ((uint32_t)1 << size) - 1;
     560:	051b      	lsls	r3, r3, #20
     562:	0d1b      	lsrs	r3, r3, #20
     564:	4a21      	ldr	r2, [pc, #132]	; (5ec <sd_mmc_check+0x394>)
     566:	4293      	cmp	r3, r2
     568:	d154      	bne.n	614 <sd_mmc_check+0x3bc>
			if (!driver_read_word(&sec_count)) {
     56a:	4e22      	ldr	r6, [pc, #136]	; (5f4 <sd_mmc_check+0x39c>)
     56c:	a806      	add	r0, sp, #24
     56e:	47b0      	blx	r6
     570:	2800      	cmp	r0, #0
     572:	d100      	bne.n	576 <sd_mmc_check+0x31e>
     574:	e690      	b.n	298 <sd_mmc_check+0x40>
		for (; i <(EXT_CSD_SEC_COUNT_INDEX + 4) / 4; i++) {
     576:	3501      	adds	r5, #1
     578:	b2ad      	uxth	r5, r5
     57a:	2d35      	cmp	r5, #53	; 0x35
     57c:	d9f6      	bls.n	56c <sd_mmc_check+0x314>
		sd_mmc_card->capacity = sec_count / 2;
     57e:	4b06      	ldr	r3, [pc, #24]	; (598 <sd_mmc_check+0x340>)
     580:	681a      	ldr	r2, [r3, #0]
     582:	9b06      	ldr	r3, [sp, #24]
     584:	085b      	lsrs	r3, r3, #1
     586:	6053      	str	r3, [r2, #4]
     588:	e044      	b.n	614 <sd_mmc_check+0x3bc>
		sd_mmc_card->version = CARD_VER_MMC_1_4;
     58a:	2314      	movs	r3, #20
     58c:	7313      	strb	r3, [r2, #12]
     58e:	e797      	b.n	4c0 <sd_mmc_check+0x268>
     590:	0000013d 	.word	0x0000013d
     594:	0000021d 	.word	0x0000021d
     598:	2000021c 	.word	0x2000021c
     59c:	00000e4d 	.word	0x00000e4d
     5a0:	00001015 	.word	0x00001015
     5a4:	00005508 	.word	0x00005508
     5a8:	00001110 	.word	0x00001110
     5ac:	00000199 	.word	0x00000199
     5b0:	00000115 	.word	0x00000115
     5b4:	0000102d 	.word	0x0000102d
     5b8:	0000053a 	.word	0x0000053a
     5bc:	00001bef 	.word	0x00001bef
     5c0:	00001101 	.word	0x00001101
     5c4:	0000113b 	.word	0x0000113b
     5c8:	000001d1 	.word	0x000001d1
     5cc:	00006d5c 	.word	0x00006d5c
     5d0:	00006d78 	.word	0x00006d78
     5d4:	00001137 	.word	0x00001137
     5d8:	00081133 	.word	0x00081133
     5dc:	00000e85 	.word	0x00000e85
     5e0:	000010b1 	.word	0x000010b1
     5e4:	0000113d 	.word	0x0000113d
     5e8:	00006d1c 	.word	0x00006d1c
     5ec:	00000fff 	.word	0x00000fff
     5f0:	00081108 	.word	0x00081108
     5f4:	00001039 	.word	0x00001039
		sd_mmc_card->version = CARD_VER_MMC_2_2;
     5f8:	2322      	movs	r3, #34	; 0x22
     5fa:	7313      	strb	r3, [r2, #12]
     5fc:	e760      	b.n	4c0 <sd_mmc_check+0x268>
		sd_mmc_card->version = CARD_VER_MMC_3;
     5fe:	2330      	movs	r3, #48	; 0x30
     600:	7313      	strb	r3, [r2, #12]
     602:	e75d      	b.n	4c0 <sd_mmc_check+0x268>
		if (!driver_read_word(&sec_count)) {
     604:	a806      	add	r0, sp, #24
     606:	4b36      	ldr	r3, [pc, #216]	; (6e0 <sd_mmc_check+0x488>)
     608:	4798      	blx	r3
     60a:	2800      	cmp	r0, #0
     60c:	d100      	bne.n	610 <sd_mmc_check+0x3b8>
     60e:	e643      	b.n	298 <sd_mmc_check+0x40>
	for (; i < EXT_CSD_BSIZE / 4; i++) {
     610:	3501      	adds	r5, #1
     612:	b2ad      	uxth	r5, r5
     614:	2d7f      	cmp	r5, #127	; 0x7f
     616:	d9f5      	bls.n	604 <sd_mmc_check+0x3ac>
	if (!driver_send_cmd(SDMMC_CMD16_SET_BLOCKLEN, SD_MMC_BLOCK_SIZE)) {
     618:	2180      	movs	r1, #128	; 0x80
     61a:	0089      	lsls	r1, r1, #2
     61c:	4831      	ldr	r0, [pc, #196]	; (6e4 <sd_mmc_check+0x48c>)
     61e:	4b32      	ldr	r3, [pc, #200]	; (6e8 <sd_mmc_check+0x490>)
     620:	4798      	blx	r3
     622:	2800      	cmp	r0, #0
     624:	d100      	bne.n	628 <sd_mmc_check+0x3d0>
     626:	e637      	b.n	298 <sd_mmc_check+0x40>
	if (!sd_mmc_cmd13()) {
     628:	4b30      	ldr	r3, [pc, #192]	; (6ec <sd_mmc_check+0x494>)
     62a:	4798      	blx	r3
     62c:	2800      	cmp	r0, #0
     62e:	d100      	bne.n	632 <sd_mmc_check+0x3da>
     630:	e632      	b.n	298 <sd_mmc_check+0x40>
	sd_mmc_configure_slot();
     632:	4b2f      	ldr	r3, [pc, #188]	; (6f0 <sd_mmc_check+0x498>)
     634:	4798      	blx	r3
     636:	e65e      	b.n	2f6 <sd_mmc_check+0x9e>
	value = reg[((reg_size - pos + 7) / 8) - 1] >> (pos % 8);
     638:	7dd0      	ldrb	r0, [r2, #23]
		value |= (uint32_t)reg[((reg_size - pos + 7) / 8) - 2] << (8 - (pos % 8));
     63a:	7d93      	ldrb	r3, [r2, #22]
     63c:	021b      	lsls	r3, r3, #8
		value |= (uint32_t)reg[((reg_size - pos + 7) / 8) - 3] << (16 - (pos % 8));
     63e:	7d51      	ldrb	r1, [r2, #21]
     640:	0409      	lsls	r1, r1, #16
		value |= (uint32_t)reg[((reg_size - pos + 7) / 8) - 3] << (16 - (pos % 8));
     642:	430b      	orrs	r3, r1
     644:	4303      	orrs	r3, r0
	value &=  ((uint32_t)1 << size) - 1;
     646:	029b      	lsls	r3, r3, #10
				* 512;
     648:	085b      	lsrs	r3, r3, #1
     64a:	2180      	movs	r1, #128	; 0x80
     64c:	0089      	lsls	r1, r1, #2
     64e:	468c      	mov	ip, r1
     650:	4463      	add	r3, ip
		sd_mmc_card->capacity =
     652:	6053      	str	r3, [r2, #4]
     654:	e6cd      	b.n	3f2 <sd_mmc_check+0x19a>
		sd_mmc_card->version = CARD_VER_SD_1_0;
     656:	4b27      	ldr	r3, [pc, #156]	; (6f4 <sd_mmc_check+0x49c>)
     658:	681b      	ldr	r3, [r3, #0]
     65a:	2210      	movs	r2, #16
     65c:	731a      	strb	r2, [r3, #12]
	if ((sd_mmc_card->type & CARD_TYPE_SD) &&
     65e:	4b25      	ldr	r3, [pc, #148]	; (6f4 <sd_mmc_check+0x49c>)
     660:	681b      	ldr	r3, [r3, #0]
     662:	7adb      	ldrb	r3, [r3, #11]
     664:	2209      	movs	r2, #9
     666:	4013      	ands	r3, r2
     668:	2b01      	cmp	r3, #1
     66a:	d000      	beq.n	66e <sd_mmc_check+0x416>
     66c:	e638      	b.n	2e0 <sd_mmc_check+0x88>
     66e:	e630      	b.n	2d2 <sd_mmc_check+0x7a>
		sd_mmc_card->version = CARD_VER_SD_1_10;
     670:	4b20      	ldr	r3, [pc, #128]	; (6f4 <sd_mmc_check+0x49c>)
     672:	681b      	ldr	r3, [r3, #0]
     674:	221a      	movs	r2, #26
     676:	731a      	strb	r2, [r3, #12]
     678:	e7f1      	b.n	65e <sd_mmc_check+0x406>
	value = reg[((reg_size - pos + 7) / 8) - 1] >> (pos % 8);
     67a:	ab06      	add	r3, sp, #24
		if (SD_SCR_SD_SPEC3(scr) == SD_SCR_SD_SPEC_3_00) {
     67c:	789b      	ldrb	r3, [r3, #2]
     67e:	09db      	lsrs	r3, r3, #7
     680:	2b01      	cmp	r3, #1
     682:	d104      	bne.n	68e <sd_mmc_check+0x436>
			sd_mmc_card->version = CARD_VER_SD_3_0;
     684:	4b1b      	ldr	r3, [pc, #108]	; (6f4 <sd_mmc_check+0x49c>)
     686:	681b      	ldr	r3, [r3, #0]
     688:	2230      	movs	r2, #48	; 0x30
     68a:	731a      	strb	r2, [r3, #12]
     68c:	e7e7      	b.n	65e <sd_mmc_check+0x406>
			sd_mmc_card->version = CARD_VER_SD_2_0;
     68e:	4b19      	ldr	r3, [pc, #100]	; (6f4 <sd_mmc_check+0x49c>)
     690:	681b      	ldr	r3, [r3, #0]
     692:	2220      	movs	r2, #32
     694:	731a      	strb	r2, [r3, #12]
     696:	e7e2      	b.n	65e <sd_mmc_check+0x406>
	*v2 = 0;
     698:	2600      	movs	r6, #0
     69a:	e60d      	b.n	2b8 <sd_mmc_check+0x60>
     69c:	1e73      	subs	r3, r6, #1
     69e:	419e      	sbcs	r6, r3
     6a0:	07b3      	lsls	r3, r6, #30
     6a2:	9303      	str	r3, [sp, #12]
	if (sd_mmc_card->type & CARD_TYPE_SD) {
     6a4:	4d14      	ldr	r5, [pc, #80]	; (6f8 <sd_mmc_check+0x4a0>)
		if (!driver_send_cmd(SDMMC_CMD55_APP_CMD, 0)) {
     6a6:	4f10      	ldr	r7, [pc, #64]	; (6e8 <sd_mmc_check+0x490>)
		if (!driver_send_cmd(SD_SPI_ACMD41_SD_SEND_OP_COND, arg)) {
     6a8:	46b8      	mov	r8, r7
		resp = driver_get_response();
     6aa:	4e14      	ldr	r6, [pc, #80]	; (6fc <sd_mmc_check+0x4a4>)
		if (!driver_send_cmd(SDMMC_CMD55_APP_CMD, 0)) {
     6ac:	2100      	movs	r1, #0
     6ae:	4814      	ldr	r0, [pc, #80]	; (700 <sd_mmc_check+0x4a8>)
     6b0:	47b8      	blx	r7
     6b2:	2800      	cmp	r0, #0
     6b4:	d100      	bne.n	6b8 <sd_mmc_check+0x460>
     6b6:	e638      	b.n	32a <sd_mmc_check+0xd2>
		if (!driver_send_cmd(SD_SPI_ACMD41_SD_SEND_OP_COND, arg)) {
     6b8:	9903      	ldr	r1, [sp, #12]
     6ba:	4812      	ldr	r0, [pc, #72]	; (704 <sd_mmc_check+0x4ac>)
     6bc:	47c0      	blx	r8
     6be:	2800      	cmp	r0, #0
     6c0:	d100      	bne.n	6c4 <sd_mmc_check+0x46c>
     6c2:	e632      	b.n	32a <sd_mmc_check+0xd2>
		resp = driver_get_response();
     6c4:	47b0      	blx	r6
		if (!(resp & R1_SPI_IDLE)) {
     6c6:	07c3      	lsls	r3, r0, #31
     6c8:	d400      	bmi.n	6cc <sd_mmc_check+0x474>
     6ca:	e628      	b.n	31e <sd_mmc_check+0xc6>
     6cc:	3d01      	subs	r5, #1
		if (retry-- == 0) {
     6ce:	2d00      	cmp	r5, #0
     6d0:	d1ec      	bne.n	6ac <sd_mmc_check+0x454>
     6d2:	e62a      	b.n	32a <sd_mmc_check+0xd2>
	if ((sd_mmc_card->type & CARD_TYPE_SD) &&
     6d4:	2209      	movs	r2, #9
     6d6:	4013      	ands	r3, r2
     6d8:	2b01      	cmp	r3, #1
     6da:	d000      	beq.n	6de <sd_mmc_check+0x486>
     6dc:	e609      	b.n	2f2 <sd_mmc_check+0x9a>
     6de:	e5f8      	b.n	2d2 <sd_mmc_check+0x7a>
     6e0:	00001039 	.word	0x00001039
     6e4:	00001110 	.word	0x00001110
     6e8:	00001015 	.word	0x00001015
     6ec:	00000199 	.word	0x00000199
     6f0:	00000115 	.word	0x00000115
     6f4:	2000021c 	.word	0x2000021c
     6f8:	00001bef 	.word	0x00001bef
     6fc:	0000102d 	.word	0x0000102d
     700:	00001137 	.word	0x00001137
     704:	00001129 	.word	0x00001129

00000708 <sd_mmc_get_type>:

card_type_t sd_mmc_get_type(uint8_t slot)
{
     708:	b510      	push	{r4, lr}
	if (SD_MMC_OK != sd_mmc_select_slot(slot)) {
     70a:	4b06      	ldr	r3, [pc, #24]	; (724 <sd_mmc_get_type+0x1c>)
     70c:	4798      	blx	r3
		return CARD_TYPE_UNKNOWN;
     70e:	2300      	movs	r3, #0
	if (SD_MMC_OK != sd_mmc_select_slot(slot)) {
     710:	2800      	cmp	r0, #0
     712:	d001      	beq.n	718 <sd_mmc_get_type+0x10>
	}
	sd_mmc_deselect_slot();
	return sd_mmc_card->type;
}
     714:	0018      	movs	r0, r3
     716:	bd10      	pop	{r4, pc}
	sd_mmc_deselect_slot();
     718:	4b03      	ldr	r3, [pc, #12]	; (728 <sd_mmc_get_type+0x20>)
     71a:	4798      	blx	r3
	return sd_mmc_card->type;
     71c:	4b03      	ldr	r3, [pc, #12]	; (72c <sd_mmc_get_type+0x24>)
     71e:	681b      	ldr	r3, [r3, #0]
     720:	7adb      	ldrb	r3, [r3, #11]
     722:	e7f7      	b.n	714 <sd_mmc_get_type+0xc>
     724:	0000013d 	.word	0x0000013d
     728:	0000021d 	.word	0x0000021d
     72c:	2000021c 	.word	0x2000021c

00000730 <sd_mmc_get_capacity>:
	sd_mmc_deselect_slot();
	return sd_mmc_card->version;
}

uint32_t sd_mmc_get_capacity(uint8_t slot)
{
     730:	b510      	push	{r4, lr}
	if (SD_MMC_OK != sd_mmc_select_slot(slot)) {
     732:	4b06      	ldr	r3, [pc, #24]	; (74c <sd_mmc_get_capacity+0x1c>)
     734:	4798      	blx	r3
		return 0;
     736:	2300      	movs	r3, #0
	if (SD_MMC_OK != sd_mmc_select_slot(slot)) {
     738:	2800      	cmp	r0, #0
     73a:	d001      	beq.n	740 <sd_mmc_get_capacity+0x10>
	}
	sd_mmc_deselect_slot();
	return sd_mmc_card->capacity;
}
     73c:	0018      	movs	r0, r3
     73e:	bd10      	pop	{r4, pc}
	sd_mmc_deselect_slot();
     740:	4b03      	ldr	r3, [pc, #12]	; (750 <sd_mmc_get_capacity+0x20>)
     742:	4798      	blx	r3
	return sd_mmc_card->capacity;
     744:	4b03      	ldr	r3, [pc, #12]	; (754 <sd_mmc_get_capacity+0x24>)
     746:	681b      	ldr	r3, [r3, #0]
     748:	685b      	ldr	r3, [r3, #4]
     74a:	e7f7      	b.n	73c <sd_mmc_get_capacity+0xc>
     74c:	0000013d 	.word	0x0000013d
     750:	0000021d 	.word	0x0000021d
     754:	2000021c 	.word	0x2000021c

00000758 <sd_mmc_is_write_protected>:
			== SD_MMC_0_WP_DETECT_VALUE) {
		return true;
	}
#endif
	return false;
}
     758:	2000      	movs	r0, #0
     75a:	4770      	bx	lr

0000075c <sd_mmc_init_read_blocks>:

sd_mmc_err_t sd_mmc_init_read_blocks(uint8_t slot, uint32_t start,
		uint16_t nb_block)
{
     75c:	b570      	push	{r4, r5, r6, lr}
     75e:	b082      	sub	sp, #8
     760:	000e      	movs	r6, r1
     762:	0015      	movs	r5, r2
	sd_mmc_err_t sd_mmc_err;
	uint32_t cmd, arg, resp;

	sd_mmc_err = sd_mmc_select_slot(slot);
     764:	4b16      	ldr	r3, [pc, #88]	; (7c0 <sd_mmc_init_read_blocks+0x64>)
     766:	4798      	blx	r3
     768:	1e04      	subs	r4, r0, #0
	if (sd_mmc_err != SD_MMC_OK) {
     76a:	d002      	beq.n	772 <sd_mmc_init_read_blocks+0x16>
		}
	}
	sd_mmc_nb_block_remaining = nb_block;
	sd_mmc_nb_block_to_tranfer = nb_block;
	return SD_MMC_OK;
}
     76c:	0020      	movs	r0, r4
     76e:	b002      	add	sp, #8
     770:	bd70      	pop	{r4, r5, r6, pc}
	if (!sd_mmc_cmd13()) {
     772:	4b14      	ldr	r3, [pc, #80]	; (7c4 <sd_mmc_init_read_blocks+0x68>)
     774:	4798      	blx	r3
     776:	2800      	cmp	r0, #0
     778:	d017      	beq.n	7aa <sd_mmc_init_read_blocks+0x4e>
	if (nb_block > 1) {
     77a:	2d01      	cmp	r5, #1
     77c:	d919      	bls.n	7b2 <sd_mmc_init_read_blocks+0x56>
		cmd = SDMMC_CMD18_READ_MULTIPLE_BLOCK;
     77e:	4812      	ldr	r0, [pc, #72]	; (7c8 <sd_mmc_init_read_blocks+0x6c>)
	if (sd_mmc_card->type & CARD_TYPE_HC) {
     780:	4b12      	ldr	r3, [pc, #72]	; (7cc <sd_mmc_init_read_blocks+0x70>)
     782:	681b      	ldr	r3, [r3, #0]
     784:	7adb      	ldrb	r3, [r3, #11]
     786:	071b      	lsls	r3, r3, #28
     788:	d400      	bmi.n	78c <sd_mmc_init_read_blocks+0x30>
		arg = (start * SD_MMC_BLOCK_SIZE);
     78a:	0276      	lsls	r6, r6, #9
	if (!driver_adtc_start(cmd, arg, SD_MMC_BLOCK_SIZE, nb_block, true)) {
     78c:	2301      	movs	r3, #1
     78e:	9300      	str	r3, [sp, #0]
     790:	002b      	movs	r3, r5
     792:	2280      	movs	r2, #128	; 0x80
     794:	0092      	lsls	r2, r2, #2
     796:	0031      	movs	r1, r6
     798:	4e0d      	ldr	r6, [pc, #52]	; (7d0 <sd_mmc_init_read_blocks+0x74>)
     79a:	47b0      	blx	r6
     79c:	2800      	cmp	r0, #0
     79e:	d00a      	beq.n	7b6 <sd_mmc_init_read_blocks+0x5a>
	sd_mmc_nb_block_remaining = nb_block;
     7a0:	4b0c      	ldr	r3, [pc, #48]	; (7d4 <sd_mmc_init_read_blocks+0x78>)
     7a2:	801d      	strh	r5, [r3, #0]
	sd_mmc_nb_block_to_tranfer = nb_block;
     7a4:	4b0c      	ldr	r3, [pc, #48]	; (7d8 <sd_mmc_init_read_blocks+0x7c>)
     7a6:	801d      	strh	r5, [r3, #0]
	return SD_MMC_OK;
     7a8:	e7e0      	b.n	76c <sd_mmc_init_read_blocks+0x10>
		sd_mmc_deselect_slot();
     7aa:	4b0c      	ldr	r3, [pc, #48]	; (7dc <sd_mmc_init_read_blocks+0x80>)
     7ac:	4798      	blx	r3
		return SD_MMC_ERR_COMM;
     7ae:	3405      	adds	r4, #5
     7b0:	e7dc      	b.n	76c <sd_mmc_init_read_blocks+0x10>
		cmd = SDMMC_CMD17_READ_SINGLE_BLOCK;
     7b2:	480b      	ldr	r0, [pc, #44]	; (7e0 <sd_mmc_init_read_blocks+0x84>)
     7b4:	e7e4      	b.n	780 <sd_mmc_init_read_blocks+0x24>
		sd_mmc_deselect_slot();
     7b6:	4b09      	ldr	r3, [pc, #36]	; (7dc <sd_mmc_init_read_blocks+0x80>)
     7b8:	4798      	blx	r3
		return SD_MMC_ERR_COMM;
     7ba:	2405      	movs	r4, #5
     7bc:	e7d6      	b.n	76c <sd_mmc_init_read_blocks+0x10>
     7be:	46c0      	nop			; (mov r8, r8)
     7c0:	0000013d 	.word	0x0000013d
     7c4:	00000199 	.word	0x00000199
     7c8:	00101112 	.word	0x00101112
     7cc:	2000021c 	.word	0x2000021c
     7d0:	00000e85 	.word	0x00000e85
     7d4:	20000240 	.word	0x20000240
     7d8:	20000242 	.word	0x20000242
     7dc:	0000021d 	.word	0x0000021d
     7e0:	00081111 	.word	0x00081111

000007e4 <sd_mmc_start_read_blocks>:

sd_mmc_err_t sd_mmc_start_read_blocks(void *dest, uint16_t nb_block)
{
     7e4:	b510      	push	{r4, lr}
     7e6:	000c      	movs	r4, r1
	Assert(sd_mmc_nb_block_remaining >= nb_block);

	if (!driver_start_read_blocks(dest, nb_block)) {
     7e8:	4b07      	ldr	r3, [pc, #28]	; (808 <sd_mmc_start_read_blocks+0x24>)
     7ea:	4798      	blx	r3
     7ec:	2800      	cmp	r0, #0
     7ee:	d104      	bne.n	7fa <sd_mmc_start_read_blocks+0x16>
		sd_mmc_nb_block_remaining = 0;
     7f0:	2200      	movs	r2, #0
     7f2:	4b06      	ldr	r3, [pc, #24]	; (80c <sd_mmc_start_read_blocks+0x28>)
     7f4:	801a      	strh	r2, [r3, #0]
		return SD_MMC_ERR_COMM;
     7f6:	3005      	adds	r0, #5
	}
	sd_mmc_nb_block_remaining -= nb_block;
	return SD_MMC_OK;
}
     7f8:	bd10      	pop	{r4, pc}
	sd_mmc_nb_block_remaining -= nb_block;
     7fa:	4a04      	ldr	r2, [pc, #16]	; (80c <sd_mmc_start_read_blocks+0x28>)
     7fc:	8813      	ldrh	r3, [r2, #0]
     7fe:	1b1c      	subs	r4, r3, r4
     800:	8014      	strh	r4, [r2, #0]
	return SD_MMC_OK;
     802:	2000      	movs	r0, #0
     804:	e7f8      	b.n	7f8 <sd_mmc_start_read_blocks+0x14>
     806:	46c0      	nop			; (mov r8, r8)
     808:	000010b1 	.word	0x000010b1
     80c:	20000240 	.word	0x20000240

00000810 <sd_mmc_wait_end_of_read_blocks>:

sd_mmc_err_t sd_mmc_wait_end_of_read_blocks(bool abort)
{
     810:	b510      	push	{r4, lr}
     812:	0004      	movs	r4, r0
	if (!driver_wait_end_of_read_blocks()) {
     814:	4b14      	ldr	r3, [pc, #80]	; (868 <sd_mmc_wait_end_of_read_blocks+0x58>)
     816:	4798      	blx	r3
		return SD_MMC_ERR_COMM;
     818:	2305      	movs	r3, #5
	if (!driver_wait_end_of_read_blocks()) {
     81a:	2800      	cmp	r0, #0
     81c:	d101      	bne.n	822 <sd_mmc_wait_end_of_read_blocks+0x12>
	if (!driver_adtc_stop(SDMMC_CMD12_STOP_TRANSMISSION, 0)) {
		driver_adtc_stop(SDMMC_CMD12_STOP_TRANSMISSION, 0);
	}
	sd_mmc_deselect_slot();
	return SD_MMC_OK;
}
     81e:	0018      	movs	r0, r3
     820:	bd10      	pop	{r4, pc}
	if (abort) {
     822:	2c00      	cmp	r4, #0
     824:	d010      	beq.n	848 <sd_mmc_wait_end_of_read_blocks+0x38>
		sd_mmc_nb_block_remaining = 0;
     826:	2200      	movs	r2, #0
     828:	4b10      	ldr	r3, [pc, #64]	; (86c <sd_mmc_wait_end_of_read_blocks+0x5c>)
     82a:	801a      	strh	r2, [r3, #0]
	if (sd_mmc_nb_block_to_tranfer == 1) {
     82c:	4b10      	ldr	r3, [pc, #64]	; (870 <sd_mmc_wait_end_of_read_blocks+0x60>)
     82e:	881b      	ldrh	r3, [r3, #0]
     830:	2b01      	cmp	r3, #1
     832:	d00f      	beq.n	854 <sd_mmc_wait_end_of_read_blocks+0x44>
	if (!driver_adtc_stop(SDMMC_CMD12_STOP_TRANSMISSION, 0)) {
     834:	2100      	movs	r1, #0
     836:	480f      	ldr	r0, [pc, #60]	; (874 <sd_mmc_wait_end_of_read_blocks+0x64>)
     838:	4b0f      	ldr	r3, [pc, #60]	; (878 <sd_mmc_wait_end_of_read_blocks+0x68>)
     83a:	4798      	blx	r3
     83c:	2800      	cmp	r0, #0
     83e:	d00d      	beq.n	85c <sd_mmc_wait_end_of_read_blocks+0x4c>
	sd_mmc_deselect_slot();
     840:	4b0e      	ldr	r3, [pc, #56]	; (87c <sd_mmc_wait_end_of_read_blocks+0x6c>)
     842:	4798      	blx	r3
	return SD_MMC_OK;
     844:	2300      	movs	r3, #0
     846:	e7ea      	b.n	81e <sd_mmc_wait_end_of_read_blocks+0xe>
	} else if (sd_mmc_nb_block_remaining) {
     848:	4b08      	ldr	r3, [pc, #32]	; (86c <sd_mmc_wait_end_of_read_blocks+0x5c>)
     84a:	881a      	ldrh	r2, [r3, #0]
		return SD_MMC_OK;
     84c:	2300      	movs	r3, #0
	} else if (sd_mmc_nb_block_remaining) {
     84e:	2a00      	cmp	r2, #0
     850:	d0ec      	beq.n	82c <sd_mmc_wait_end_of_read_blocks+0x1c>
     852:	e7e4      	b.n	81e <sd_mmc_wait_end_of_read_blocks+0xe>
		sd_mmc_deselect_slot();
     854:	4b09      	ldr	r3, [pc, #36]	; (87c <sd_mmc_wait_end_of_read_blocks+0x6c>)
     856:	4798      	blx	r3
		return SD_MMC_OK;
     858:	2300      	movs	r3, #0
     85a:	e7e0      	b.n	81e <sd_mmc_wait_end_of_read_blocks+0xe>
		driver_adtc_stop(SDMMC_CMD12_STOP_TRANSMISSION, 0);
     85c:	2100      	movs	r1, #0
     85e:	4805      	ldr	r0, [pc, #20]	; (874 <sd_mmc_wait_end_of_read_blocks+0x64>)
     860:	4b05      	ldr	r3, [pc, #20]	; (878 <sd_mmc_wait_end_of_read_blocks+0x68>)
     862:	4798      	blx	r3
     864:	e7ec      	b.n	840 <sd_mmc_wait_end_of_read_blocks+0x30>
     866:	46c0      	nop			; (mov r8, r8)
     868:	0000113d 	.word	0x0000113d
     86c:	20000240 	.word	0x20000240
     870:	20000242 	.word	0x20000242
     874:	0000310c 	.word	0x0000310c
     878:	00001015 	.word	0x00001015
     87c:	0000021d 	.word	0x0000021d

00000880 <sd_mmc_init_write_blocks>:

sd_mmc_err_t sd_mmc_init_write_blocks(uint8_t slot, uint32_t start,
		uint16_t nb_block)
{
     880:	b570      	push	{r4, r5, r6, lr}
     882:	b082      	sub	sp, #8
     884:	000e      	movs	r6, r1
     886:	0015      	movs	r5, r2
	sd_mmc_err_t sd_mmc_err;
	uint32_t cmd, arg, resp;

	sd_mmc_err = sd_mmc_select_slot(slot);
     888:	4b11      	ldr	r3, [pc, #68]	; (8d0 <sd_mmc_init_write_blocks+0x50>)
     88a:	4798      	blx	r3
     88c:	1e04      	subs	r4, r0, #0
	if (sd_mmc_err != SD_MMC_OK) {
     88e:	d116      	bne.n	8be <sd_mmc_init_write_blocks+0x3e>
	if (sd_mmc_is_write_protected(slot)) {
		sd_mmc_deselect_slot();
		return SD_MMC_ERR_WP;
	}

	if (nb_block > 1) {
     890:	2d01      	cmp	r5, #1
     892:	d917      	bls.n	8c4 <sd_mmc_init_write_blocks+0x44>
		cmd = SDMMC_CMD25_WRITE_MULTIPLE_BLOCK;
     894:	480f      	ldr	r0, [pc, #60]	; (8d4 <sd_mmc_init_write_blocks+0x54>)
	}
	/*
	 * SDSC Card (CCS=0) uses byte unit address,
	 * SDHC and SDXC Cards (CCS=1) use block unit address (512 Bytes unit).
	 */
	if (sd_mmc_card->type & CARD_TYPE_HC) {
     896:	4b10      	ldr	r3, [pc, #64]	; (8d8 <sd_mmc_init_write_blocks+0x58>)
     898:	681b      	ldr	r3, [r3, #0]
     89a:	7adb      	ldrb	r3, [r3, #11]
     89c:	071b      	lsls	r3, r3, #28
     89e:	d400      	bmi.n	8a2 <sd_mmc_init_write_blocks+0x22>
		arg = start;
	} else {
		arg = (start * SD_MMC_BLOCK_SIZE);
     8a0:	0276      	lsls	r6, r6, #9
	}
	if (!driver_adtc_start(cmd, arg, SD_MMC_BLOCK_SIZE, nb_block, true)) {
     8a2:	2301      	movs	r3, #1
     8a4:	9300      	str	r3, [sp, #0]
     8a6:	002b      	movs	r3, r5
     8a8:	2280      	movs	r2, #128	; 0x80
     8aa:	0092      	lsls	r2, r2, #2
     8ac:	0031      	movs	r1, r6
     8ae:	4e0b      	ldr	r6, [pc, #44]	; (8dc <sd_mmc_init_write_blocks+0x5c>)
     8b0:	47b0      	blx	r6
     8b2:	2800      	cmp	r0, #0
     8b4:	d008      	beq.n	8c8 <sd_mmc_init_write_blocks+0x48>
					__func__, (int)SDMMC_CMD_GET_INDEX(cmd), resp);
			sd_mmc_deselect_slot();
			return SD_MMC_ERR_COMM;
		}
	}
	sd_mmc_nb_block_remaining = nb_block;
     8b6:	4b0a      	ldr	r3, [pc, #40]	; (8e0 <sd_mmc_init_write_blocks+0x60>)
     8b8:	801d      	strh	r5, [r3, #0]
	sd_mmc_nb_block_to_tranfer = nb_block;
     8ba:	4b0a      	ldr	r3, [pc, #40]	; (8e4 <sd_mmc_init_write_blocks+0x64>)
     8bc:	801d      	strh	r5, [r3, #0]
	return SD_MMC_OK;
}
     8be:	0020      	movs	r0, r4
     8c0:	b002      	add	sp, #8
     8c2:	bd70      	pop	{r4, r5, r6, pc}
		cmd = SDMMC_CMD24_WRITE_BLOCK;
     8c4:	4808      	ldr	r0, [pc, #32]	; (8e8 <sd_mmc_init_write_blocks+0x68>)
     8c6:	e7e6      	b.n	896 <sd_mmc_init_write_blocks+0x16>
		sd_mmc_deselect_slot();
     8c8:	4b08      	ldr	r3, [pc, #32]	; (8ec <sd_mmc_init_write_blocks+0x6c>)
     8ca:	4798      	blx	r3
		return SD_MMC_ERR_COMM;
     8cc:	2405      	movs	r4, #5
     8ce:	e7f6      	b.n	8be <sd_mmc_init_write_blocks+0x3e>
     8d0:	0000013d 	.word	0x0000013d
     8d4:	00109119 	.word	0x00109119
     8d8:	2000021c 	.word	0x2000021c
     8dc:	00000e85 	.word	0x00000e85
     8e0:	20000240 	.word	0x20000240
     8e4:	20000242 	.word	0x20000242
     8e8:	00089118 	.word	0x00089118
     8ec:	0000021d 	.word	0x0000021d

000008f0 <sd_mmc_start_write_blocks>:

sd_mmc_err_t sd_mmc_start_write_blocks(const void *src, uint16_t nb_block)
{
     8f0:	b510      	push	{r4, lr}
     8f2:	000c      	movs	r4, r1
	Assert(sd_mmc_nb_block_remaining >= nb_block);
	if (!driver_start_write_blocks(src, nb_block)) {
     8f4:	4b07      	ldr	r3, [pc, #28]	; (914 <sd_mmc_start_write_blocks+0x24>)
     8f6:	4798      	blx	r3
     8f8:	2800      	cmp	r0, #0
     8fa:	d104      	bne.n	906 <sd_mmc_start_write_blocks+0x16>
		sd_mmc_nb_block_remaining = 0;
     8fc:	2200      	movs	r2, #0
     8fe:	4b06      	ldr	r3, [pc, #24]	; (918 <sd_mmc_start_write_blocks+0x28>)
     900:	801a      	strh	r2, [r3, #0]
		return SD_MMC_ERR_COMM;
     902:	3005      	adds	r0, #5
	}
	sd_mmc_nb_block_remaining -= nb_block;
	return SD_MMC_OK;
}
     904:	bd10      	pop	{r4, pc}
	sd_mmc_nb_block_remaining -= nb_block;
     906:	4a04      	ldr	r2, [pc, #16]	; (918 <sd_mmc_start_write_blocks+0x28>)
     908:	8813      	ldrh	r3, [r2, #0]
     90a:	1b1c      	subs	r4, r3, r4
     90c:	8014      	strh	r4, [r2, #0]
	return SD_MMC_OK;
     90e:	2000      	movs	r0, #0
     910:	e7f8      	b.n	904 <sd_mmc_start_write_blocks+0x14>
     912:	46c0      	nop			; (mov r8, r8)
     914:	00001141 	.word	0x00001141
     918:	20000240 	.word	0x20000240

0000091c <sd_mmc_wait_end_of_write_blocks>:

sd_mmc_err_t sd_mmc_wait_end_of_write_blocks(bool abort)
{
     91c:	b510      	push	{r4, lr}
     91e:	0004      	movs	r4, r0
	if (!driver_wait_end_of_write_blocks()) {
     920:	4b0e      	ldr	r3, [pc, #56]	; (95c <sd_mmc_wait_end_of_write_blocks+0x40>)
     922:	4798      	blx	r3
		return SD_MMC_ERR_COMM;
     924:	2305      	movs	r3, #5
	if (!driver_wait_end_of_write_blocks()) {
     926:	2800      	cmp	r0, #0
     928:	d101      	bne.n	92e <sd_mmc_wait_end_of_write_blocks+0x12>
			return SD_MMC_ERR_COMM;
		}
	}
	sd_mmc_deselect_slot();
	return SD_MMC_OK;
}
     92a:	0018      	movs	r0, r3
     92c:	bd10      	pop	{r4, pc}
	if (abort) {
     92e:	2c00      	cmp	r4, #0
     930:	d00a      	beq.n	948 <sd_mmc_wait_end_of_write_blocks+0x2c>
		sd_mmc_nb_block_remaining = 0;
     932:	2200      	movs	r2, #0
     934:	4b0a      	ldr	r3, [pc, #40]	; (960 <sd_mmc_wait_end_of_write_blocks+0x44>)
     936:	801a      	strh	r2, [r3, #0]
	if (sd_mmc_nb_block_to_tranfer == 1) {
     938:	4b0a      	ldr	r3, [pc, #40]	; (964 <sd_mmc_wait_end_of_write_blocks+0x48>)
     93a:	881b      	ldrh	r3, [r3, #0]
     93c:	2b01      	cmp	r3, #1
     93e:	d009      	beq.n	954 <sd_mmc_wait_end_of_write_blocks+0x38>
	sd_mmc_deselect_slot();
     940:	4b09      	ldr	r3, [pc, #36]	; (968 <sd_mmc_wait_end_of_write_blocks+0x4c>)
     942:	4798      	blx	r3
	return SD_MMC_OK;
     944:	2300      	movs	r3, #0
     946:	e7f0      	b.n	92a <sd_mmc_wait_end_of_write_blocks+0xe>
	} else if (sd_mmc_nb_block_remaining) {
     948:	4b05      	ldr	r3, [pc, #20]	; (960 <sd_mmc_wait_end_of_write_blocks+0x44>)
     94a:	881a      	ldrh	r2, [r3, #0]
		return SD_MMC_OK;
     94c:	2300      	movs	r3, #0
	} else if (sd_mmc_nb_block_remaining) {
     94e:	2a00      	cmp	r2, #0
     950:	d0f2      	beq.n	938 <sd_mmc_wait_end_of_write_blocks+0x1c>
     952:	e7ea      	b.n	92a <sd_mmc_wait_end_of_write_blocks+0xe>
		sd_mmc_deselect_slot();
     954:	4b04      	ldr	r3, [pc, #16]	; (968 <sd_mmc_wait_end_of_write_blocks+0x4c>)
     956:	4798      	blx	r3
		return SD_MMC_OK;
     958:	2300      	movs	r3, #0
     95a:	e7e6      	b.n	92a <sd_mmc_wait_end_of_write_blocks+0xe>
     95c:	000011c1 	.word	0x000011c1
     960:	20000240 	.word	0x20000240
     964:	20000242 	.word	0x20000242
     968:	0000021d 	.word	0x0000021d

0000096c <sd_mmc_test_unit_ready>:
 */

static bool sd_mmc_ejected[2] = {false, false};

Ctrl_status sd_mmc_test_unit_ready(uint8_t slot)
{
     96c:	b510      	push	{r4, lr}
     96e:	0004      	movs	r4, r0
	switch (sd_mmc_check(slot))
     970:	4b0f      	ldr	r3, [pc, #60]	; (9b0 <sd_mmc_test_unit_ready+0x44>)
     972:	4798      	blx	r3
     974:	2801      	cmp	r0, #1
     976:	d019      	beq.n	9ac <sd_mmc_test_unit_ready+0x40>
     978:	2800      	cmp	r0, #0
     97a:	d003      	beq.n	984 <sd_mmc_test_unit_ready+0x18>
     97c:	2802      	cmp	r0, #2
     97e:	d010      	beq.n	9a2 <sd_mmc_test_unit_ready+0x36>
	case SD_MMC_ERR_NO_CARD:
		sd_mmc_ejected[slot] = false;
		return CTRL_NO_PRESENT;

	default:
		return CTRL_FAIL;
     980:	2001      	movs	r0, #1
	}
}
     982:	bd10      	pop	{r4, pc}
		if (sd_mmc_ejected[slot]) {
     984:	4b0b      	ldr	r3, [pc, #44]	; (9b4 <sd_mmc_test_unit_ready+0x48>)
     986:	5d1b      	ldrb	r3, [r3, r4]
			return CTRL_NO_PRESENT;
     988:	2002      	movs	r0, #2
		if (sd_mmc_ejected[slot]) {
     98a:	2b00      	cmp	r3, #0
     98c:	d1f9      	bne.n	982 <sd_mmc_test_unit_ready+0x16>
		if (sd_mmc_get_type(slot) & (CARD_TYPE_SD | CARD_TYPE_MMC)) {
     98e:	0020      	movs	r0, r4
     990:	4b09      	ldr	r3, [pc, #36]	; (9b8 <sd_mmc_test_unit_ready+0x4c>)
     992:	4798      	blx	r3
     994:	0003      	movs	r3, r0
     996:	2003      	movs	r0, #3
     998:	4018      	ands	r0, r3
		return CTRL_NO_PRESENT;
     99a:	4243      	negs	r3, r0
     99c:	4158      	adcs	r0, r3
     99e:	0040      	lsls	r0, r0, #1
     9a0:	e7ef      	b.n	982 <sd_mmc_test_unit_ready+0x16>
		sd_mmc_ejected[slot] = false;
     9a2:	2200      	movs	r2, #0
     9a4:	4b03      	ldr	r3, [pc, #12]	; (9b4 <sd_mmc_test_unit_ready+0x48>)
     9a6:	551a      	strb	r2, [r3, r4]
		return CTRL_NO_PRESENT;
     9a8:	2002      	movs	r0, #2
     9aa:	e7ea      	b.n	982 <sd_mmc_test_unit_ready+0x16>
		return CTRL_BUSY;
     9ac:	2003      	movs	r0, #3
     9ae:	e7e8      	b.n	982 <sd_mmc_test_unit_ready+0x16>
     9b0:	00000259 	.word	0x00000259
     9b4:	20000248 	.word	0x20000248
     9b8:	00000709 	.word	0x00000709

000009bc <sd_mmc_test_unit_ready_0>:

Ctrl_status sd_mmc_test_unit_ready_0(void)
{
     9bc:	b510      	push	{r4, lr}
	return sd_mmc_test_unit_ready(0);
     9be:	2000      	movs	r0, #0
     9c0:	4b01      	ldr	r3, [pc, #4]	; (9c8 <sd_mmc_test_unit_ready_0+0xc>)
     9c2:	4798      	blx	r3
}
     9c4:	bd10      	pop	{r4, pc}
     9c6:	46c0      	nop			; (mov r8, r8)
     9c8:	0000096d 	.word	0x0000096d

000009cc <sd_mmc_read_capacity>:
{
	return sd_mmc_test_unit_ready(1);
}

Ctrl_status sd_mmc_read_capacity(uint8_t slot, uint32_t *nb_sector)
{
     9cc:	b570      	push	{r4, r5, r6, lr}
     9ce:	0004      	movs	r4, r0
     9d0:	000d      	movs	r5, r1
	// Return last sector address (-1)
	*nb_sector = (sd_mmc_get_capacity(slot) * 2) - 1;
     9d2:	4b04      	ldr	r3, [pc, #16]	; (9e4 <sd_mmc_read_capacity+0x18>)
     9d4:	4798      	blx	r3
     9d6:	0040      	lsls	r0, r0, #1
     9d8:	3801      	subs	r0, #1
     9da:	6028      	str	r0, [r5, #0]
	return sd_mmc_test_unit_ready(slot);
     9dc:	0020      	movs	r0, r4
     9de:	4b02      	ldr	r3, [pc, #8]	; (9e8 <sd_mmc_read_capacity+0x1c>)
     9e0:	4798      	blx	r3
}
     9e2:	bd70      	pop	{r4, r5, r6, pc}
     9e4:	00000731 	.word	0x00000731
     9e8:	0000096d 	.word	0x0000096d

000009ec <sd_mmc_read_capacity_0>:

Ctrl_status sd_mmc_read_capacity_0(uint32_t *nb_sector)
{
     9ec:	b510      	push	{r4, lr}
     9ee:	0001      	movs	r1, r0
	return sd_mmc_read_capacity(0, nb_sector);
     9f0:	2000      	movs	r0, #0
     9f2:	4b01      	ldr	r3, [pc, #4]	; (9f8 <sd_mmc_read_capacity_0+0xc>)
     9f4:	4798      	blx	r3
}
     9f6:	bd10      	pop	{r4, pc}
     9f8:	000009cd 	.word	0x000009cd

000009fc <sd_mmc_wr_protect_0>:
{
	return sd_mmc_is_write_protected(slot);
}

bool sd_mmc_wr_protect_0(void)
{
     9fc:	b510      	push	{r4, lr}
	return sd_mmc_is_write_protected(slot);
     9fe:	2000      	movs	r0, #0
     a00:	4b01      	ldr	r3, [pc, #4]	; (a08 <sd_mmc_wr_protect_0+0xc>)
     a02:	4798      	blx	r3
	return sd_mmc_wr_protect(0);
}
     a04:	bd10      	pop	{r4, pc}
     a06:	46c0      	nop			; (mov r8, r8)
     a08:	00000759 	.word	0x00000759

00000a0c <sd_mmc_mem_2_ram>:
/**
 * \name MEM <-> RAM Interface
 * @{
 */
Ctrl_status sd_mmc_mem_2_ram(uint8_t slot, uint32_t addr, void *ram)
{
     a0c:	b510      	push	{r4, lr}
     a0e:	0014      	movs	r4, r2
	switch (sd_mmc_init_read_blocks(slot, addr, 1)) {
     a10:	2201      	movs	r2, #1
     a12:	4b0c      	ldr	r3, [pc, #48]	; (a44 <sd_mmc_mem_2_ram+0x38>)
     a14:	4798      	blx	r3
     a16:	2800      	cmp	r0, #0
     a18:	d004      	beq.n	a24 <sd_mmc_mem_2_ram+0x18>
	case SD_MMC_OK:
		break;
	case SD_MMC_ERR_NO_CARD:
		return CTRL_NO_PRESENT;
	default:
		return CTRL_FAIL;
     a1a:	3802      	subs	r0, #2
     a1c:	4243      	negs	r3, r0
     a1e:	4158      	adcs	r0, r3
     a20:	3001      	adds	r0, #1
	}
	if (SD_MMC_OK != sd_mmc_wait_end_of_read_blocks(false)) {
		return CTRL_FAIL;
	}
	return CTRL_GOOD;
}
     a22:	bd10      	pop	{r4, pc}
	if (SD_MMC_OK != sd_mmc_start_read_blocks(ram, 1)) {
     a24:	2101      	movs	r1, #1
     a26:	0020      	movs	r0, r4
     a28:	4b07      	ldr	r3, [pc, #28]	; (a48 <sd_mmc_mem_2_ram+0x3c>)
     a2a:	4798      	blx	r3
     a2c:	0003      	movs	r3, r0
		return CTRL_FAIL;
     a2e:	2001      	movs	r0, #1
	if (SD_MMC_OK != sd_mmc_start_read_blocks(ram, 1)) {
     a30:	2b00      	cmp	r3, #0
     a32:	d1f6      	bne.n	a22 <sd_mmc_mem_2_ram+0x16>
	if (SD_MMC_OK != sd_mmc_wait_end_of_read_blocks(false)) {
     a34:	2000      	movs	r0, #0
     a36:	4b05      	ldr	r3, [pc, #20]	; (a4c <sd_mmc_mem_2_ram+0x40>)
     a38:	4798      	blx	r3
     a3a:	1e43      	subs	r3, r0, #1
     a3c:	4198      	sbcs	r0, r3
		return CTRL_NO_PRESENT;
     a3e:	b2c0      	uxtb	r0, r0
     a40:	e7ef      	b.n	a22 <sd_mmc_mem_2_ram+0x16>
     a42:	46c0      	nop			; (mov r8, r8)
     a44:	0000075d 	.word	0x0000075d
     a48:	000007e5 	.word	0x000007e5
     a4c:	00000811 	.word	0x00000811

00000a50 <sd_mmc_mem_2_ram_0>:

Ctrl_status sd_mmc_mem_2_ram_0(uint32_t addr, void *ram)
{
     a50:	b510      	push	{r4, lr}
     a52:	000a      	movs	r2, r1
	return sd_mmc_mem_2_ram(0, addr, ram);
     a54:	0001      	movs	r1, r0
     a56:	2000      	movs	r0, #0
     a58:	4b01      	ldr	r3, [pc, #4]	; (a60 <sd_mmc_mem_2_ram_0+0x10>)
     a5a:	4798      	blx	r3
}
     a5c:	bd10      	pop	{r4, pc}
     a5e:	46c0      	nop			; (mov r8, r8)
     a60:	00000a0d 	.word	0x00000a0d

00000a64 <sd_mmc_ram_2_mem>:
{
	return sd_mmc_mem_2_ram(1, addr, ram);
}

Ctrl_status sd_mmc_ram_2_mem(uint8_t slot, uint32_t addr, const void *ram)
{
     a64:	b510      	push	{r4, lr}
     a66:	0014      	movs	r4, r2
	switch (sd_mmc_init_write_blocks(slot, addr, 1)) {
     a68:	2201      	movs	r2, #1
     a6a:	4b0c      	ldr	r3, [pc, #48]	; (a9c <sd_mmc_ram_2_mem+0x38>)
     a6c:	4798      	blx	r3
     a6e:	2800      	cmp	r0, #0
     a70:	d004      	beq.n	a7c <sd_mmc_ram_2_mem+0x18>
	case SD_MMC_OK:
		break;
	case SD_MMC_ERR_NO_CARD:
		return CTRL_NO_PRESENT;
	default:
		return CTRL_FAIL;
     a72:	3802      	subs	r0, #2
     a74:	4243      	negs	r3, r0
     a76:	4158      	adcs	r0, r3
     a78:	3001      	adds	r0, #1
	}
	if (SD_MMC_OK != sd_mmc_wait_end_of_write_blocks(false)) {
		return CTRL_FAIL;
	}
	return CTRL_GOOD;
}
     a7a:	bd10      	pop	{r4, pc}
	if (SD_MMC_OK != sd_mmc_start_write_blocks(ram, 1)) {
     a7c:	2101      	movs	r1, #1
     a7e:	0020      	movs	r0, r4
     a80:	4b07      	ldr	r3, [pc, #28]	; (aa0 <sd_mmc_ram_2_mem+0x3c>)
     a82:	4798      	blx	r3
     a84:	0003      	movs	r3, r0
		return CTRL_FAIL;
     a86:	2001      	movs	r0, #1
	if (SD_MMC_OK != sd_mmc_start_write_blocks(ram, 1)) {
     a88:	2b00      	cmp	r3, #0
     a8a:	d1f6      	bne.n	a7a <sd_mmc_ram_2_mem+0x16>
	if (SD_MMC_OK != sd_mmc_wait_end_of_write_blocks(false)) {
     a8c:	2000      	movs	r0, #0
     a8e:	4b05      	ldr	r3, [pc, #20]	; (aa4 <sd_mmc_ram_2_mem+0x40>)
     a90:	4798      	blx	r3
     a92:	1e43      	subs	r3, r0, #1
     a94:	4198      	sbcs	r0, r3
		return CTRL_NO_PRESENT;
     a96:	b2c0      	uxtb	r0, r0
     a98:	e7ef      	b.n	a7a <sd_mmc_ram_2_mem+0x16>
     a9a:	46c0      	nop			; (mov r8, r8)
     a9c:	00000881 	.word	0x00000881
     aa0:	000008f1 	.word	0x000008f1
     aa4:	0000091d 	.word	0x0000091d

00000aa8 <sd_mmc_ram_2_mem_0>:

Ctrl_status sd_mmc_ram_2_mem_0(uint32_t addr, const void *ram)
{
     aa8:	b510      	push	{r4, lr}
     aaa:	000a      	movs	r2, r1
	return sd_mmc_ram_2_mem(0, addr, ram);
     aac:	0001      	movs	r1, r0
     aae:	2000      	movs	r0, #0
     ab0:	4b01      	ldr	r3, [pc, #4]	; (ab8 <sd_mmc_ram_2_mem_0+0x10>)
     ab2:	4798      	blx	r3
}
     ab4:	bd10      	pop	{r4, pc}
     ab6:	46c0      	nop			; (mov r8, r8)
     ab8:	00000a65 	.word	0x00000a65

00000abc <sd_mmc_spi_start_write_block>:

/**
 * \brief Sends the correct TOKEN on the line to start a write block transfer
 */
static void sd_mmc_spi_start_write_block(void)
{
     abc:	b500      	push	{lr}
     abe:	b083      	sub	sp, #12
	uint8_t dummy = 0xFF;
     ac0:	466b      	mov	r3, sp
     ac2:	1dd9      	adds	r1, r3, #7
     ac4:	23ff      	movs	r3, #255	; 0xff
     ac6:	700b      	strb	r3, [r1, #0]
	Assert(!(sd_mmc_spi_transfert_pos % sd_mmc_spi_block_size));
	// Delay before start write block:
	// Nwr timing minimum = 8 cylces
	spi_write_buffer_wait(&sd_mmc_master,&dummy, 1);
     ac8:	2201      	movs	r2, #1
     aca:	480b      	ldr	r0, [pc, #44]	; (af8 <sd_mmc_spi_start_write_block+0x3c>)
     acc:	4b0b      	ldr	r3, [pc, #44]	; (afc <sd_mmc_spi_start_write_block+0x40>)
     ace:	4798      	blx	r3
	// Send start token
	uint8_t token;
	if (1 == sd_mmc_spi_nb_block) {
     ad0:	4b0b      	ldr	r3, [pc, #44]	; (b00 <sd_mmc_spi_start_write_block+0x44>)
     ad2:	881b      	ldrh	r3, [r3, #0]
     ad4:	2b01      	cmp	r3, #1
     ad6:	d00a      	beq.n	aee <sd_mmc_spi_start_write_block+0x32>
		token = SPI_TOKEN_SINGLE_WRITE;
	} else {
		token = SPI_TOKEN_MULTI_WRITE;
     ad8:	22fc      	movs	r2, #252	; 0xfc
     ada:	466b      	mov	r3, sp
     adc:	719a      	strb	r2, [r3, #6]
	}
	spi_write_buffer_wait(&sd_mmc_master,&token, 1);
     ade:	2201      	movs	r2, #1
     ae0:	466b      	mov	r3, sp
     ae2:	1d99      	adds	r1, r3, #6
     ae4:	4804      	ldr	r0, [pc, #16]	; (af8 <sd_mmc_spi_start_write_block+0x3c>)
     ae6:	4b05      	ldr	r3, [pc, #20]	; (afc <sd_mmc_spi_start_write_block+0x40>)
     ae8:	4798      	blx	r3
}
     aea:	b003      	add	sp, #12
     aec:	bd00      	pop	{pc}
		token = SPI_TOKEN_SINGLE_WRITE;
     aee:	22fe      	movs	r2, #254	; 0xfe
     af0:	466b      	mov	r3, sp
     af2:	719a      	strb	r2, [r3, #6]
     af4:	e7f3      	b.n	ade <sd_mmc_spi_start_write_block+0x22>
     af6:	46c0      	nop			; (mov r8, r8)
     af8:	2000024c 	.word	0x2000024c
     afc:	000023f5 	.word	0x000023f5
     b00:	20000290 	.word	0x20000290

00000b04 <sd_mmc_spi_wait_busy>:
{
     b04:	b5f0      	push	{r4, r5, r6, r7, lr}
     b06:	b083      	sub	sp, #12
	uint8_t line = 0xFF;
     b08:	466b      	mov	r3, sp
     b0a:	1ddc      	adds	r4, r3, #7
     b0c:	23ff      	movs	r3, #255	; 0xff
     b0e:	7023      	strb	r3, [r4, #0]
	spi_read_buffer_wait(&sd_mmc_master, &line, 1,
     b10:	4e12      	ldr	r6, [pc, #72]	; (b5c <sd_mmc_spi_wait_busy+0x58>)
     b12:	2201      	movs	r2, #1
     b14:	0021      	movs	r1, r4
     b16:	0030      	movs	r0, r6
     b18:	4d11      	ldr	r5, [pc, #68]	; (b60 <sd_mmc_spi_wait_busy+0x5c>)
     b1a:	47a8      	blx	r5
	spi_read_buffer_wait(&sd_mmc_master, &line, 1,
     b1c:	23ff      	movs	r3, #255	; 0xff
     b1e:	2201      	movs	r2, #1
     b20:	0021      	movs	r1, r4
     b22:	0030      	movs	r0, r6
     b24:	47a8      	blx	r5
		spi_read_buffer_wait(&sd_mmc_master, &line, 1,
     b26:	23ff      	movs	r3, #255	; 0xff
     b28:	2201      	movs	r2, #1
     b2a:	0021      	movs	r1, r4
     b2c:	0030      	movs	r0, r6
     b2e:	47a8      	blx	r5
     b30:	4c0c      	ldr	r4, [pc, #48]	; (b64 <sd_mmc_spi_wait_busy+0x60>)
	} while (line != 0xFF);
     b32:	466b      	mov	r3, sp
     b34:	1ddd      	adds	r5, r3, #7
		spi_read_buffer_wait(&sd_mmc_master, &line, 1,
     b36:	4e09      	ldr	r6, [pc, #36]	; (b5c <sd_mmc_spi_wait_busy+0x58>)
     b38:	4f09      	ldr	r7, [pc, #36]	; (b60 <sd_mmc_spi_wait_busy+0x5c>)
	} while (line != 0xFF);
     b3a:	782b      	ldrb	r3, [r5, #0]
     b3c:	2bff      	cmp	r3, #255	; 0xff
     b3e:	d009      	beq.n	b54 <sd_mmc_spi_wait_busy+0x50>
		spi_read_buffer_wait(&sd_mmc_master, &line, 1,
     b40:	23ff      	movs	r3, #255	; 0xff
     b42:	2201      	movs	r2, #1
     b44:	0029      	movs	r1, r5
     b46:	0030      	movs	r0, r6
     b48:	47b8      	blx	r7
     b4a:	3c01      	subs	r4, #1
		if (!(nec_timeout--)) {
     b4c:	2c00      	cmp	r4, #0
     b4e:	d1f4      	bne.n	b3a <sd_mmc_spi_wait_busy+0x36>
			return false;
     b50:	2000      	movs	r0, #0
     b52:	e000      	b.n	b56 <sd_mmc_spi_wait_busy+0x52>
	return true;
     b54:	2001      	movs	r0, #1
}
     b56:	b003      	add	sp, #12
     b58:	bdf0      	pop	{r4, r5, r6, r7, pc}
     b5a:	46c0      	nop			; (mov r8, r8)
     b5c:	2000024c 	.word	0x2000024c
     b60:	0000222d 	.word	0x0000222d
     b64:	00030d40 	.word	0x00030d40

00000b68 <sd_mmc_spi_stop_multiwrite_block>:
 *
 * \return true if success, otherwise false
 *         with a update of \ref sd_mmc_spi_err.
 */
static bool sd_mmc_spi_stop_multiwrite_block(void)
{
     b68:	b570      	push	{r4, r5, r6, lr}
     b6a:	b082      	sub	sp, #8
	uint8_t value;

	if (1 == sd_mmc_spi_nb_block) {
     b6c:	4b14      	ldr	r3, [pc, #80]	; (bc0 <sd_mmc_spi_stop_multiwrite_block+0x58>)
     b6e:	881c      	ldrh	r4, [r3, #0]
     b70:	2c01      	cmp	r4, #1
     b72:	d023      	beq.n	bbc <sd_mmc_spi_stop_multiwrite_block+0x54>
		return true; // Single block write
	}
	if (sd_mmc_spi_nb_block >
		(sd_mmc_spi_transfert_pos / sd_mmc_spi_block_size)) {
     b74:	4b13      	ldr	r3, [pc, #76]	; (bc4 <sd_mmc_spi_stop_multiwrite_block+0x5c>)
     b76:	8819      	ldrh	r1, [r3, #0]
     b78:	4b13      	ldr	r3, [pc, #76]	; (bc8 <sd_mmc_spi_stop_multiwrite_block+0x60>)
     b7a:	6818      	ldr	r0, [r3, #0]
     b7c:	4b13      	ldr	r3, [pc, #76]	; (bcc <sd_mmc_spi_stop_multiwrite_block+0x64>)
     b7e:	4798      	blx	r3
		return true; // It is not the End of multi write
     b80:	2301      	movs	r3, #1
	if (sd_mmc_spi_nb_block >
     b82:	4284      	cmp	r4, r0
     b84:	d902      	bls.n	b8c <sd_mmc_spi_stop_multiwrite_block+0x24>
		sd_mmc_spi_debug("%s: Stop write blocks timeout\n\r",
				__func__);
		return false;
	}
	return true;
}
     b86:	0018      	movs	r0, r3
     b88:	b002      	add	sp, #8
     b8a:	bd70      	pop	{r4, r5, r6, pc}
	value = 0xFF;
     b8c:	466b      	mov	r3, sp
     b8e:	1ddc      	adds	r4, r3, #7
     b90:	23ff      	movs	r3, #255	; 0xff
     b92:	7023      	strb	r3, [r4, #0]
	spi_write_buffer_wait(&sd_mmc_master, &value, 1);
     b94:	4e0e      	ldr	r6, [pc, #56]	; (bd0 <sd_mmc_spi_stop_multiwrite_block+0x68>)
     b96:	2201      	movs	r2, #1
     b98:	0021      	movs	r1, r4
     b9a:	0030      	movs	r0, r6
     b9c:	4d0d      	ldr	r5, [pc, #52]	; (bd4 <sd_mmc_spi_stop_multiwrite_block+0x6c>)
     b9e:	47a8      	blx	r5
	value = SPI_TOKEN_STOP_TRAN;
     ba0:	23fd      	movs	r3, #253	; 0xfd
     ba2:	7023      	strb	r3, [r4, #0]
	spi_write_buffer_wait(&sd_mmc_master, &value, 1);
     ba4:	2201      	movs	r2, #1
     ba6:	0021      	movs	r1, r4
     ba8:	0030      	movs	r0, r6
     baa:	47a8      	blx	r5
	if (!sd_mmc_spi_wait_busy()) {
     bac:	4b0a      	ldr	r3, [pc, #40]	; (bd8 <sd_mmc_spi_stop_multiwrite_block+0x70>)
     bae:	4798      	blx	r3
     bb0:	1e03      	subs	r3, r0, #0
     bb2:	d1e8      	bne.n	b86 <sd_mmc_spi_stop_multiwrite_block+0x1e>
		sd_mmc_spi_err = SD_MMC_SPI_ERR_WRITE_TIMEOUT;
     bb4:	2105      	movs	r1, #5
     bb6:	4a09      	ldr	r2, [pc, #36]	; (bdc <sd_mmc_spi_stop_multiwrite_block+0x74>)
     bb8:	7011      	strb	r1, [r2, #0]
		return false;
     bba:	e7e4      	b.n	b86 <sd_mmc_spi_stop_multiwrite_block+0x1e>
		return true; // Single block write
     bbc:	2301      	movs	r3, #1
     bbe:	e7e2      	b.n	b86 <sd_mmc_spi_stop_multiwrite_block+0x1e>
     bc0:	20000290 	.word	0x20000290
     bc4:	20000288 	.word	0x20000288
     bc8:	20000298 	.word	0x20000298
     bcc:	0000574d 	.word	0x0000574d
     bd0:	2000024c 	.word	0x2000024c
     bd4:	000023f5 	.word	0x000023f5
     bd8:	00000b05 	.word	0x00000b05
     bdc:	2000028f 	.word	0x2000028f

00000be0 <sd_mmc_spi_start_read_block>:
{
     be0:	b5f0      	push	{r4, r5, r6, r7, lr}
     be2:	b083      	sub	sp, #12
	token = 0;
     be4:	2200      	movs	r2, #0
     be6:	466b      	mov	r3, sp
     be8:	71da      	strb	r2, [r3, #7]
     bea:	4c14      	ldr	r4, [pc, #80]	; (c3c <sd_mmc_spi_start_read_block+0x5c>)
		spi_read_buffer_wait(&sd_mmc_master, &token, 1,
     bec:	466b      	mov	r3, sp
     bee:	1ddd      	adds	r5, r3, #7
     bf0:	4e13      	ldr	r6, [pc, #76]	; (c40 <sd_mmc_spi_start_read_block+0x60>)
     bf2:	4f14      	ldr	r7, [pc, #80]	; (c44 <sd_mmc_spi_start_read_block+0x64>)
     bf4:	23ff      	movs	r3, #255	; 0xff
     bf6:	2201      	movs	r2, #1
     bf8:	0029      	movs	r1, r5
     bfa:	0030      	movs	r0, r6
     bfc:	47b8      	blx	r7
		if (SPI_TOKEN_DATA_ERROR_VALID(token)) {
     bfe:	782b      	ldrb	r3, [r5, #0]
     c00:	220f      	movs	r2, #15
     c02:	0019      	movs	r1, r3
     c04:	4391      	bics	r1, r2
     c06:	1e0a      	subs	r2, r1, #0
     c08:	d009      	beq.n	c1e <sd_mmc_spi_start_read_block+0x3e>
	} while (token != SPI_TOKEN_SINGLE_MULTI_READ);
     c0a:	2bfe      	cmp	r3, #254	; 0xfe
     c0c:	d013      	beq.n	c36 <sd_mmc_spi_start_read_block+0x56>
     c0e:	3c01      	subs	r4, #1
		if (i-- == 0) {
     c10:	2c00      	cmp	r4, #0
     c12:	d1ef      	bne.n	bf4 <sd_mmc_spi_start_read_block+0x14>
			sd_mmc_spi_err = SD_MMC_SPI_ERR_READ_TIMEOUT;
     c14:	2204      	movs	r2, #4
     c16:	4b0c      	ldr	r3, [pc, #48]	; (c48 <sd_mmc_spi_start_read_block+0x68>)
     c18:	701a      	strb	r2, [r3, #0]
			return false;
     c1a:	2000      	movs	r0, #0
     c1c:	e00c      	b.n	c38 <sd_mmc_spi_start_read_block+0x58>
			if (token & (SPI_TOKEN_DATA_ERROR_ERROR
     c1e:	075b      	lsls	r3, r3, #29
     c20:	d004      	beq.n	c2c <sd_mmc_spi_start_read_block+0x4c>
				sd_mmc_spi_err = SD_MMC_SPI_ERR_READ_CRC;
     c22:	3207      	adds	r2, #7
     c24:	4b08      	ldr	r3, [pc, #32]	; (c48 <sd_mmc_spi_start_read_block+0x68>)
     c26:	701a      	strb	r2, [r3, #0]
			return false;
     c28:	2000      	movs	r0, #0
     c2a:	e005      	b.n	c38 <sd_mmc_spi_start_read_block+0x58>
				sd_mmc_spi_err = SD_MMC_SPI_ERR_OUT_OF_RANGE;
     c2c:	220b      	movs	r2, #11
     c2e:	4b06      	ldr	r3, [pc, #24]	; (c48 <sd_mmc_spi_start_read_block+0x68>)
     c30:	701a      	strb	r2, [r3, #0]
			return false;
     c32:	2000      	movs	r0, #0
     c34:	e000      	b.n	c38 <sd_mmc_spi_start_read_block+0x58>
	return true;
     c36:	2001      	movs	r0, #1
}
     c38:	b003      	add	sp, #12
     c3a:	bdf0      	pop	{r4, r5, r6, r7, pc}
     c3c:	0007a120 	.word	0x0007a120
     c40:	2000024c 	.word	0x2000024c
     c44:	0000222d 	.word	0x0000222d
     c48:	2000028f 	.word	0x2000028f

00000c4c <sd_mmc_spi_stop_write_block>:
{
     c4c:	b530      	push	{r4, r5, lr}
     c4e:	b083      	sub	sp, #12
	crc = 0xFFFF; /// CRC is disabled in SPI mode
     c50:	a901      	add	r1, sp, #4
     c52:	2301      	movs	r3, #1
     c54:	425b      	negs	r3, r3
     c56:	800b      	strh	r3, [r1, #0]
	spi_write_buffer_wait(&sd_mmc_master, (uint8_t *)&crc, 2);
     c58:	4d14      	ldr	r5, [pc, #80]	; (cac <sd_mmc_spi_stop_write_block+0x60>)
     c5a:	2202      	movs	r2, #2
     c5c:	0028      	movs	r0, r5
     c5e:	4b14      	ldr	r3, [pc, #80]	; (cb0 <sd_mmc_spi_stop_write_block+0x64>)
     c60:	4798      	blx	r3
	spi_read_buffer_wait(&sd_mmc_master, &resp, 1,
     c62:	466b      	mov	r3, sp
     c64:	1ddc      	adds	r4, r3, #7
     c66:	23ff      	movs	r3, #255	; 0xff
     c68:	2201      	movs	r2, #1
     c6a:	0021      	movs	r1, r4
     c6c:	0028      	movs	r0, r5
     c6e:	4d11      	ldr	r5, [pc, #68]	; (cb4 <sd_mmc_spi_stop_write_block+0x68>)
     c70:	47a8      	blx	r5
	if (!SPI_TOKEN_DATA_RESP_VALID(resp)) {
     c72:	7822      	ldrb	r2, [r4, #0]
     c74:	2311      	movs	r3, #17
     c76:	4013      	ands	r3, r2
     c78:	2b01      	cmp	r3, #1
     c7a:	d005      	beq.n	c88 <sd_mmc_spi_stop_write_block+0x3c>
		sd_mmc_spi_err = SD_MMC_SPI_ERR;
     c7c:	2201      	movs	r2, #1
     c7e:	4b0e      	ldr	r3, [pc, #56]	; (cb8 <sd_mmc_spi_stop_write_block+0x6c>)
     c80:	701a      	strb	r2, [r3, #0]
		return false;
     c82:	2000      	movs	r0, #0
}
     c84:	b003      	add	sp, #12
     c86:	bd30      	pop	{r4, r5, pc}
	switch (SPI_TOKEN_DATA_RESP_CODE(resp)) {
     c88:	231e      	movs	r3, #30
     c8a:	401a      	ands	r2, r3
     c8c:	2a04      	cmp	r2, #4
     c8e:	d00b      	beq.n	ca8 <sd_mmc_spi_stop_write_block+0x5c>
     c90:	2a0a      	cmp	r2, #10
     c92:	d104      	bne.n	c9e <sd_mmc_spi_stop_write_block+0x52>
		sd_mmc_spi_err = SD_MMC_SPI_ERR_WRITE_CRC;
     c94:	3a02      	subs	r2, #2
     c96:	4b08      	ldr	r3, [pc, #32]	; (cb8 <sd_mmc_spi_stop_write_block+0x6c>)
     c98:	701a      	strb	r2, [r3, #0]
		return false;
     c9a:	2000      	movs	r0, #0
     c9c:	e7f2      	b.n	c84 <sd_mmc_spi_stop_write_block+0x38>
		sd_mmc_spi_err = SD_MMC_SPI_ERR_WRITE;
     c9e:	220a      	movs	r2, #10
     ca0:	4b05      	ldr	r3, [pc, #20]	; (cb8 <sd_mmc_spi_stop_write_block+0x6c>)
     ca2:	701a      	strb	r2, [r3, #0]
		return false;
     ca4:	2000      	movs	r0, #0
     ca6:	e7ed      	b.n	c84 <sd_mmc_spi_stop_write_block+0x38>
	return true;
     ca8:	2001      	movs	r0, #1
     caa:	e7eb      	b.n	c84 <sd_mmc_spi_stop_write_block+0x38>
     cac:	2000024c 	.word	0x2000024c
     cb0:	000023f5 	.word	0x000023f5
     cb4:	0000222d 	.word	0x0000222d
     cb8:	2000028f 	.word	0x2000028f

00000cbc <sd_deinit>:
{
     cbc:	b510      	push	{r4, lr}
	spi_reset(&sd_mmc_master);
     cbe:	4802      	ldr	r0, [pc, #8]	; (cc8 <sd_deinit+0xc>)
     cc0:	4b02      	ldr	r3, [pc, #8]	; (ccc <sd_deinit+0x10>)
     cc2:	4798      	blx	r3
}
     cc4:	bd10      	pop	{r4, pc}
     cc6:	46c0      	nop			; (mov r8, r8)
     cc8:	2000024c 	.word	0x2000024c
     ccc:	00001f51 	.word	0x00001f51

00000cd0 <sd_mmc_spi_init>:
{
	return sd_mmc_spi_err;
}

void sd_mmc_spi_init(void)
{
     cd0:	b570      	push	{r4, r5, r6, lr}
     cd2:	b090      	sub	sp, #64	; 0x40
	sd_mmc_spi_err = SD_MMC_SPI_NO_ERR;
     cd4:	2300      	movs	r3, #0
     cd6:	4a2d      	ldr	r2, [pc, #180]	; (d8c <sd_mmc_spi_init+0xbc>)
     cd8:	7013      	strb	r3, [r2, #0]
{
	/* Sanity check arguments */
	Assert(config);

	/* Default configuration values */
	config->mode             = SPI_MODE_MASTER;
     cda:	ac02      	add	r4, sp, #8
     cdc:	2501      	movs	r5, #1
     cde:	7025      	strb	r5, [r4, #0]
	config->data_order       = SPI_DATA_ORDER_MSB;
     ce0:	9303      	str	r3, [sp, #12]
	config->transfer_mode    = SPI_TRANSFER_MODE_0;
     ce2:	9304      	str	r3, [sp, #16]
	config->mux_setting      = SPI_SIGNAL_MUX_SETTING_D;
	config->character_size   = SPI_CHARACTER_SIZE_8BIT;
     ce4:	7423      	strb	r3, [r4, #16]
	config->run_in_standby   = false;
     ce6:	7463      	strb	r3, [r4, #17]
	config->receiver_enable  = true;
     ce8:	74a5      	strb	r5, [r4, #18]
#  ifdef FEATURE_SPI_SLAVE_SELECT_LOW_DETECT
	config->select_slave_low_detect_enable= true;
     cea:	74e5      	strb	r5, [r4, #19]
#  endif
#  ifdef FEATURE_SPI_HARDWARE_SLAVE_SELECT
	config->master_slave_select_enable= false;
     cec:	7523      	strb	r3, [r4, #20]
#  endif
	config->generator_source = GCLK_GENERATOR_0;
     cee:	2224      	movs	r2, #36	; 0x24
     cf0:	54a3      	strb	r3, [r4, r2]

	/* Clear mode specific config */
	memset(&(config->mode_specific), 0, sizeof(config->mode_specific));
     cf2:	3a18      	subs	r2, #24
     cf4:	2100      	movs	r1, #0
     cf6:	a808      	add	r0, sp, #32
     cf8:	4b25      	ldr	r3, [pc, #148]	; (d90 <sd_mmc_spi_init+0xc0>)
     cfa:	4798      	blx	r3

	// Initialize SPI interface and enable it
	struct spi_config config;
	spi_get_config_defaults(&config);

	config.mux_setting = SD_MMC_SPI_PINMUX_SETTING;
     cfc:	2380      	movs	r3, #128	; 0x80
     cfe:	025b      	lsls	r3, r3, #9
     d00:	60e3      	str	r3, [r4, #12]
	config.pinmux_pad0 = SD_MMC_SPI_PINMUX_PAD0;
     d02:	4b24      	ldr	r3, [pc, #144]	; (d94 <sd_mmc_spi_init+0xc4>)
     d04:	62a3      	str	r3, [r4, #40]	; 0x28
	config.pinmux_pad1 = SD_MMC_SPI_PINMUX_PAD1;
     d06:	4b24      	ldr	r3, [pc, #144]	; (d98 <sd_mmc_spi_init+0xc8>)
     d08:	62e3      	str	r3, [r4, #44]	; 0x2c
	config.pinmux_pad2 = SD_MMC_SPI_PINMUX_PAD2;
     d0a:	4b24      	ldr	r3, [pc, #144]	; (d9c <sd_mmc_spi_init+0xcc>)
     d0c:	6323      	str	r3, [r4, #48]	; 0x30
	config.pinmux_pad3 = SD_MMC_SPI_PINMUX_PAD3;
     d0e:	4b24      	ldr	r3, [pc, #144]	; (da0 <sd_mmc_spi_init+0xd0>)
     d10:	6363      	str	r3, [r4, #52]	; 0x34
	config.generator_source = SD_MMC_SPI_SOURCE_CLOCK;
	config.mode_specific.master.baudrate = SDMMC_CLOCK_INIT;
     d12:	4b24      	ldr	r3, [pc, #144]	; (da4 <sd_mmc_spi_init+0xd4>)
     d14:	61a3      	str	r3, [r4, #24]

	spi_init(&sd_mmc_master, SD_MMC_SPI, &config);
     d16:	4e24      	ldr	r6, [pc, #144]	; (da8 <sd_mmc_spi_init+0xd8>)
     d18:	0022      	movs	r2, r4
     d1a:	4924      	ldr	r1, [pc, #144]	; (dac <sd_mmc_spi_init+0xdc>)
     d1c:	0030      	movs	r0, r6
     d1e:	4b24      	ldr	r3, [pc, #144]	; (db0 <sd_mmc_spi_init+0xe0>)
     d20:	4798      	blx	r3
{
	/* Sanity check arguments */
	Assert(module);
	Assert(module->hw);

	SercomSpi *const spi_module = &(module->hw->SPI);
     d22:	6834      	ldr	r4, [r6, #0]

#  if SPI_CALLBACK_MODE == true
	system_interrupt_enable(_sercom_get_interrupt_vector(module->hw));
     d24:	0020      	movs	r0, r4
     d26:	4b23      	ldr	r3, [pc, #140]	; (db4 <sd_mmc_spi_init+0xe4>)
     d28:	4798      	blx	r3
 * \param[in] vector Interrupt vector to enable
 */
static inline void system_interrupt_enable(
		const enum system_interrupt_vector vector)
{
	NVIC->ISER[0] = (uint32_t)(1 << ((uint32_t)vector & 0x0000001f));
     d2a:	231f      	movs	r3, #31
     d2c:	4018      	ands	r0, r3
     d2e:	4085      	lsls	r5, r0
     d30:	4b21      	ldr	r3, [pc, #132]	; (db8 <sd_mmc_spi_init+0xe8>)
     d32:	601d      	str	r5, [r3, #0]
	SercomSpi *const spi_module = &(module->hw->SPI);
     d34:	6832      	ldr	r2, [r6, #0]
	return (spi_module->SYNCBUSY.reg);
     d36:	69d3      	ldr	r3, [r2, #28]
#  endif

	while (spi_is_syncing(module)) {
     d38:	2b00      	cmp	r3, #0
     d3a:	d1fc      	bne.n	d36 <sd_mmc_spi_init+0x66>
		/* Wait until the synchronization is complete */
	}

	/* Enable SPI */
	spi_module->CTRLA.reg |= SERCOM_SPI_CTRLA_ENABLE;
     d3c:	6823      	ldr	r3, [r4, #0]
     d3e:	2202      	movs	r2, #2
     d40:	4313      	orrs	r3, r2
     d42:	6023      	str	r3, [r4, #0]
	config->address_enabled = false;
     d44:	4a1d      	ldr	r2, [pc, #116]	; (dbc <sd_mmc_spi_init+0xec>)
     d46:	2300      	movs	r3, #0
     d48:	7053      	strb	r3, [r2, #1]
	config->address         = 0;
     d4a:	7093      	strb	r3, [r2, #2]
	spi_enable(&sd_mmc_master);

	spi_slave_inst_get_config_defaults(&slave_configs[0]);
	slave_configs[0].ss_pin = ss_pins[0];
     d4c:	491c      	ldr	r1, [pc, #112]	; (dc0 <sd_mmc_spi_init+0xf0>)
     d4e:	7808      	ldrb	r0, [r1, #0]
     d50:	7010      	strb	r0, [r2, #0]
	slave->ss_pin          = config->ss_pin;
     d52:	4c1c      	ldr	r4, [pc, #112]	; (dc4 <sd_mmc_spi_init+0xf4>)
     d54:	7020      	strb	r0, [r4, #0]
	slave->address_enabled = config->address_enabled;
     d56:	7063      	strb	r3, [r4, #1]
	slave->address         = config->address;
     d58:	70a3      	strb	r3, [r4, #2]
	/* Sanity check arguments */
	Assert(config);

	/* Default configuration values */
	config->direction  = PORT_PIN_DIR_INPUT;
	config->input_pull = PORT_PIN_PULL_UP;
     d5a:	a901      	add	r1, sp, #4
     d5c:	2201      	movs	r2, #1
     d5e:	704a      	strb	r2, [r1, #1]
	config->powersave  = false;
     d60:	708b      	strb	r3, [r1, #2]
	pin_conf.direction = PORT_PIN_DIR_OUTPUT;
     d62:	700a      	strb	r2, [r1, #0]
	port_pin_set_config(slave->ss_pin, &pin_conf);
     d64:	4b18      	ldr	r3, [pc, #96]	; (dc8 <sd_mmc_spi_init+0xf8>)
     d66:	4798      	blx	r3
	port_pin_set_output_level(slave->ss_pin, true);
     d68:	7822      	ldrb	r2, [r4, #0]
	uint8_t group_index = (gpio_pin / 32);

	/* Array of available ports */
	Port *const ports[PORT_INST_NUM] = PORT_INSTS;

	if (port_index < PORT_INST_NUM) {
     d6a:	09d1      	lsrs	r1, r2, #7
		return &(ports[port_index]->Group[group_index]);
	} else {
		Assert(false);
		return NULL;
     d6c:	2300      	movs	r3, #0
	if (port_index < PORT_INST_NUM) {
     d6e:	2900      	cmp	r1, #0
     d70:	d104      	bne.n	d7c <sd_mmc_spi_init+0xac>
		return &(ports[port_index]->Group[group_index]);
     d72:	0953      	lsrs	r3, r2, #5
     d74:	01db      	lsls	r3, r3, #7
     d76:	4915      	ldr	r1, [pc, #84]	; (dcc <sd_mmc_spi_init+0xfc>)
     d78:	468c      	mov	ip, r1
     d7a:	4463      	add	r3, ip
static inline void port_pin_set_output_level(
		const uint8_t gpio_pin,
		const bool level)
{
	PortGroup *const port_base = port_get_group_from_gpio_pin(gpio_pin);
	uint32_t pin_mask  = (1UL << (gpio_pin % 32));
     d7c:	211f      	movs	r1, #31
     d7e:	4011      	ands	r1, r2
     d80:	2201      	movs	r2, #1
     d82:	408a      	lsls	r2, r1

	/* Set the pin to high or low atomically based on the requested level */
	if (level) {
		port_base->OUTSET.reg = pin_mask;
     d84:	619a      	str	r2, [r3, #24]
	spi_attach_slave(&sd_mmc_spi_devices[0], &slave_configs[0]);
}
     d86:	b010      	add	sp, #64	; 0x40
     d88:	bd70      	pop	{r4, r5, r6, pc}
     d8a:	46c0      	nop			; (mov r8, r8)
     d8c:	2000028f 	.word	0x2000028f
     d90:	00005ae1 	.word	0x00005ae1
     d94:	00100002 	.word	0x00100002
     d98:	00110002 	.word	0x00110002
     d9c:	00120002 	.word	0x00120002
     da0:	00130002 	.word	0x00130002
     da4:	00061a80 	.word	0x00061a80
     da8:	2000024c 	.word	0x2000024c
     dac:	42000c00 	.word	0x42000c00
     db0:	00002055 	.word	0x00002055
     db4:	00001ec1 	.word	0x00001ec1
     db8:	e000e100 	.word	0xe000e100
     dbc:	2000029c 	.word	0x2000029c
     dc0:	20000000 	.word	0x20000000
     dc4:	2000028c 	.word	0x2000028c
     dc8:	000018ad 	.word	0x000018ad
     dcc:	41004400 	.word	0x41004400

00000dd0 <sd_mmc_spi_select_device>:

void sd_mmc_spi_select_device(uint8_t slot, uint32_t clock, uint8_t bus_width,
		bool high_speed)
{
     dd0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
     dd2:	0007      	movs	r7, r0
	UNUSED(bus_width);
	UNUSED(high_speed);
	sd_mmc_spi_err = SD_MMC_SPI_NO_ERR;
     dd4:	2200      	movs	r2, #0
     dd6:	4b0d      	ldr	r3, [pc, #52]	; (e0c <sd_mmc_spi_select_device+0x3c>)
     dd8:	701a      	strb	r2, [r3, #0]
     dda:	000c      	movs	r4, r1
     ddc:	4b0c      	ldr	r3, [pc, #48]	; (e10 <sd_mmc_spi_select_device+0x40>)
     dde:	4299      	cmp	r1, r3
     de0:	d900      	bls.n	de4 <sd_mmc_spi_select_device+0x14>
     de2:	001c      	movs	r4, r3
#ifdef SD_MMC_SPI_MAX_CLOCK
	if (clock > SD_MMC_SPI_MAX_CLOCK) {
		clock = SD_MMC_SPI_MAX_CLOCK;
	}
#endif
	while (STATUS_ERR_INVALID_ARG == spi_set_baudrate(&sd_mmc_master, clock)) {
     de4:	4d0b      	ldr	r5, [pc, #44]	; (e14 <sd_mmc_spi_select_device+0x44>)
     de6:	4e0c      	ldr	r6, [pc, #48]	; (e18 <sd_mmc_spi_select_device+0x48>)
     de8:	e001      	b.n	dee <sd_mmc_spi_select_device+0x1e>
		clock -= clock / 8;
     dea:	08e3      	lsrs	r3, r4, #3
     dec:	1ae4      	subs	r4, r4, r3
	while (STATUS_ERR_INVALID_ARG == spi_set_baudrate(&sd_mmc_master, clock)) {
     dee:	0021      	movs	r1, r4
     df0:	0028      	movs	r0, r5
     df2:	47b0      	blx	r6
     df4:	2817      	cmp	r0, #23
     df6:	d0f8      	beq.n	dea <sd_mmc_spi_select_device+0x1a>
	}
	spi_select_slave(&sd_mmc_master, &sd_mmc_spi_devices[slot], true);
     df8:	0079      	lsls	r1, r7, #1
     dfa:	19cf      	adds	r7, r1, r7
     dfc:	4907      	ldr	r1, [pc, #28]	; (e1c <sd_mmc_spi_select_device+0x4c>)
     dfe:	19c9      	adds	r1, r1, r7
     e00:	2201      	movs	r2, #1
     e02:	4804      	ldr	r0, [pc, #16]	; (e14 <sd_mmc_spi_select_device+0x44>)
     e04:	4b06      	ldr	r3, [pc, #24]	; (e20 <sd_mmc_spi_select_device+0x50>)
     e06:	4798      	blx	r3
}
     e08:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
     e0a:	46c0      	nop			; (mov r8, r8)
     e0c:	2000028f 	.word	0x2000028f
     e10:	00989680 	.word	0x00989680
     e14:	2000024c 	.word	0x2000024c
     e18:	00001f9d 	.word	0x00001f9d
     e1c:	2000028c 	.word	0x2000028c
     e20:	00002301 	.word	0x00002301

00000e24 <sd_mmc_spi_deselect_device>:

void sd_mmc_spi_deselect_device(uint8_t slot)
{
     e24:	b510      	push	{r4, lr}
	sd_mmc_spi_err = SD_MMC_SPI_NO_ERR;
     e26:	2200      	movs	r2, #0
     e28:	4b04      	ldr	r3, [pc, #16]	; (e3c <sd_mmc_spi_deselect_device+0x18>)
     e2a:	701a      	strb	r2, [r3, #0]
	spi_select_slave(&sd_mmc_master, &sd_mmc_spi_devices[slot], false);
     e2c:	0041      	lsls	r1, r0, #1
     e2e:	1808      	adds	r0, r1, r0
     e30:	4903      	ldr	r1, [pc, #12]	; (e40 <sd_mmc_spi_deselect_device+0x1c>)
     e32:	1809      	adds	r1, r1, r0
     e34:	4803      	ldr	r0, [pc, #12]	; (e44 <sd_mmc_spi_deselect_device+0x20>)
     e36:	4b04      	ldr	r3, [pc, #16]	; (e48 <sd_mmc_spi_deselect_device+0x24>)
     e38:	4798      	blx	r3
}
     e3a:	bd10      	pop	{r4, pc}
     e3c:	2000028f 	.word	0x2000028f
     e40:	2000028c 	.word	0x2000028c
     e44:	2000024c 	.word	0x2000024c
     e48:	00002301 	.word	0x00002301

00000e4c <sd_mmc_spi_send_clock>:

void sd_mmc_spi_send_clock(void)
{
     e4c:	b570      	push	{r4, r5, r6, lr}
     e4e:	b082      	sub	sp, #8
	uint8_t i;
	uint8_t dummy = 0xFF;
     e50:	22ff      	movs	r2, #255	; 0xff
     e52:	466b      	mov	r3, sp
     e54:	71da      	strb	r2, [r3, #7]

	sd_mmc_spi_err = SD_MMC_SPI_NO_ERR;
     e56:	2200      	movs	r2, #0
     e58:	4b07      	ldr	r3, [pc, #28]	; (e78 <sd_mmc_spi_send_clock+0x2c>)
     e5a:	701a      	strb	r2, [r3, #0]
     e5c:	240a      	movs	r4, #10
	//! Send 80 cycles
	for (i = 0; i < 10; i++) {
		spi_write_buffer_wait(&sd_mmc_master, &dummy, 1); // 8 cycles
     e5e:	4e07      	ldr	r6, [pc, #28]	; (e7c <sd_mmc_spi_send_clock+0x30>)
     e60:	4d07      	ldr	r5, [pc, #28]	; (e80 <sd_mmc_spi_send_clock+0x34>)
     e62:	2201      	movs	r2, #1
     e64:	466b      	mov	r3, sp
     e66:	1dd9      	adds	r1, r3, #7
     e68:	0030      	movs	r0, r6
     e6a:	47a8      	blx	r5
     e6c:	3c01      	subs	r4, #1
     e6e:	b2e4      	uxtb	r4, r4
	for (i = 0; i < 10; i++) {
     e70:	2c00      	cmp	r4, #0
     e72:	d1f6      	bne.n	e62 <sd_mmc_spi_send_clock+0x16>
	}
}
     e74:	b002      	add	sp, #8
     e76:	bd70      	pop	{r4, r5, r6, pc}
     e78:	2000028f 	.word	0x2000028f
     e7c:	2000024c 	.word	0x2000024c
     e80:	000023f5 	.word	0x000023f5

00000e84 <sd_mmc_spi_adtc_start>:
	return sd_mmc_spi_adtc_start(cmd, arg, 0, 0, false);
}

bool sd_mmc_spi_adtc_start(sdmmc_cmd_def_t cmd, uint32_t arg,
		uint16_t block_size, uint16_t nb_block, bool access_block)
{
     e84:	b5f0      	push	{r4, r5, r6, r7, lr}
     e86:	46c6      	mov	lr, r8
     e88:	b500      	push	{lr}
     e8a:	b086      	sub	sp, #24
     e8c:	4680      	mov	r8, r0
     e8e:	9200      	str	r2, [sp, #0]
     e90:	9301      	str	r3, [sp, #4]
	uint8_t dummy = 0xFF;
     e92:	22ff      	movs	r2, #255	; 0xff
     e94:	230f      	movs	r3, #15
     e96:	a802      	add	r0, sp, #8
     e98:	4684      	mov	ip, r0
     e9a:	4463      	add	r3, ip
     e9c:	701a      	strb	r2, [r3, #0]
	uint8_t r1; //! R1 response
	uint16_t dummy2 = 0xFF;

	UNUSED(access_block);
	Assert(cmd & SDMMC_RESP_PRESENT); // Always a response in SPI mode
	sd_mmc_spi_err = SD_MMC_SPI_NO_ERR;
     e9e:	2200      	movs	r2, #0
     ea0:	4b53      	ldr	r3, [pc, #332]	; (ff0 <sd_mmc_spi_adtc_start+0x16c>)
     ea2:	701a      	strb	r2, [r3, #0]

	// Encode SPI command
	cmd_token[0] = SPI_CMD_ENCODE(SDMMC_CMD_GET_INDEX(cmd));
     ea4:	ab04      	add	r3, sp, #16
     ea6:	323f      	adds	r2, #63	; 0x3f
     ea8:	4640      	mov	r0, r8
     eaa:	4002      	ands	r2, r0
     eac:	2040      	movs	r0, #64	; 0x40
     eae:	4302      	orrs	r2, r0
     eb0:	701a      	strb	r2, [r3, #0]
	cmd_token[1] = arg >> 24;
     eb2:	0e0a      	lsrs	r2, r1, #24
     eb4:	705a      	strb	r2, [r3, #1]
	cmd_token[2] = arg >> 16;
     eb6:	0c0a      	lsrs	r2, r1, #16
     eb8:	709a      	strb	r2, [r3, #2]
	cmd_token[3] = arg >> 8;
     eba:	0a0a      	lsrs	r2, r1, #8
     ebc:	70da      	strb	r2, [r3, #3]
	cmd_token[4] = arg;
     ebe:	7119      	strb	r1, [r3, #4]
     ec0:	2700      	movs	r7, #0
	crc = 0;
     ec2:	2300      	movs	r3, #0
		value = *buf++;
     ec4:	a904      	add	r1, sp, #16
     ec6:	2208      	movs	r2, #8
				crc ^= 0x09;
     ec8:	2409      	movs	r4, #9
     eca:	e011      	b.n	ef0 <sd_mmc_spi_adtc_start+0x6c>
			value <<= 1;
     ecc:	0076      	lsls	r6, r6, #1
     ece:	b2f6      	uxtb	r6, r6
     ed0:	3801      	subs	r0, #1
     ed2:	b2c0      	uxtb	r0, r0
		for (i = 0; i < 8; i++) {
     ed4:	2800      	cmp	r0, #0
     ed6:	d008      	beq.n	eea <sd_mmc_spi_adtc_start+0x66>
			crc <<= 1;
     ed8:	005b      	lsls	r3, r3, #1
     eda:	b2db      	uxtb	r3, r3
			if ((value & 0x80) ^ (crc & 0x80)) {
     edc:	001d      	movs	r5, r3
     ede:	4075      	eors	r5, r6
     ee0:	062d      	lsls	r5, r5, #24
     ee2:	d5f3      	bpl.n	ecc <sd_mmc_spi_adtc_start+0x48>
				crc ^= 0x09;
     ee4:	4063      	eors	r3, r4
     ee6:	b2db      	uxtb	r3, r3
     ee8:	e7f0      	b.n	ecc <sd_mmc_spi_adtc_start+0x48>
     eea:	3701      	adds	r7, #1
	while (size--) {
     eec:	2f05      	cmp	r7, #5
     eee:	d002      	beq.n	ef6 <sd_mmc_spi_adtc_start+0x72>
		value = *buf++;
     ef0:	5c7e      	ldrb	r6, [r7, r1]
     ef2:	0010      	movs	r0, r2
     ef4:	e7f0      	b.n	ed8 <sd_mmc_spi_adtc_start+0x54>
	crc = (crc << 1) | 1;
     ef6:	005b      	lsls	r3, r3, #1
     ef8:	2201      	movs	r2, #1
     efa:	4313      	orrs	r3, r2
	cmd_token[5] = sd_mmc_spi_crc7(cmd_token, 5);
     efc:	ac04      	add	r4, sp, #16
     efe:	7163      	strb	r3, [r4, #5]

	// 8 cycles to respect Ncs timing
	// Note: This byte does not include start bit "0",
	// thus it is ignored by card.
	spi_write_buffer_wait(&sd_mmc_master, &dummy, 1);
     f00:	4e3c      	ldr	r6, [pc, #240]	; (ff4 <sd_mmc_spi_adtc_start+0x170>)
     f02:	2201      	movs	r2, #1
     f04:	210f      	movs	r1, #15
     f06:	ab02      	add	r3, sp, #8
     f08:	469c      	mov	ip, r3
     f0a:	4461      	add	r1, ip
     f0c:	0030      	movs	r0, r6
     f0e:	4f3a      	ldr	r7, [pc, #232]	; (ff8 <sd_mmc_spi_adtc_start+0x174>)
     f10:	47b8      	blx	r7
	// Send command
	spi_write_buffer_wait(&sd_mmc_master, cmd_token, sizeof(cmd_token));
     f12:	2206      	movs	r2, #6
     f14:	0021      	movs	r1, r4
     f16:	0030      	movs	r0, r6
     f18:	47b8      	blx	r7

	// Wait for response
	// Two retry will be done to manage the Ncr timing between command and reponse
	// Ncr: Min. 1x8 clock  cycle, Max. 8x8 clock cycles
	// WORKAROUND for no compliance card (Atmel Internal ref. SD13):
	r1 = 0xFF;
     f1a:	ab02      	add	r3, sp, #8
     f1c:	1dd9      	adds	r1, r3, #7
     f1e:	23ff      	movs	r3, #255	; 0xff
     f20:	700b      	strb	r3, [r1, #0]
	// Ignore first byte because Ncr min. = 8 clock cylces
	spi_read_buffer_wait(&sd_mmc_master, &r1, 1,
     f22:	2201      	movs	r2, #1
     f24:	0030      	movs	r0, r6
     f26:	4e35      	ldr	r6, [pc, #212]	; (ffc <sd_mmc_spi_adtc_start+0x178>)
     f28:	47b0      	blx	r6
     f2a:	2407      	movs	r4, #7
			dummy2);
	ncr_timeout = 7;
	while (1) {
		spi_read_buffer_wait(&sd_mmc_master, &r1, 1,
     f2c:	ab02      	add	r3, sp, #8
     f2e:	1dde      	adds	r6, r3, #7
     f30:	4f30      	ldr	r7, [pc, #192]	; (ff4 <sd_mmc_spi_adtc_start+0x170>)
     f32:	4d32      	ldr	r5, [pc, #200]	; (ffc <sd_mmc_spi_adtc_start+0x178>)
     f34:	23ff      	movs	r3, #255	; 0xff
     f36:	2201      	movs	r2, #1
     f38:	0031      	movs	r1, r6
     f3a:	0038      	movs	r0, r7
     f3c:	47a8      	blx	r5
			dummy2); // 8 cycles
		if ((r1 & R1_SPI_ERROR) == 0) {
     f3e:	7833      	ldrb	r3, [r6, #0]
     f40:	b25a      	sxtb	r2, r3
     f42:	2a00      	cmp	r2, #0
     f44:	da0b      	bge.n	f5e <sd_mmc_spi_adtc_start+0xda>
     f46:	3c01      	subs	r4, #1
     f48:	b2e4      	uxtb	r4, r4
			// Valid R1 response
			break;
		}
		if (--ncr_timeout == 0) {
     f4a:	2c00      	cmp	r4, #0
     f4c:	d1f2      	bne.n	f34 <sd_mmc_spi_adtc_start+0xb0>
			// Here Valid R1 response received
			sd_mmc_spi_debug("%s: cmd %02d, arg 0x%08lX, R1 timeout\n\r",
					__func__, (int)SDMMC_CMD_GET_INDEX(cmd), arg);
			sd_mmc_spi_err = SD_MMC_SPI_ERR_RESP_TIMEOUT;
     f4e:	2202      	movs	r2, #2
     f50:	4b27      	ldr	r3, [pc, #156]	; (ff0 <sd_mmc_spi_adtc_start+0x16c>)
     f52:	701a      	strb	r2, [r3, #0]
			return false;
     f54:	2000      	movs	r0, #0

	sd_mmc_spi_block_size = block_size;
	sd_mmc_spi_nb_block = nb_block;
	sd_mmc_spi_transfert_pos = 0;
	return true; // Command complete
}
     f56:	b006      	add	sp, #24
     f58:	bc04      	pop	{r2}
     f5a:	4690      	mov	r8, r2
     f5c:	bdf0      	pop	{r4, r5, r6, r7, pc}
	sd_mmc_spi_response_32 = r1;
     f5e:	4a28      	ldr	r2, [pc, #160]	; (1000 <sd_mmc_spi_adtc_start+0x17c>)
     f60:	6013      	str	r3, [r2, #0]
	if (r1 & R1_SPI_COM_CRC) {
     f62:	071a      	lsls	r2, r3, #28
     f64:	d41a      	bmi.n	f9c <sd_mmc_spi_adtc_start+0x118>
	if (r1 & R1_SPI_ILLEGAL_COMMAND) {
     f66:	075a      	lsls	r2, r3, #29
     f68:	d41d      	bmi.n	fa6 <sd_mmc_spi_adtc_start+0x122>
	if (r1 & ~R1_SPI_IDLE) {
     f6a:	2201      	movs	r2, #1
     f6c:	4393      	bics	r3, r2
     f6e:	d11f      	bne.n	fb0 <sd_mmc_spi_adtc_start+0x12c>
	if (cmd & SDMMC_RESP_BUSY) {
     f70:	4643      	mov	r3, r8
     f72:	049b      	lsls	r3, r3, #18
     f74:	d420      	bmi.n	fb8 <sd_mmc_spi_adtc_start+0x134>
	if (cmd & SDMMC_RESP_8) {
     f76:	4643      	mov	r3, r8
     f78:	059b      	lsls	r3, r3, #22
     f7a:	d425      	bmi.n	fc8 <sd_mmc_spi_adtc_start+0x144>
	if (cmd & SDMMC_RESP_32) {
     f7c:	4643      	mov	r3, r8
     f7e:	055b      	lsls	r3, r3, #21
     f80:	d42b      	bmi.n	fda <sd_mmc_spi_adtc_start+0x156>
	sd_mmc_spi_block_size = block_size;
     f82:	4b20      	ldr	r3, [pc, #128]	; (1004 <sd_mmc_spi_adtc_start+0x180>)
     f84:	466a      	mov	r2, sp
     f86:	8812      	ldrh	r2, [r2, #0]
     f88:	801a      	strh	r2, [r3, #0]
	sd_mmc_spi_nb_block = nb_block;
     f8a:	4b1f      	ldr	r3, [pc, #124]	; (1008 <sd_mmc_spi_adtc_start+0x184>)
     f8c:	466a      	mov	r2, sp
     f8e:	8892      	ldrh	r2, [r2, #4]
     f90:	801a      	strh	r2, [r3, #0]
	sd_mmc_spi_transfert_pos = 0;
     f92:	2200      	movs	r2, #0
     f94:	4b1d      	ldr	r3, [pc, #116]	; (100c <sd_mmc_spi_adtc_start+0x188>)
     f96:	601a      	str	r2, [r3, #0]
	return true; // Command complete
     f98:	2001      	movs	r0, #1
     f9a:	e7dc      	b.n	f56 <sd_mmc_spi_adtc_start+0xd2>
		sd_mmc_spi_err = SD_MMC_SPI_ERR_RESP_CRC;
     f9c:	2206      	movs	r2, #6
     f9e:	4b14      	ldr	r3, [pc, #80]	; (ff0 <sd_mmc_spi_adtc_start+0x16c>)
     fa0:	701a      	strb	r2, [r3, #0]
		return false;
     fa2:	2000      	movs	r0, #0
     fa4:	e7d7      	b.n	f56 <sd_mmc_spi_adtc_start+0xd2>
		sd_mmc_spi_err = SD_MMC_SPI_ERR_ILLEGAL_COMMAND;
     fa6:	2209      	movs	r2, #9
     fa8:	4b11      	ldr	r3, [pc, #68]	; (ff0 <sd_mmc_spi_adtc_start+0x16c>)
     faa:	701a      	strb	r2, [r3, #0]
		return false;
     fac:	2000      	movs	r0, #0
     fae:	e7d2      	b.n	f56 <sd_mmc_spi_adtc_start+0xd2>
		sd_mmc_spi_err = SD_MMC_SPI_ERR;
     fb0:	4b0f      	ldr	r3, [pc, #60]	; (ff0 <sd_mmc_spi_adtc_start+0x16c>)
     fb2:	701a      	strb	r2, [r3, #0]
		return false;
     fb4:	2000      	movs	r0, #0
     fb6:	e7ce      	b.n	f56 <sd_mmc_spi_adtc_start+0xd2>
		if (!sd_mmc_spi_wait_busy()) {
     fb8:	4b15      	ldr	r3, [pc, #84]	; (1010 <sd_mmc_spi_adtc_start+0x18c>)
     fba:	4798      	blx	r3
     fbc:	2800      	cmp	r0, #0
     fbe:	d1da      	bne.n	f76 <sd_mmc_spi_adtc_start+0xf2>
			sd_mmc_spi_err = SD_MMC_SPI_ERR_RESP_BUSY_TIMEOUT;
     fc0:	2203      	movs	r2, #3
     fc2:	4b0b      	ldr	r3, [pc, #44]	; (ff0 <sd_mmc_spi_adtc_start+0x16c>)
     fc4:	701a      	strb	r2, [r3, #0]
			return false;
     fc6:	e7c6      	b.n	f56 <sd_mmc_spi_adtc_start+0xd2>
		sd_mmc_spi_response_32 = 0;
     fc8:	490d      	ldr	r1, [pc, #52]	; (1000 <sd_mmc_spi_adtc_start+0x17c>)
     fca:	2300      	movs	r3, #0
     fcc:	600b      	str	r3, [r1, #0]
		spi_read_buffer_wait(&sd_mmc_master, (uint8_t *)&sd_mmc_spi_response_32, 1,
     fce:	33ff      	adds	r3, #255	; 0xff
     fd0:	2201      	movs	r2, #1
     fd2:	4808      	ldr	r0, [pc, #32]	; (ff4 <sd_mmc_spi_adtc_start+0x170>)
     fd4:	4e09      	ldr	r6, [pc, #36]	; (ffc <sd_mmc_spi_adtc_start+0x178>)
     fd6:	47b0      	blx	r6
     fd8:	e7d0      	b.n	f7c <sd_mmc_spi_adtc_start+0xf8>
		spi_read_buffer_wait(&sd_mmc_master, (uint8_t *)&sd_mmc_spi_response_32, 4,
     fda:	4e09      	ldr	r6, [pc, #36]	; (1000 <sd_mmc_spi_adtc_start+0x17c>)
     fdc:	23ff      	movs	r3, #255	; 0xff
     fde:	2204      	movs	r2, #4
     fe0:	0031      	movs	r1, r6
     fe2:	4804      	ldr	r0, [pc, #16]	; (ff4 <sd_mmc_spi_adtc_start+0x170>)
     fe4:	4f05      	ldr	r7, [pc, #20]	; (ffc <sd_mmc_spi_adtc_start+0x178>)
     fe6:	47b8      	blx	r7
		sd_mmc_spi_response_32 = be32_to_cpu(sd_mmc_spi_response_32);
     fe8:	6833      	ldr	r3, [r6, #0]
     fea:	ba1b      	rev	r3, r3
     fec:	6033      	str	r3, [r6, #0]
     fee:	e7c8      	b.n	f82 <sd_mmc_spi_adtc_start+0xfe>
     ff0:	2000028f 	.word	0x2000028f
     ff4:	2000024c 	.word	0x2000024c
     ff8:	000023f5 	.word	0x000023f5
     ffc:	0000222d 	.word	0x0000222d
    1000:	20000294 	.word	0x20000294
    1004:	20000288 	.word	0x20000288
    1008:	20000290 	.word	0x20000290
    100c:	20000298 	.word	0x20000298
    1010:	00000b05 	.word	0x00000b05

00001014 <sd_mmc_spi_send_cmd>:
{
    1014:	b510      	push	{r4, lr}
    1016:	b082      	sub	sp, #8
	return sd_mmc_spi_adtc_start(cmd, arg, 0, 0, false);
    1018:	2300      	movs	r3, #0
    101a:	9300      	str	r3, [sp, #0]
    101c:	2200      	movs	r2, #0
    101e:	4c02      	ldr	r4, [pc, #8]	; (1028 <sd_mmc_spi_send_cmd+0x14>)
    1020:	47a0      	blx	r4
}
    1022:	b002      	add	sp, #8
    1024:	bd10      	pop	{r4, pc}
    1026:	46c0      	nop			; (mov r8, r8)
    1028:	00000e85 	.word	0x00000e85

0000102c <sd_mmc_spi_get_response>:

uint32_t sd_mmc_spi_get_response(void)
{
	return sd_mmc_spi_response_32;
    102c:	4b01      	ldr	r3, [pc, #4]	; (1034 <sd_mmc_spi_get_response+0x8>)
    102e:	6818      	ldr	r0, [r3, #0]
}
    1030:	4770      	bx	lr
    1032:	46c0      	nop			; (mov r8, r8)
    1034:	20000294 	.word	0x20000294

00001038 <sd_mmc_spi_read_word>:

bool sd_mmc_spi_read_word(uint32_t* value)
{
    1038:	b510      	push	{r4, lr}
    103a:	b084      	sub	sp, #16
    103c:	9001      	str	r0, [sp, #4]
	uint16_t dummy = 0xFF;

	sd_mmc_spi_err = SD_MMC_SPI_NO_ERR;
    103e:	2200      	movs	r2, #0
    1040:	4b14      	ldr	r3, [pc, #80]	; (1094 <sd_mmc_spi_read_word+0x5c>)
    1042:	701a      	strb	r2, [r3, #0]
	Assert(sd_mmc_spi_nb_block >
			(sd_mmc_spi_transfert_pos / sd_mmc_spi_block_size));

	if (!(sd_mmc_spi_transfert_pos % sd_mmc_spi_block_size)) {
    1044:	4b14      	ldr	r3, [pc, #80]	; (1098 <sd_mmc_spi_read_word+0x60>)
    1046:	8819      	ldrh	r1, [r3, #0]
    1048:	4b14      	ldr	r3, [pc, #80]	; (109c <sd_mmc_spi_read_word+0x64>)
    104a:	6818      	ldr	r0, [r3, #0]
    104c:	4b14      	ldr	r3, [pc, #80]	; (10a0 <sd_mmc_spi_read_word+0x68>)
    104e:	4798      	blx	r3
    1050:	2900      	cmp	r1, #0
    1052:	d103      	bne.n	105c <sd_mmc_spi_read_word+0x24>
		// New block
		if (!sd_mmc_spi_start_read_block()) {
    1054:	4b13      	ldr	r3, [pc, #76]	; (10a4 <sd_mmc_spi_read_word+0x6c>)
    1056:	4798      	blx	r3
    1058:	2800      	cmp	r0, #0
    105a:	d010      	beq.n	107e <sd_mmc_spi_read_word+0x46>
			return false;
		}
	}
	// Read data
	spi_read_buffer_wait(&sd_mmc_master, (uint8_t *)&value, 4,
    105c:	23ff      	movs	r3, #255	; 0xff
    105e:	2204      	movs	r2, #4
    1060:	a901      	add	r1, sp, #4
    1062:	4811      	ldr	r0, [pc, #68]	; (10a8 <sd_mmc_spi_read_word+0x70>)
    1064:	4c11      	ldr	r4, [pc, #68]	; (10ac <sd_mmc_spi_read_word+0x74>)
    1066:	47a0      	blx	r4
			dummy);
	*value = le32_to_cpu(*value);
	sd_mmc_spi_transfert_pos += 4;
    1068:	4b0c      	ldr	r3, [pc, #48]	; (109c <sd_mmc_spi_read_word+0x64>)
    106a:	681a      	ldr	r2, [r3, #0]
    106c:	1d10      	adds	r0, r2, #4
    106e:	6018      	str	r0, [r3, #0]

	if (!(sd_mmc_spi_transfert_pos % sd_mmc_spi_block_size)) {
    1070:	4b09      	ldr	r3, [pc, #36]	; (1098 <sd_mmc_spi_read_word+0x60>)
    1072:	8819      	ldrh	r1, [r3, #0]
    1074:	4b0a      	ldr	r3, [pc, #40]	; (10a0 <sd_mmc_spi_read_word+0x68>)
    1076:	4798      	blx	r3
		// End of block
		sd_mmc_spi_stop_read_block();
	}
	return true;
    1078:	2001      	movs	r0, #1
	if (!(sd_mmc_spi_transfert_pos % sd_mmc_spi_block_size)) {
    107a:	2900      	cmp	r1, #0
    107c:	d001      	beq.n	1082 <sd_mmc_spi_read_word+0x4a>
}
    107e:	b004      	add	sp, #16
    1080:	bd10      	pop	{r4, pc}
	spi_read_buffer_wait(&sd_mmc_master, crc, 2,
    1082:	23ff      	movs	r3, #255	; 0xff
    1084:	2202      	movs	r2, #2
    1086:	a903      	add	r1, sp, #12
    1088:	4807      	ldr	r0, [pc, #28]	; (10a8 <sd_mmc_spi_read_word+0x70>)
    108a:	4c08      	ldr	r4, [pc, #32]	; (10ac <sd_mmc_spi_read_word+0x74>)
    108c:	47a0      	blx	r4
	return true;
    108e:	2001      	movs	r0, #1
    1090:	e7f5      	b.n	107e <sd_mmc_spi_read_word+0x46>
    1092:	46c0      	nop			; (mov r8, r8)
    1094:	2000028f 	.word	0x2000028f
    1098:	20000288 	.word	0x20000288
    109c:	20000298 	.word	0x20000298
    10a0:	00005859 	.word	0x00005859
    10a4:	00000be1 	.word	0x00000be1
    10a8:	2000024c 	.word	0x2000024c
    10ac:	0000222d 	.word	0x0000222d

000010b0 <sd_mmc_spi_start_read_blocks>:
	}
	return sd_mmc_spi_stop_multiwrite_block();
}

bool sd_mmc_spi_start_read_blocks(void *dest, uint16_t nb_block)
{
    10b0:	b5f0      	push	{r4, r5, r6, r7, lr}
    10b2:	46de      	mov	lr, fp
    10b4:	4657      	mov	r7, sl
    10b6:	4646      	mov	r6, r8
    10b8:	b5c0      	push	{r6, r7, lr}
    10ba:	b082      	sub	sp, #8
    10bc:	4683      	mov	fp, r0
	uint32_t pos;
	uint16_t dummy = 0xFF;

	sd_mmc_spi_err = SD_MMC_SPI_NO_ERR;
    10be:	2200      	movs	r2, #0
    10c0:	4b17      	ldr	r3, [pc, #92]	; (1120 <sd_mmc_spi_start_read_blocks+0x70>)
    10c2:	701a      	strb	r2, [r3, #0]
	pos = 0;
	while (nb_block--) {
    10c4:	1e4c      	subs	r4, r1, #1
    10c6:	b2a4      	uxth	r4, r4
    10c8:	2900      	cmp	r1, #0
    10ca:	d026      	beq.n	111a <sd_mmc_spi_start_read_blocks+0x6a>
    10cc:	2600      	movs	r6, #0
		Assert(sd_mmc_spi_nb_block >
				(sd_mmc_spi_transfert_pos / sd_mmc_spi_block_size));
		if (!sd_mmc_spi_start_read_block()) {
    10ce:	4b15      	ldr	r3, [pc, #84]	; (1124 <sd_mmc_spi_start_read_blocks+0x74>)
    10d0:	469a      	mov	sl, r3
			return false;
		}

		// Read block
		spi_read_buffer_wait(&sd_mmc_master, &((uint8_t*)dest)[pos],
    10d2:	4f15      	ldr	r7, [pc, #84]	; (1128 <sd_mmc_spi_start_read_blocks+0x78>)
		if (!sd_mmc_spi_start_read_block()) {
    10d4:	47d0      	blx	sl
    10d6:	4680      	mov	r8, r0
    10d8:	2800      	cmp	r0, #0
    10da:	d017      	beq.n	110c <sd_mmc_spi_start_read_blocks+0x5c>
		spi_read_buffer_wait(&sd_mmc_master, &((uint8_t*)dest)[pos],
    10dc:	883a      	ldrh	r2, [r7, #0]
    10de:	465b      	mov	r3, fp
    10e0:	1999      	adds	r1, r3, r6
    10e2:	23ff      	movs	r3, #255	; 0xff
    10e4:	4811      	ldr	r0, [pc, #68]	; (112c <sd_mmc_spi_start_read_blocks+0x7c>)
    10e6:	4d12      	ldr	r5, [pc, #72]	; (1130 <sd_mmc_spi_start_read_blocks+0x80>)
    10e8:	47a8      	blx	r5
			sd_mmc_spi_block_size, dummy);
		pos += sd_mmc_spi_block_size;
    10ea:	883b      	ldrh	r3, [r7, #0]
    10ec:	18f6      	adds	r6, r6, r3
		sd_mmc_spi_transfert_pos += sd_mmc_spi_block_size;
    10ee:	4a11      	ldr	r2, [pc, #68]	; (1134 <sd_mmc_spi_start_read_blocks+0x84>)
    10f0:	6811      	ldr	r1, [r2, #0]
    10f2:	468c      	mov	ip, r1
    10f4:	4463      	add	r3, ip
    10f6:	6013      	str	r3, [r2, #0]
	spi_read_buffer_wait(&sd_mmc_master, crc, 2,
    10f8:	23ff      	movs	r3, #255	; 0xff
    10fa:	2202      	movs	r2, #2
    10fc:	a901      	add	r1, sp, #4
    10fe:	480b      	ldr	r0, [pc, #44]	; (112c <sd_mmc_spi_start_read_blocks+0x7c>)
    1100:	47a8      	blx	r5
	while (nb_block--) {
    1102:	3c01      	subs	r4, #1
    1104:	b2a4      	uxth	r4, r4
    1106:	4b0c      	ldr	r3, [pc, #48]	; (1138 <sd_mmc_spi_start_read_blocks+0x88>)
    1108:	429c      	cmp	r4, r3
    110a:	d1e3      	bne.n	10d4 <sd_mmc_spi_start_read_blocks+0x24>

		sd_mmc_spi_stop_read_block();
	}
	return true;
}
    110c:	4640      	mov	r0, r8
    110e:	b002      	add	sp, #8
    1110:	bc1c      	pop	{r2, r3, r4}
    1112:	4690      	mov	r8, r2
    1114:	469a      	mov	sl, r3
    1116:	46a3      	mov	fp, r4
    1118:	bdf0      	pop	{r4, r5, r6, r7, pc}
	return true;
    111a:	2301      	movs	r3, #1
    111c:	4698      	mov	r8, r3
    111e:	e7f5      	b.n	110c <sd_mmc_spi_start_read_blocks+0x5c>
    1120:	2000028f 	.word	0x2000028f
    1124:	00000be1 	.word	0x00000be1
    1128:	20000288 	.word	0x20000288
    112c:	2000024c 	.word	0x2000024c
    1130:	0000222d 	.word	0x0000222d
    1134:	20000298 	.word	0x20000298
    1138:	0000ffff 	.word	0x0000ffff

0000113c <sd_mmc_spi_wait_end_of_read_blocks>:

bool sd_mmc_spi_wait_end_of_read_blocks(void)
{
	return true;
}
    113c:	2001      	movs	r0, #1
    113e:	4770      	bx	lr

00001140 <sd_mmc_spi_start_write_blocks>:

bool sd_mmc_spi_start_write_blocks(const void *src, uint16_t nb_block)
{
    1140:	b5f0      	push	{r4, r5, r6, r7, lr}
    1142:	46c6      	mov	lr, r8
    1144:	b500      	push	{lr}
    1146:	4680      	mov	r8, r0
	uint32_t pos;

	sd_mmc_spi_err = SD_MMC_SPI_NO_ERR;
    1148:	2200      	movs	r2, #0
    114a:	4b15      	ldr	r3, [pc, #84]	; (11a0 <sd_mmc_spi_start_write_blocks+0x60>)
    114c:	701a      	strb	r2, [r3, #0]
	pos = 0;
    114e:	2500      	movs	r5, #0
	while (nb_block--) {
		Assert(sd_mmc_spi_nb_block >
				(sd_mmc_spi_transfert_pos / sd_mmc_spi_block_size));
		sd_mmc_spi_start_write_block();
    1150:	4f14      	ldr	r7, [pc, #80]	; (11a4 <sd_mmc_spi_start_write_blocks+0x64>)

		// Write block
		spi_write_buffer_wait(&sd_mmc_master, &((uint8_t*)src)[pos],
    1152:	4e15      	ldr	r6, [pc, #84]	; (11a8 <sd_mmc_spi_start_write_blocks+0x68>)
	while (nb_block--) {
    1154:	e000      	b.n	1158 <sd_mmc_spi_start_write_blocks+0x18>
{
    1156:	0021      	movs	r1, r4
	while (nb_block--) {
    1158:	1e4c      	subs	r4, r1, #1
    115a:	b2a4      	uxth	r4, r4
    115c:	2900      	cmp	r1, #0
    115e:	d01b      	beq.n	1198 <sd_mmc_spi_start_write_blocks+0x58>
		sd_mmc_spi_start_write_block();
    1160:	47b8      	blx	r7
		spi_write_buffer_wait(&sd_mmc_master, &((uint8_t*)src)[pos],
    1162:	8832      	ldrh	r2, [r6, #0]
    1164:	4643      	mov	r3, r8
    1166:	1959      	adds	r1, r3, r5
    1168:	4810      	ldr	r0, [pc, #64]	; (11ac <sd_mmc_spi_start_write_blocks+0x6c>)
    116a:	4b11      	ldr	r3, [pc, #68]	; (11b0 <sd_mmc_spi_start_write_blocks+0x70>)
    116c:	4798      	blx	r3
				sd_mmc_spi_block_size);
		pos += sd_mmc_spi_block_size;
    116e:	8833      	ldrh	r3, [r6, #0]
    1170:	18ed      	adds	r5, r5, r3
		sd_mmc_spi_transfert_pos += sd_mmc_spi_block_size;
    1172:	4a10      	ldr	r2, [pc, #64]	; (11b4 <sd_mmc_spi_start_write_blocks+0x74>)
    1174:	6811      	ldr	r1, [r2, #0]
    1176:	468c      	mov	ip, r1
    1178:	4463      	add	r3, ip
    117a:	6013      	str	r3, [r2, #0]

		if (!sd_mmc_spi_stop_write_block()) {
    117c:	4b0e      	ldr	r3, [pc, #56]	; (11b8 <sd_mmc_spi_start_write_blocks+0x78>)
    117e:	4798      	blx	r3
    1180:	2800      	cmp	r0, #0
    1182:	d00a      	beq.n	119a <sd_mmc_spi_start_write_blocks+0x5a>
			return false;
		}
		// Do not check busy of last block
		// but delay it to mci_wait_end_of_write_blocks()
		if (nb_block) {
    1184:	2c00      	cmp	r4, #0
    1186:	d0e6      	beq.n	1156 <sd_mmc_spi_start_write_blocks+0x16>
			// Wait busy due to data programmation
			if (!sd_mmc_spi_wait_busy()) {
    1188:	4b0c      	ldr	r3, [pc, #48]	; (11bc <sd_mmc_spi_start_write_blocks+0x7c>)
    118a:	4798      	blx	r3
    118c:	2800      	cmp	r0, #0
    118e:	d1e2      	bne.n	1156 <sd_mmc_spi_start_write_blocks+0x16>
				sd_mmc_spi_err = SD_MMC_SPI_ERR_WRITE_TIMEOUT;
    1190:	2205      	movs	r2, #5
    1192:	4b03      	ldr	r3, [pc, #12]	; (11a0 <sd_mmc_spi_start_write_blocks+0x60>)
    1194:	701a      	strb	r2, [r3, #0]
				sd_mmc_spi_debug("%s: Write blocks timeout\n\r", __func__);
				return false;
    1196:	e000      	b.n	119a <sd_mmc_spi_start_write_blocks+0x5a>
			}
		}
	}
	return true;
    1198:	2001      	movs	r0, #1
}
    119a:	bc04      	pop	{r2}
    119c:	4690      	mov	r8, r2
    119e:	bdf0      	pop	{r4, r5, r6, r7, pc}
    11a0:	2000028f 	.word	0x2000028f
    11a4:	00000abd 	.word	0x00000abd
    11a8:	20000288 	.word	0x20000288
    11ac:	2000024c 	.word	0x2000024c
    11b0:	000023f5 	.word	0x000023f5
    11b4:	20000298 	.word	0x20000298
    11b8:	00000c4d 	.word	0x00000c4d
    11bc:	00000b05 	.word	0x00000b05

000011c0 <sd_mmc_spi_wait_end_of_write_blocks>:

bool sd_mmc_spi_wait_end_of_write_blocks(void)
{
    11c0:	b510      	push	{r4, lr}
	// Wait busy due to data programmation of last block writed
	if (!sd_mmc_spi_wait_busy()) {
    11c2:	4b05      	ldr	r3, [pc, #20]	; (11d8 <sd_mmc_spi_wait_end_of_write_blocks+0x18>)
    11c4:	4798      	blx	r3
    11c6:	2800      	cmp	r0, #0
    11c8:	d103      	bne.n	11d2 <sd_mmc_spi_wait_end_of_write_blocks+0x12>
		sd_mmc_spi_err = SD_MMC_SPI_ERR_WRITE_TIMEOUT;
    11ca:	2205      	movs	r2, #5
    11cc:	4b03      	ldr	r3, [pc, #12]	; (11dc <sd_mmc_spi_wait_end_of_write_blocks+0x1c>)
    11ce:	701a      	strb	r2, [r3, #0]
		sd_mmc_spi_debug("%s: Write blocks timeout\n\r", __func__);
		return false;
	}
	return sd_mmc_spi_stop_multiwrite_block();
}
    11d0:	bd10      	pop	{r4, pc}
	return sd_mmc_spi_stop_multiwrite_block();
    11d2:	4b03      	ldr	r3, [pc, #12]	; (11e0 <sd_mmc_spi_wait_end_of_write_blocks+0x20>)
    11d4:	4798      	blx	r3
    11d6:	e7fb      	b.n	11d0 <sd_mmc_spi_wait_end_of_write_blocks+0x10>
    11d8:	00000b05 	.word	0x00000b05
    11dc:	2000028f 	.word	0x2000028f
    11e0:	00000b69 	.word	0x00000b69

000011e4 <delay_init>:
 *
 * This must be called during start up to initialize the delay routine with
 * the current used main clock. It must run any time the main CPU clock is changed.
 */
void delay_init(void)
{
    11e4:	b570      	push	{r4, r5, r6, lr}
	cycles_per_ms = system_gclk_gen_get_hz(0);
    11e6:	2000      	movs	r0, #0
    11e8:	4b08      	ldr	r3, [pc, #32]	; (120c <delay_init+0x28>)
    11ea:	4798      	blx	r3
    11ec:	0005      	movs	r5, r0
	cycles_per_ms /= 1000;
    11ee:	4c08      	ldr	r4, [pc, #32]	; (1210 <delay_init+0x2c>)
    11f0:	21fa      	movs	r1, #250	; 0xfa
    11f2:	0089      	lsls	r1, r1, #2
    11f4:	47a0      	blx	r4
    11f6:	4b07      	ldr	r3, [pc, #28]	; (1214 <delay_init+0x30>)
    11f8:	6018      	str	r0, [r3, #0]
	cycles_per_us = cycles_per_ms / 1000;
    11fa:	4907      	ldr	r1, [pc, #28]	; (1218 <delay_init+0x34>)
    11fc:	0028      	movs	r0, r5
    11fe:	47a0      	blx	r4
    1200:	4b06      	ldr	r3, [pc, #24]	; (121c <delay_init+0x38>)
    1202:	6018      	str	r0, [r3, #0]

	SysTick->CTRL = SysTick_CTRL_CLKSOURCE_Msk | SysTick_CTRL_ENABLE_Msk;
    1204:	2205      	movs	r2, #5
    1206:	4b06      	ldr	r3, [pc, #24]	; (1220 <delay_init+0x3c>)
    1208:	601a      	str	r2, [r3, #0]
}
    120a:	bd70      	pop	{r4, r5, r6, pc}
    120c:	00003135 	.word	0x00003135
    1210:	0000574d 	.word	0x0000574d
    1214:	20000004 	.word	0x20000004
    1218:	000f4240 	.word	0x000f4240
    121c:	20000008 	.word	0x20000008
    1220:	e000e010 	.word	0xe000e010

00001224 <delay_cycles_ms>:
 *
 * \param n  Number of milliseconds to wait
 */
void delay_cycles_ms(
		uint32_t n)
{
    1224:	b530      	push	{r4, r5, lr}
	while (n--) {
		/* Devide up to blocks of 1ms */
		delay_cycles(cycles_per_ms);
    1226:	4b08      	ldr	r3, [pc, #32]	; (1248 <delay_cycles_ms+0x24>)
    1228:	681c      	ldr	r4, [r3, #0]
 */
static inline void delay_cycles(
		const uint32_t n)
{
	if (n > 0) {
		SysTick->LOAD = n;
    122a:	4a08      	ldr	r2, [pc, #32]	; (124c <delay_cycles_ms+0x28>)
		SysTick->VAL = 0;
    122c:	2500      	movs	r5, #0

			while (!(SysTick->CTRL & SysTick_CTRL_COUNTFLAG_Msk)) {
    122e:	2180      	movs	r1, #128	; 0x80
    1230:	0249      	lsls	r1, r1, #9
	while (n--) {
    1232:	3801      	subs	r0, #1
    1234:	d307      	bcc.n	1246 <delay_cycles_ms+0x22>
	if (n > 0) {
    1236:	2c00      	cmp	r4, #0
    1238:	d0fb      	beq.n	1232 <delay_cycles_ms+0xe>
		SysTick->LOAD = n;
    123a:	6054      	str	r4, [r2, #4]
		SysTick->VAL = 0;
    123c:	6095      	str	r5, [r2, #8]
			while (!(SysTick->CTRL & SysTick_CTRL_COUNTFLAG_Msk)) {
    123e:	6813      	ldr	r3, [r2, #0]
    1240:	420b      	tst	r3, r1
    1242:	d0fc      	beq.n	123e <delay_cycles_ms+0x1a>
    1244:	e7f5      	b.n	1232 <delay_cycles_ms+0xe>
	}
}
    1246:	bd30      	pop	{r4, r5, pc}
    1248:	20000004 	.word	0x20000004
    124c:	e000e010 	.word	0xe000e010

00001250 <crc32_recalculate>:
 * first, then this function for the following blocks.
 *
 * \attention This implementation assumes a little-endian architecture.
 */
enum status_code crc32_recalculate(const void *data, size_t length, crc32_t *crc)
{
    1250:	b5f0      	push	{r4, r5, r6, r7, lr}
    1252:	46c6      	mov	lr, r8
    1254:	b500      	push	{lr}
	const word_t *word_ptr =
			(word_t *)((uintptr_t)data & WORD_ALIGNMENT_MASK);
    1256:	2303      	movs	r3, #3
    1258:	0007      	movs	r7, r0
    125a:	439f      	bics	r7, r3
	size_t temp_length;
	crc32_t temp_crc = COMPLEMENT_CRC(*crc);
    125c:	6813      	ldr	r3, [r2, #0]
    125e:	43db      	mvns	r3, r3
	word_t word;

	// Calculate for initial bytes to get word-aligned
	if (length < WORD_SIZE) {
		temp_length = length;
    1260:	000c      	movs	r4, r1
	if (length < WORD_SIZE) {
    1262:	2903      	cmp	r1, #3
    1264:	d902      	bls.n	126c <crc32_recalculate+0x1c>
	} else {
		temp_length = ~WORD_ALIGNMENT_MASK & (WORD_SIZE - (uintptr_t)data);
    1266:	4244      	negs	r4, r0
    1268:	2003      	movs	r0, #3
    126a:	4004      	ands	r4, r0
	}

	if (temp_length) {
    126c:	2c00      	cmp	r4, #0
    126e:	d016      	beq.n	129e <crc32_recalculate+0x4e>
		length -= temp_length;
    1270:	1b09      	subs	r1, r1, r4

		word = *(word_ptr++);
    1272:	1d3e      	adds	r6, r7, #4
    1274:	683d      	ldr	r5, [r7, #0]
		word >>= 8 * (WORD_SIZE - temp_length);
    1276:	00e0      	lsls	r0, r4, #3
    1278:	4240      	negs	r0, r0
    127a:	3020      	adds	r0, #32
    127c:	40c5      	lsrs	r5, r0
	crc ^= data;
    127e:	406b      	eors	r3, r5
	for (bit = 8 * bytes; bit > 0; bit--) {
    1280:	00e0      	lsls	r0, r4, #3
    1282:	d019      	beq.n	12b8 <crc32_recalculate+0x68>
		if (crc & 1) {
    1284:	2401      	movs	r4, #1
			crc = (crc >> 1) ^ CRC32_POLYNOMIAL;
    1286:	4d27      	ldr	r5, [pc, #156]	; (1324 <crc32_recalculate+0xd4>)
    1288:	e003      	b.n	1292 <crc32_recalculate+0x42>
			crc >>= 1;
    128a:	085b      	lsrs	r3, r3, #1
	for (bit = 8 * bytes; bit > 0; bit--) {
    128c:	3801      	subs	r0, #1
    128e:	2800      	cmp	r0, #0
    1290:	d004      	beq.n	129c <crc32_recalculate+0x4c>
		if (crc & 1) {
    1292:	421c      	tst	r4, r3
    1294:	d0f9      	beq.n	128a <crc32_recalculate+0x3a>
			crc = (crc >> 1) ^ CRC32_POLYNOMIAL;
    1296:	085b      	lsrs	r3, r3, #1
    1298:	406b      	eors	r3, r5
    129a:	e7f7      	b.n	128c <crc32_recalculate+0x3c>
		word = *(word_ptr++);
    129c:	0037      	movs	r7, r6
		temp_crc = _crc32_recalculate_bytes_helper(word, temp_crc, temp_length);
	}

	// Calculate for whole words, if any
	temp_length = length & WORD_ALIGNMENT_MASK;
    129e:	2003      	movs	r0, #3
    12a0:	000c      	movs	r4, r1
    12a2:	4384      	bics	r4, r0

	if (temp_length) {
    12a4:	d01e      	beq.n	12e4 <crc32_recalculate+0x94>
		length -= temp_length;
    12a6:	1b08      	subs	r0, r1, r4
    12a8:	4684      	mov	ip, r0
		temp_length /= WORD_SIZE;
    12aa:	0889      	lsrs	r1, r1, #2
    12ac:	4688      	mov	r8, r1
    12ae:	003e      	movs	r6, r7
    12b0:	000d      	movs	r5, r1
		if (crc & 1) {
    12b2:	2001      	movs	r0, #1
			crc = (crc >> 1) ^ CRC32_POLYNOMIAL;
    12b4:	4c1b      	ldr	r4, [pc, #108]	; (1324 <crc32_recalculate+0xd4>)

		while (temp_length--) {
    12b6:	e00b      	b.n	12d0 <crc32_recalculate+0x80>
		word = *(word_ptr++);
    12b8:	0037      	movs	r7, r6
    12ba:	e7f0      	b.n	129e <crc32_recalculate+0x4e>
			crc >>= 1;
    12bc:	085b      	lsrs	r3, r3, #1
    12be:	3901      	subs	r1, #1
	for (bit = 8 * bytes; bit > 0; bit--) {
    12c0:	2900      	cmp	r1, #0
    12c2:	d004      	beq.n	12ce <crc32_recalculate+0x7e>
		if (crc & 1) {
    12c4:	4218      	tst	r0, r3
    12c6:	d0f9      	beq.n	12bc <crc32_recalculate+0x6c>
			crc = (crc >> 1) ^ CRC32_POLYNOMIAL;
    12c8:	085b      	lsrs	r3, r3, #1
    12ca:	4063      	eors	r3, r4
    12cc:	e7f7      	b.n	12be <crc32_recalculate+0x6e>
    12ce:	3604      	adds	r6, #4
		while (temp_length--) {
    12d0:	3d01      	subs	r5, #1
    12d2:	d303      	bcc.n	12dc <crc32_recalculate+0x8c>
	crc ^= data;
    12d4:	6831      	ldr	r1, [r6, #0]
    12d6:	404b      	eors	r3, r1
    12d8:	2120      	movs	r1, #32
    12da:	e7f3      	b.n	12c4 <crc32_recalculate+0x74>
    12dc:	4641      	mov	r1, r8
    12de:	0089      	lsls	r1, r1, #2
    12e0:	187f      	adds	r7, r7, r1
		length -= temp_length;
    12e2:	4661      	mov	r1, ip
			temp_crc = _crc32_recalculate_bytes_helper(word, temp_crc, WORD_SIZE);
		}
	}

	// Calculate for tailing bytes
	if (length) {
    12e4:	2900      	cmp	r1, #0
    12e6:	d017      	beq.n	1318 <crc32_recalculate+0xc8>
		word = *word_ptr;
    12e8:	683c      	ldr	r4, [r7, #0]
		word &= 0xffffffffUL >> (8 * (WORD_SIZE - length));
    12ea:	00c8      	lsls	r0, r1, #3
    12ec:	4240      	negs	r0, r0
    12ee:	3020      	adds	r0, #32
    12f0:	2501      	movs	r5, #1
    12f2:	426d      	negs	r5, r5
    12f4:	40c5      	lsrs	r5, r0
    12f6:	0028      	movs	r0, r5
    12f8:	4020      	ands	r0, r4
	crc ^= data;
    12fa:	4043      	eors	r3, r0
	for (bit = 8 * bytes; bit > 0; bit--) {
    12fc:	00c9      	lsls	r1, r1, #3
    12fe:	d00b      	beq.n	1318 <crc32_recalculate+0xc8>
		if (crc & 1) {
    1300:	2001      	movs	r0, #1
			crc = (crc >> 1) ^ CRC32_POLYNOMIAL;
    1302:	4c08      	ldr	r4, [pc, #32]	; (1324 <crc32_recalculate+0xd4>)
    1304:	e003      	b.n	130e <crc32_recalculate+0xbe>
			crc >>= 1;
    1306:	085b      	lsrs	r3, r3, #1
	for (bit = 8 * bytes; bit > 0; bit--) {
    1308:	3901      	subs	r1, #1
    130a:	2900      	cmp	r1, #0
    130c:	d004      	beq.n	1318 <crc32_recalculate+0xc8>
		if (crc & 1) {
    130e:	4218      	tst	r0, r3
    1310:	d0f9      	beq.n	1306 <crc32_recalculate+0xb6>
			crc = (crc >> 1) ^ CRC32_POLYNOMIAL;
    1312:	085b      	lsrs	r3, r3, #1
    1314:	4063      	eors	r3, r4
    1316:	e7f7      	b.n	1308 <crc32_recalculate+0xb8>
		temp_crc = _crc32_recalculate_bytes_helper(word, temp_crc, length);
	}

	*crc = COMPLEMENT_CRC(temp_crc);
    1318:	43db      	mvns	r3, r3
    131a:	6013      	str	r3, [r2, #0]

	return STATUS_OK;
    131c:	2000      	movs	r0, #0
    131e:	bc04      	pop	{r2}
    1320:	4690      	mov	r8, r2
    1322:	bdf0      	pop	{r4, r5, r6, r7, pc}
    1324:	edb88320 	.word	0xedb88320

00001328 <mem_test_unit_ready>:
  return LUN_ID_0;
}


Ctrl_status mem_test_unit_ready(U8 lun)
{
    1328:	b510      	push	{r4, lr}

  if (!Ctrl_access_lock()) return CTRL_FAIL;

  status =
#if MAX_LUN
         (lun < MAX_LUN) ? lun_desc[lun].test_unit_ready() :
    132a:	2301      	movs	r3, #1
    132c:	2800      	cmp	r0, #0
    132e:	d001      	beq.n	1334 <mem_test_unit_ready+0xc>
#endif

  Ctrl_access_unlock();

  return status;
}
    1330:	0018      	movs	r0, r3
    1332:	bd10      	pop	{r4, pc}
         (lun < MAX_LUN) ? lun_desc[lun].test_unit_ready() :
    1334:	4b01      	ldr	r3, [pc, #4]	; (133c <mem_test_unit_ready+0x14>)
    1336:	4798      	blx	r3
    1338:	0003      	movs	r3, r0
    133a:	e7f9      	b.n	1330 <mem_test_unit_ready+0x8>
    133c:	000009bd 	.word	0x000009bd

00001340 <mem_read_capacity>:


Ctrl_status mem_read_capacity(U8 lun, U32 *u32_nb_sector)
{
    1340:	b510      	push	{r4, lr}

  if (!Ctrl_access_lock()) return CTRL_FAIL;

  status =
#if MAX_LUN
         (lun < MAX_LUN) ? lun_desc[lun].read_capacity(u32_nb_sector) :
    1342:	2301      	movs	r3, #1
    1344:	2800      	cmp	r0, #0
    1346:	d001      	beq.n	134c <mem_read_capacity+0xc>
#endif

  Ctrl_access_unlock();

  return status;
}
    1348:	0018      	movs	r0, r3
    134a:	bd10      	pop	{r4, pc}
         (lun < MAX_LUN) ? lun_desc[lun].read_capacity(u32_nb_sector) :
    134c:	0008      	movs	r0, r1
    134e:	4b02      	ldr	r3, [pc, #8]	; (1358 <mem_read_capacity+0x18>)
    1350:	4798      	blx	r3
    1352:	0003      	movs	r3, r0
    1354:	e7f8      	b.n	1348 <mem_read_capacity+0x8>
    1356:	46c0      	nop			; (mov r8, r8)
    1358:	000009ed 	.word	0x000009ed

0000135c <mem_sector_size>:

  if (!Ctrl_access_lock()) return 0;

  sector_size =
#if MAX_LUN
              (lun < MAX_LUN) ? 1 :
    135c:	4243      	negs	r3, r0
    135e:	4158      	adcs	r0, r3
    1360:	b2c0      	uxtb	r0, r0
#endif

  Ctrl_access_unlock();

  return sector_size;
}
    1362:	4770      	bx	lr

00001364 <mem_wr_protect>:

  return unloaded;
}

bool mem_wr_protect(U8 lun)
{
    1364:	b510      	push	{r4, lr}

  if (!Ctrl_access_lock()) return true;

  wr_protect =
#if MAX_LUN
             (lun < MAX_LUN) ? lun_desc[lun].wr_protect() :
    1366:	2301      	movs	r3, #1
    1368:	2800      	cmp	r0, #0
    136a:	d001      	beq.n	1370 <mem_wr_protect+0xc>
#endif

  Ctrl_access_unlock();

  return wr_protect;
}
    136c:	0018      	movs	r0, r3
    136e:	bd10      	pop	{r4, pc}
             (lun < MAX_LUN) ? lun_desc[lun].wr_protect() :
    1370:	4b01      	ldr	r3, [pc, #4]	; (1378 <mem_wr_protect+0x14>)
    1372:	4798      	blx	r3
    1374:	0003      	movs	r3, r0
    1376:	e7f9      	b.n	136c <mem_wr_protect+0x8>
    1378:	000009fd 	.word	0x000009fd

0000137c <memory_2_ram>:
 */
//! @{


Ctrl_status memory_2_ram(U8 lun, U32 addr, void *ram)
{
    137c:	b510      	push	{r4, lr}
    137e:	000c      	movs	r4, r1
  if (!Ctrl_access_lock()) return CTRL_FAIL;

  memory_start_read_action(1);
  status =
#if MAX_LUN
           (lun < MAX_LUN) ? lun_desc[lun].mem_2_ram(addr, ram) :
    1380:	2301      	movs	r3, #1
    1382:	2800      	cmp	r0, #0
    1384:	d001      	beq.n	138a <memory_2_ram+0xe>
  memory_stop_read_action();

  Ctrl_access_unlock();

  return status;
}
    1386:	0018      	movs	r0, r3
    1388:	bd10      	pop	{r4, pc}
           (lun < MAX_LUN) ? lun_desc[lun].mem_2_ram(addr, ram) :
    138a:	0011      	movs	r1, r2
    138c:	0020      	movs	r0, r4
    138e:	4b02      	ldr	r3, [pc, #8]	; (1398 <memory_2_ram+0x1c>)
    1390:	4798      	blx	r3
    1392:	0003      	movs	r3, r0
    1394:	e7f7      	b.n	1386 <memory_2_ram+0xa>
    1396:	46c0      	nop			; (mov r8, r8)
    1398:	00000a51 	.word	0x00000a51

0000139c <ram_2_memory>:


Ctrl_status ram_2_memory(U8 lun, U32 addr, const void *ram)
{
    139c:	b510      	push	{r4, lr}
    139e:	000c      	movs	r4, r1
  if (!Ctrl_access_lock()) return CTRL_FAIL;

  memory_start_write_action(1);
  status =
#if MAX_LUN
           (lun < MAX_LUN) ? lun_desc[lun].ram_2_mem(addr, ram) :
    13a0:	2301      	movs	r3, #1
    13a2:	2800      	cmp	r0, #0
    13a4:	d001      	beq.n	13aa <ram_2_memory+0xe>
  memory_stop_write_action();

  Ctrl_access_unlock();

  return status;
}
    13a6:	0018      	movs	r0, r3
    13a8:	bd10      	pop	{r4, pc}
           (lun < MAX_LUN) ? lun_desc[lun].ram_2_mem(addr, ram) :
    13aa:	0011      	movs	r1, r2
    13ac:	0020      	movs	r0, r4
    13ae:	4b02      	ldr	r3, [pc, #8]	; (13b8 <ram_2_memory+0x1c>)
    13b0:	4798      	blx	r3
    13b2:	0003      	movs	r3, r0
    13b4:	e7f7      	b.n	13a6 <ram_2_memory+0xa>
    13b6:	46c0      	nop			; (mov r8, r8)
    13b8:	00000aa9 	.word	0x00000aa9

000013bc <cpu_irq_enter_critical>:
volatile bool g_interrupt_enabled = true;
#endif

void cpu_irq_enter_critical(void)
{
	if (cpu_irq_critical_section_counter == 0) {
    13bc:	4b0c      	ldr	r3, [pc, #48]	; (13f0 <cpu_irq_enter_critical+0x34>)
    13be:	681b      	ldr	r3, [r3, #0]
    13c0:	2b00      	cmp	r3, #0
    13c2:	d106      	bne.n	13d2 <cpu_irq_enter_critical+0x16>
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PRIMASK(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, primask" : "=r" (result) );
    13c4:	f3ef 8310 	mrs	r3, PRIMASK
		if (cpu_irq_is_enabled()) {
    13c8:	2b00      	cmp	r3, #0
    13ca:	d007      	beq.n	13dc <cpu_irq_enter_critical+0x20>
			cpu_irq_disable();
			cpu_irq_prev_interrupt_state = true;
		} else {
			/* Make sure the to save the prev state as false */
			cpu_irq_prev_interrupt_state = false;
    13cc:	2200      	movs	r2, #0
    13ce:	4b09      	ldr	r3, [pc, #36]	; (13f4 <cpu_irq_enter_critical+0x38>)
    13d0:	701a      	strb	r2, [r3, #0]
		}

	}

	cpu_irq_critical_section_counter++;
    13d2:	4a07      	ldr	r2, [pc, #28]	; (13f0 <cpu_irq_enter_critical+0x34>)
    13d4:	6813      	ldr	r3, [r2, #0]
    13d6:	3301      	adds	r3, #1
    13d8:	6013      	str	r3, [r2, #0]
}
    13da:	4770      	bx	lr
  __ASM volatile ("cpsid i" : : : "memory");
    13dc:	b672      	cpsid	i
    This function ensures the apparent order of the explicit memory operations before
    and after the instruction, without ensuring their completion.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __DMB(void)
{
  __ASM volatile ("dmb");
    13de:	f3bf 8f5f 	dmb	sy
			cpu_irq_disable();
    13e2:	2200      	movs	r2, #0
    13e4:	4b04      	ldr	r3, [pc, #16]	; (13f8 <cpu_irq_enter_critical+0x3c>)
    13e6:	701a      	strb	r2, [r3, #0]
			cpu_irq_prev_interrupt_state = true;
    13e8:	3201      	adds	r2, #1
    13ea:	4b02      	ldr	r3, [pc, #8]	; (13f4 <cpu_irq_enter_critical+0x38>)
    13ec:	701a      	strb	r2, [r3, #0]
    13ee:	e7f0      	b.n	13d2 <cpu_irq_enter_critical+0x16>
    13f0:	200002a0 	.word	0x200002a0
    13f4:	200002a4 	.word	0x200002a4
    13f8:	2000000c 	.word	0x2000000c

000013fc <cpu_irq_leave_critical>:
void cpu_irq_leave_critical(void)
{
	/* Check if the user is trying to leave a critical section when not in a critical section */
	Assert(cpu_irq_critical_section_counter > 0);

	cpu_irq_critical_section_counter--;
    13fc:	4b08      	ldr	r3, [pc, #32]	; (1420 <cpu_irq_leave_critical+0x24>)
    13fe:	681a      	ldr	r2, [r3, #0]
    1400:	3a01      	subs	r2, #1
    1402:	601a      	str	r2, [r3, #0]

	/* Only enable global interrupts when the counter reaches 0 and the state of the global interrupt flag
	   was enabled when entering critical state */
	if ((cpu_irq_critical_section_counter == 0) && (cpu_irq_prev_interrupt_state)) {
    1404:	681b      	ldr	r3, [r3, #0]
    1406:	2b00      	cmp	r3, #0
    1408:	d109      	bne.n	141e <cpu_irq_leave_critical+0x22>
    140a:	4b06      	ldr	r3, [pc, #24]	; (1424 <cpu_irq_leave_critical+0x28>)
    140c:	781b      	ldrb	r3, [r3, #0]
    140e:	2b00      	cmp	r3, #0
    1410:	d005      	beq.n	141e <cpu_irq_leave_critical+0x22>
		cpu_irq_enable();
    1412:	2201      	movs	r2, #1
    1414:	4b04      	ldr	r3, [pc, #16]	; (1428 <cpu_irq_leave_critical+0x2c>)
    1416:	701a      	strb	r2, [r3, #0]
    1418:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
    141c:	b662      	cpsie	i
	}
}
    141e:	4770      	bx	lr
    1420:	200002a0 	.word	0x200002a0
    1424:	200002a4 	.word	0x200002a4
    1428:	2000000c 	.word	0x2000000c

0000142c <system_board_init>:
void board_init(void);
#  pragma weak board_init=system_board_init
#endif

void system_board_init(void)
{
    142c:	b5f0      	push	{r4, r5, r6, r7, lr}
    142e:	b083      	sub	sp, #12
	config->input_pull = PORT_PIN_PULL_UP;
    1430:	ac01      	add	r4, sp, #4
    1432:	2501      	movs	r5, #1
    1434:	7065      	strb	r5, [r4, #1]
	config->powersave  = false;
    1436:	2700      	movs	r7, #0
    1438:	70a7      	strb	r7, [r4, #2]
	struct port_config pin_conf;
	port_get_config_defaults(&pin_conf);

	/* Configure LEDs as outputs, turn them off */
	pin_conf.direction  = PORT_PIN_DIR_OUTPUT;
    143a:	7025      	strb	r5, [r4, #0]
	port_pin_set_config(LED_0_PIN, &pin_conf);
    143c:	0021      	movs	r1, r4
    143e:	2017      	movs	r0, #23
    1440:	4e06      	ldr	r6, [pc, #24]	; (145c <system_board_init+0x30>)
    1442:	47b0      	blx	r6
		port_base->OUTSET.reg = pin_mask;
    1444:	2280      	movs	r2, #128	; 0x80
    1446:	0412      	lsls	r2, r2, #16
    1448:	4b05      	ldr	r3, [pc, #20]	; (1460 <system_board_init+0x34>)
    144a:	619a      	str	r2, [r3, #24]
	port_pin_set_output_level(LED_0_PIN, LED_0_INACTIVE);

	/* Set buttons as inputs */
	pin_conf.direction  = PORT_PIN_DIR_INPUT;
    144c:	7027      	strb	r7, [r4, #0]
	pin_conf.input_pull = PORT_PIN_PULL_UP;
    144e:	7065      	strb	r5, [r4, #1]
	port_pin_set_config(BUTTON_0_PIN, &pin_conf);
    1450:	0021      	movs	r1, r4
    1452:	2037      	movs	r0, #55	; 0x37
    1454:	47b0      	blx	r6
}
    1456:	b003      	add	sp, #12
    1458:	bdf0      	pop	{r4, r5, r6, r7, pc}
    145a:	46c0      	nop			; (mov r8, r8)
    145c:	000018ad 	.word	0x000018ad
    1460:	41004400 	.word	0x41004400

00001464 <extint_register_callback>:
    1464:	2317      	movs	r3, #23
    1466:	2a00      	cmp	r2, #0
    1468:	d001      	beq.n	146e <extint_register_callback+0xa>
    146a:	0018      	movs	r0, r3
    146c:	4770      	bx	lr
    146e:	008b      	lsls	r3, r1, #2
    1470:	4a06      	ldr	r2, [pc, #24]	; (148c <extint_register_callback+0x28>)
    1472:	589b      	ldr	r3, [r3, r2]
    1474:	2b00      	cmp	r3, #0
    1476:	d003      	beq.n	1480 <extint_register_callback+0x1c>
    1478:	4283      	cmp	r3, r0
    147a:	d005      	beq.n	1488 <extint_register_callback+0x24>
    147c:	231d      	movs	r3, #29
    147e:	e7f4      	b.n	146a <extint_register_callback+0x6>
    1480:	0089      	lsls	r1, r1, #2
    1482:	5088      	str	r0, [r1, r2]
    1484:	2300      	movs	r3, #0
    1486:	e7f0      	b.n	146a <extint_register_callback+0x6>
    1488:	2300      	movs	r3, #0
    148a:	e7ee      	b.n	146a <extint_register_callback+0x6>
    148c:	200005a8 	.word	0x200005a8

00001490 <extint_chan_enable_callback>:
    1490:	2317      	movs	r3, #23
    1492:	2900      	cmp	r1, #0
    1494:	d001      	beq.n	149a <extint_chan_enable_callback+0xa>
    1496:	0018      	movs	r0, r3
    1498:	4770      	bx	lr
    149a:	2200      	movs	r2, #0
    149c:	281f      	cmp	r0, #31
    149e:	d800      	bhi.n	14a2 <extint_chan_enable_callback+0x12>
    14a0:	4a02      	ldr	r2, [pc, #8]	; (14ac <extint_chan_enable_callback+0x1c>)
    14a2:	2301      	movs	r3, #1
    14a4:	4083      	lsls	r3, r0
    14a6:	60d3      	str	r3, [r2, #12]
    14a8:	2300      	movs	r3, #0
    14aa:	e7f4      	b.n	1496 <extint_chan_enable_callback+0x6>
    14ac:	40001800 	.word	0x40001800

000014b0 <EIC_Handler>:
    14b0:	b570      	push	{r4, r5, r6, lr}
    14b2:	2200      	movs	r2, #0
    14b4:	4b10      	ldr	r3, [pc, #64]	; (14f8 <EIC_Handler+0x48>)
    14b6:	701a      	strb	r2, [r3, #0]
    14b8:	2300      	movs	r3, #0
    14ba:	4910      	ldr	r1, [pc, #64]	; (14fc <EIC_Handler+0x4c>)
    14bc:	251f      	movs	r5, #31
    14be:	4e10      	ldr	r6, [pc, #64]	; (1500 <EIC_Handler+0x50>)
    14c0:	4c0d      	ldr	r4, [pc, #52]	; (14f8 <EIC_Handler+0x48>)
    14c2:	e00a      	b.n	14da <EIC_Handler+0x2a>
    14c4:	490d      	ldr	r1, [pc, #52]	; (14fc <EIC_Handler+0x4c>)
    14c6:	e008      	b.n	14da <EIC_Handler+0x2a>
    14c8:	7823      	ldrb	r3, [r4, #0]
    14ca:	3301      	adds	r3, #1
    14cc:	b2db      	uxtb	r3, r3
    14ce:	7023      	strb	r3, [r4, #0]
    14d0:	2b0f      	cmp	r3, #15
    14d2:	d810      	bhi.n	14f6 <EIC_Handler+0x46>
    14d4:	2100      	movs	r1, #0
    14d6:	2b1f      	cmp	r3, #31
    14d8:	d9f4      	bls.n	14c4 <EIC_Handler+0x14>
    14da:	0028      	movs	r0, r5
    14dc:	4018      	ands	r0, r3
    14de:	2201      	movs	r2, #1
    14e0:	4082      	lsls	r2, r0
    14e2:	6908      	ldr	r0, [r1, #16]
    14e4:	4210      	tst	r0, r2
    14e6:	d0ef      	beq.n	14c8 <EIC_Handler+0x18>
    14e8:	610a      	str	r2, [r1, #16]
    14ea:	009b      	lsls	r3, r3, #2
    14ec:	599b      	ldr	r3, [r3, r6]
    14ee:	2b00      	cmp	r3, #0
    14f0:	d0ea      	beq.n	14c8 <EIC_Handler+0x18>
    14f2:	4798      	blx	r3
    14f4:	e7e8      	b.n	14c8 <EIC_Handler+0x18>
    14f6:	bd70      	pop	{r4, r5, r6, pc}
    14f8:	200005a4 	.word	0x200005a4
    14fc:	40001800 	.word	0x40001800
    1500:	200005a8 	.word	0x200005a8

00001504 <_extint_enable>:
    1504:	4a04      	ldr	r2, [pc, #16]	; (1518 <_extint_enable+0x14>)
    1506:	7813      	ldrb	r3, [r2, #0]
    1508:	2102      	movs	r1, #2
    150a:	430b      	orrs	r3, r1
    150c:	7013      	strb	r3, [r2, #0]
    150e:	7853      	ldrb	r3, [r2, #1]
    1510:	b25b      	sxtb	r3, r3
    1512:	2b00      	cmp	r3, #0
    1514:	dbfb      	blt.n	150e <_extint_enable+0xa>
    1516:	4770      	bx	lr
    1518:	40001800 	.word	0x40001800

0000151c <_system_extint_init>:
    151c:	b500      	push	{lr}
    151e:	b083      	sub	sp, #12
    1520:	4a12      	ldr	r2, [pc, #72]	; (156c <_system_extint_init+0x50>)
    1522:	6993      	ldr	r3, [r2, #24]
    1524:	2140      	movs	r1, #64	; 0x40
    1526:	430b      	orrs	r3, r1
    1528:	6193      	str	r3, [r2, #24]
    152a:	a901      	add	r1, sp, #4
    152c:	2300      	movs	r3, #0
    152e:	700b      	strb	r3, [r1, #0]
    1530:	2005      	movs	r0, #5
    1532:	4b0f      	ldr	r3, [pc, #60]	; (1570 <_system_extint_init+0x54>)
    1534:	4798      	blx	r3
    1536:	2005      	movs	r0, #5
    1538:	4b0e      	ldr	r3, [pc, #56]	; (1574 <_system_extint_init+0x58>)
    153a:	4798      	blx	r3
    153c:	4a0e      	ldr	r2, [pc, #56]	; (1578 <_system_extint_init+0x5c>)
    153e:	7813      	ldrb	r3, [r2, #0]
    1540:	2101      	movs	r1, #1
    1542:	430b      	orrs	r3, r1
    1544:	7013      	strb	r3, [r2, #0]
    1546:	7853      	ldrb	r3, [r2, #1]
    1548:	b25b      	sxtb	r3, r3
    154a:	2b00      	cmp	r3, #0
    154c:	dbfb      	blt.n	1546 <_system_extint_init+0x2a>
    154e:	4b0b      	ldr	r3, [pc, #44]	; (157c <_system_extint_init+0x60>)
    1550:	0019      	movs	r1, r3
    1552:	3140      	adds	r1, #64	; 0x40
    1554:	2200      	movs	r2, #0
    1556:	c304      	stmia	r3!, {r2}
    1558:	4299      	cmp	r1, r3
    155a:	d1fc      	bne.n	1556 <_system_extint_init+0x3a>
    155c:	2210      	movs	r2, #16
    155e:	4b08      	ldr	r3, [pc, #32]	; (1580 <_system_extint_init+0x64>)
    1560:	601a      	str	r2, [r3, #0]
    1562:	4b08      	ldr	r3, [pc, #32]	; (1584 <_system_extint_init+0x68>)
    1564:	4798      	blx	r3
    1566:	b003      	add	sp, #12
    1568:	bd00      	pop	{pc}
    156a:	46c0      	nop			; (mov r8, r8)
    156c:	40000400 	.word	0x40000400
    1570:	0000324d 	.word	0x0000324d
    1574:	000031c1 	.word	0x000031c1
    1578:	40001800 	.word	0x40001800
    157c:	200005a8 	.word	0x200005a8
    1580:	e000e100 	.word	0xe000e100
    1584:	00001505 	.word	0x00001505

00001588 <extint_chan_get_config_defaults>:
    1588:	2300      	movs	r3, #0
    158a:	6003      	str	r3, [r0, #0]
    158c:	6043      	str	r3, [r0, #4]
    158e:	2201      	movs	r2, #1
    1590:	7202      	strb	r2, [r0, #8]
    1592:	7242      	strb	r2, [r0, #9]
    1594:	7283      	strb	r3, [r0, #10]
    1596:	3302      	adds	r3, #2
    1598:	72c3      	strb	r3, [r0, #11]
    159a:	4770      	bx	lr

0000159c <extint_chan_set_config>:
    159c:	b5f0      	push	{r4, r5, r6, r7, lr}
    159e:	b083      	sub	sp, #12
    15a0:	0005      	movs	r5, r0
    15a2:	000c      	movs	r4, r1
    15a4:	a901      	add	r1, sp, #4
    15a6:	2300      	movs	r3, #0
    15a8:	704b      	strb	r3, [r1, #1]
    15aa:	70cb      	strb	r3, [r1, #3]
    15ac:	7923      	ldrb	r3, [r4, #4]
    15ae:	700b      	strb	r3, [r1, #0]
    15b0:	7a23      	ldrb	r3, [r4, #8]
    15b2:	708b      	strb	r3, [r1, #2]
    15b4:	7820      	ldrb	r0, [r4, #0]
    15b6:	4b15      	ldr	r3, [pc, #84]	; (160c <extint_chan_set_config+0x70>)
    15b8:	4798      	blx	r3
    15ba:	2000      	movs	r0, #0
    15bc:	2d1f      	cmp	r5, #31
    15be:	d800      	bhi.n	15c2 <extint_chan_set_config+0x26>
    15c0:	4813      	ldr	r0, [pc, #76]	; (1610 <extint_chan_set_config+0x74>)
    15c2:	2207      	movs	r2, #7
    15c4:	402a      	ands	r2, r5
    15c6:	0092      	lsls	r2, r2, #2
    15c8:	7ae7      	ldrb	r7, [r4, #11]
    15ca:	7aa3      	ldrb	r3, [r4, #10]
    15cc:	2b00      	cmp	r3, #0
    15ce:	d001      	beq.n	15d4 <extint_chan_set_config+0x38>
    15d0:	2308      	movs	r3, #8
    15d2:	431f      	orrs	r7, r3
    15d4:	08eb      	lsrs	r3, r5, #3
    15d6:	009b      	lsls	r3, r3, #2
    15d8:	18c3      	adds	r3, r0, r3
    15da:	6999      	ldr	r1, [r3, #24]
    15dc:	260f      	movs	r6, #15
    15de:	4096      	lsls	r6, r2
    15e0:	43b1      	bics	r1, r6
    15e2:	4097      	lsls	r7, r2
    15e4:	003a      	movs	r2, r7
    15e6:	430a      	orrs	r2, r1
    15e8:	619a      	str	r2, [r3, #24]
    15ea:	7a63      	ldrb	r3, [r4, #9]
    15ec:	2b00      	cmp	r3, #0
    15ee:	d106      	bne.n	15fe <extint_chan_set_config+0x62>
    15f0:	6943      	ldr	r3, [r0, #20]
    15f2:	2201      	movs	r2, #1
    15f4:	40aa      	lsls	r2, r5
    15f6:	4393      	bics	r3, r2
    15f8:	6143      	str	r3, [r0, #20]
    15fa:	b003      	add	sp, #12
    15fc:	bdf0      	pop	{r4, r5, r6, r7, pc}
    15fe:	6942      	ldr	r2, [r0, #20]
    1600:	2301      	movs	r3, #1
    1602:	40ab      	lsls	r3, r5
    1604:	4313      	orrs	r3, r2
    1606:	6143      	str	r3, [r0, #20]
    1608:	e7f7      	b.n	15fa <extint_chan_set_config+0x5e>
    160a:	46c0      	nop			; (mov r8, r8)
    160c:	00003345 	.word	0x00003345
    1610:	40001800 	.word	0x40001800

00001614 <nvm_set_config>:
    1614:	b510      	push	{r4, lr}
    1616:	4a1e      	ldr	r2, [pc, #120]	; (1690 <nvm_set_config+0x7c>)
    1618:	69d3      	ldr	r3, [r2, #28]
    161a:	2104      	movs	r1, #4
    161c:	430b      	orrs	r3, r1
    161e:	61d3      	str	r3, [r2, #28]
    1620:	4b1c      	ldr	r3, [pc, #112]	; (1694 <nvm_set_config+0x80>)
    1622:	2220      	movs	r2, #32
    1624:	32ff      	adds	r2, #255	; 0xff
    1626:	831a      	strh	r2, [r3, #24]
    1628:	7d1a      	ldrb	r2, [r3, #20]
    162a:	2305      	movs	r3, #5
    162c:	07d2      	lsls	r2, r2, #31
    162e:	d401      	bmi.n	1634 <nvm_set_config+0x20>
    1630:	0018      	movs	r0, r3
    1632:	bd10      	pop	{r4, pc}
    1634:	7803      	ldrb	r3, [r0, #0]
    1636:	021b      	lsls	r3, r3, #8
    1638:	22c0      	movs	r2, #192	; 0xc0
    163a:	0092      	lsls	r2, r2, #2
    163c:	4013      	ands	r3, r2
    163e:	7841      	ldrb	r1, [r0, #1]
    1640:	01c9      	lsls	r1, r1, #7
    1642:	22ff      	movs	r2, #255	; 0xff
    1644:	400a      	ands	r2, r1
    1646:	4313      	orrs	r3, r2
    1648:	7881      	ldrb	r1, [r0, #2]
    164a:	0049      	lsls	r1, r1, #1
    164c:	221e      	movs	r2, #30
    164e:	400a      	ands	r2, r1
    1650:	4313      	orrs	r3, r2
    1652:	78c2      	ldrb	r2, [r0, #3]
    1654:	0492      	lsls	r2, r2, #18
    1656:	2180      	movs	r1, #128	; 0x80
    1658:	02c9      	lsls	r1, r1, #11
    165a:	400a      	ands	r2, r1
    165c:	4313      	orrs	r3, r2
    165e:	7902      	ldrb	r2, [r0, #4]
    1660:	0412      	lsls	r2, r2, #16
    1662:	21c0      	movs	r1, #192	; 0xc0
    1664:	0289      	lsls	r1, r1, #10
    1666:	400a      	ands	r2, r1
    1668:	4313      	orrs	r3, r2
    166a:	4a0a      	ldr	r2, [pc, #40]	; (1694 <nvm_set_config+0x80>)
    166c:	6053      	str	r3, [r2, #4]
    166e:	6893      	ldr	r3, [r2, #8]
    1670:	035b      	lsls	r3, r3, #13
    1672:	0f5b      	lsrs	r3, r3, #29
    1674:	4908      	ldr	r1, [pc, #32]	; (1698 <nvm_set_config+0x84>)
    1676:	2408      	movs	r4, #8
    1678:	409c      	lsls	r4, r3
    167a:	800c      	strh	r4, [r1, #0]
    167c:	6893      	ldr	r3, [r2, #8]
    167e:	804b      	strh	r3, [r1, #2]
    1680:	7843      	ldrb	r3, [r0, #1]
    1682:	710b      	strb	r3, [r1, #4]
    1684:	8b13      	ldrh	r3, [r2, #24]
    1686:	05db      	lsls	r3, r3, #23
    1688:	0fdb      	lsrs	r3, r3, #31
    168a:	011b      	lsls	r3, r3, #4
    168c:	e7d0      	b.n	1630 <nvm_set_config+0x1c>
    168e:	46c0      	nop			; (mov r8, r8)
    1690:	40000400 	.word	0x40000400
    1694:	41004000 	.word	0x41004000
    1698:	200002a8 	.word	0x200002a8

0000169c <nvm_execute_command>:
    169c:	b530      	push	{r4, r5, lr}
    169e:	0004      	movs	r4, r0
    16a0:	4a22      	ldr	r2, [pc, #136]	; (172c <nvm_execute_command+0x90>)
    16a2:	8810      	ldrh	r0, [r2, #0]
    16a4:	8853      	ldrh	r3, [r2, #2]
    16a6:	4343      	muls	r3, r0
    16a8:	428b      	cmp	r3, r1
    16aa:	d206      	bcs.n	16ba <nvm_execute_command+0x1e>
    16ac:	2280      	movs	r2, #128	; 0x80
    16ae:	0192      	lsls	r2, r2, #6
    16b0:	2018      	movs	r0, #24
    16b2:	4b1f      	ldr	r3, [pc, #124]	; (1730 <nvm_execute_command+0x94>)
    16b4:	18cb      	adds	r3, r1, r3
    16b6:	4293      	cmp	r3, r2
    16b8:	d80e      	bhi.n	16d8 <nvm_execute_command+0x3c>
    16ba:	4b1e      	ldr	r3, [pc, #120]	; (1734 <nvm_execute_command+0x98>)
    16bc:	685d      	ldr	r5, [r3, #4]
    16be:	2280      	movs	r2, #128	; 0x80
    16c0:	02d2      	lsls	r2, r2, #11
    16c2:	432a      	orrs	r2, r5
    16c4:	605a      	str	r2, [r3, #4]
    16c6:	2220      	movs	r2, #32
    16c8:	32ff      	adds	r2, #255	; 0xff
    16ca:	831a      	strh	r2, [r3, #24]
    16cc:	7d1b      	ldrb	r3, [r3, #20]
    16ce:	07db      	lsls	r3, r3, #31
    16d0:	d403      	bmi.n	16da <nvm_execute_command+0x3e>
    16d2:	4b18      	ldr	r3, [pc, #96]	; (1734 <nvm_execute_command+0x98>)
    16d4:	605d      	str	r5, [r3, #4]
    16d6:	2005      	movs	r0, #5
    16d8:	bd30      	pop	{r4, r5, pc}
    16da:	2c45      	cmp	r4, #69	; 0x45
    16dc:	d822      	bhi.n	1724 <nvm_execute_command+0x88>
    16de:	00a3      	lsls	r3, r4, #2
    16e0:	4a15      	ldr	r2, [pc, #84]	; (1738 <nvm_execute_command+0x9c>)
    16e2:	58d3      	ldr	r3, [r2, r3]
    16e4:	469f      	mov	pc, r3
    16e6:	4b13      	ldr	r3, [pc, #76]	; (1734 <nvm_execute_command+0x98>)
    16e8:	8b1b      	ldrh	r3, [r3, #24]
    16ea:	05db      	lsls	r3, r3, #23
    16ec:	d503      	bpl.n	16f6 <nvm_execute_command+0x5a>
    16ee:	4b11      	ldr	r3, [pc, #68]	; (1734 <nvm_execute_command+0x98>)
    16f0:	605d      	str	r5, [r3, #4]
    16f2:	2010      	movs	r0, #16
    16f4:	e7f0      	b.n	16d8 <nvm_execute_command+0x3c>
    16f6:	0889      	lsrs	r1, r1, #2
    16f8:	0049      	lsls	r1, r1, #1
    16fa:	4b0e      	ldr	r3, [pc, #56]	; (1734 <nvm_execute_command+0x98>)
    16fc:	61d9      	str	r1, [r3, #28]
    16fe:	e003      	b.n	1708 <nvm_execute_command+0x6c>
    1700:	0889      	lsrs	r1, r1, #2
    1702:	0049      	lsls	r1, r1, #1
    1704:	4b0b      	ldr	r3, [pc, #44]	; (1734 <nvm_execute_command+0x98>)
    1706:	61d9      	str	r1, [r3, #28]
    1708:	20a5      	movs	r0, #165	; 0xa5
    170a:	0200      	lsls	r0, r0, #8
    170c:	4304      	orrs	r4, r0
    170e:	4b09      	ldr	r3, [pc, #36]	; (1734 <nvm_execute_command+0x98>)
    1710:	801c      	strh	r4, [r3, #0]
    1712:	0019      	movs	r1, r3
    1714:	2201      	movs	r2, #1
    1716:	7d0b      	ldrb	r3, [r1, #20]
    1718:	4213      	tst	r3, r2
    171a:	d0fc      	beq.n	1716 <nvm_execute_command+0x7a>
    171c:	4b05      	ldr	r3, [pc, #20]	; (1734 <nvm_execute_command+0x98>)
    171e:	605d      	str	r5, [r3, #4]
    1720:	2000      	movs	r0, #0
    1722:	e7d9      	b.n	16d8 <nvm_execute_command+0x3c>
    1724:	4b03      	ldr	r3, [pc, #12]	; (1734 <nvm_execute_command+0x98>)
    1726:	605d      	str	r5, [r3, #4]
    1728:	2017      	movs	r0, #23
    172a:	e7d5      	b.n	16d8 <nvm_execute_command+0x3c>
    172c:	200002a8 	.word	0x200002a8
    1730:	ff7fc000 	.word	0xff7fc000
    1734:	41004000 	.word	0x41004000
    1738:	00006db8 	.word	0x00006db8

0000173c <nvm_write_buffer>:
    173c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    173e:	4b25      	ldr	r3, [pc, #148]	; (17d4 <nvm_write_buffer+0x98>)
    1740:	881d      	ldrh	r5, [r3, #0]
    1742:	885b      	ldrh	r3, [r3, #2]
    1744:	436b      	muls	r3, r5
    1746:	2418      	movs	r4, #24
    1748:	4283      	cmp	r3, r0
    174a:	d201      	bcs.n	1750 <nvm_write_buffer+0x14>
    174c:	0020      	movs	r0, r4
    174e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    1750:	1e6b      	subs	r3, r5, #1
    1752:	4218      	tst	r0, r3
    1754:	d1fa      	bne.n	174c <nvm_write_buffer+0x10>
    1756:	3c01      	subs	r4, #1
    1758:	4295      	cmp	r5, r2
    175a:	d3f7      	bcc.n	174c <nvm_write_buffer+0x10>
    175c:	4b1e      	ldr	r3, [pc, #120]	; (17d8 <nvm_write_buffer+0x9c>)
    175e:	7d1b      	ldrb	r3, [r3, #20]
    1760:	3c12      	subs	r4, #18
    1762:	07db      	lsls	r3, r3, #31
    1764:	d5f2      	bpl.n	174c <nvm_write_buffer+0x10>
    1766:	4c1d      	ldr	r4, [pc, #116]	; (17dc <nvm_write_buffer+0xa0>)
    1768:	4b1b      	ldr	r3, [pc, #108]	; (17d8 <nvm_write_buffer+0x9c>)
    176a:	801c      	strh	r4, [r3, #0]
    176c:	001d      	movs	r5, r3
    176e:	2401      	movs	r4, #1
    1770:	7d2b      	ldrb	r3, [r5, #20]
    1772:	4223      	tst	r3, r4
    1774:	d0fc      	beq.n	1770 <nvm_write_buffer+0x34>
    1776:	2420      	movs	r4, #32
    1778:	34ff      	adds	r4, #255	; 0xff
    177a:	4b17      	ldr	r3, [pc, #92]	; (17d8 <nvm_write_buffer+0x9c>)
    177c:	831c      	strh	r4, [r3, #24]
    177e:	2a00      	cmp	r2, #0
    1780:	d022      	beq.n	17c8 <nvm_write_buffer+0x8c>
    1782:	2301      	movs	r3, #1
    1784:	0005      	movs	r5, r0
    1786:	439d      	bics	r5, r3
    1788:	2300      	movs	r3, #0
    178a:	1e57      	subs	r7, r2, #1
    178c:	e009      	b.n	17a2 <nvm_write_buffer+0x66>
    178e:	18ce      	adds	r6, r1, r3
    1790:	7876      	ldrb	r6, [r6, #1]
    1792:	0236      	lsls	r6, r6, #8
    1794:	4334      	orrs	r4, r6
    1796:	802c      	strh	r4, [r5, #0]
    1798:	3302      	adds	r3, #2
    179a:	b29b      	uxth	r3, r3
    179c:	3502      	adds	r5, #2
    179e:	429a      	cmp	r2, r3
    17a0:	d904      	bls.n	17ac <nvm_write_buffer+0x70>
    17a2:	5ccc      	ldrb	r4, [r1, r3]
    17a4:	42bb      	cmp	r3, r7
    17a6:	dbf2      	blt.n	178e <nvm_write_buffer+0x52>
    17a8:	b2a4      	uxth	r4, r4
    17aa:	e7f4      	b.n	1796 <nvm_write_buffer+0x5a>
    17ac:	4b09      	ldr	r3, [pc, #36]	; (17d4 <nvm_write_buffer+0x98>)
    17ae:	791b      	ldrb	r3, [r3, #4]
    17b0:	2400      	movs	r4, #0
    17b2:	2b00      	cmp	r3, #0
    17b4:	d1ca      	bne.n	174c <nvm_write_buffer+0x10>
    17b6:	2a3f      	cmp	r2, #63	; 0x3f
    17b8:	d8c8      	bhi.n	174c <nvm_write_buffer+0x10>
    17ba:	2200      	movs	r2, #0
    17bc:	0001      	movs	r1, r0
    17be:	2004      	movs	r0, #4
    17c0:	4b07      	ldr	r3, [pc, #28]	; (17e0 <nvm_write_buffer+0xa4>)
    17c2:	4798      	blx	r3
    17c4:	0004      	movs	r4, r0
    17c6:	e7c1      	b.n	174c <nvm_write_buffer+0x10>
    17c8:	4b02      	ldr	r3, [pc, #8]	; (17d4 <nvm_write_buffer+0x98>)
    17ca:	791b      	ldrb	r3, [r3, #4]
    17cc:	2400      	movs	r4, #0
    17ce:	2b00      	cmp	r3, #0
    17d0:	d0f3      	beq.n	17ba <nvm_write_buffer+0x7e>
    17d2:	e7bb      	b.n	174c <nvm_write_buffer+0x10>
    17d4:	200002a8 	.word	0x200002a8
    17d8:	41004000 	.word	0x41004000
    17dc:	ffffa544 	.word	0xffffa544
    17e0:	0000169d 	.word	0x0000169d

000017e4 <nvm_read_buffer>:
    17e4:	b570      	push	{r4, r5, r6, lr}
    17e6:	4b18      	ldr	r3, [pc, #96]	; (1848 <nvm_read_buffer+0x64>)
    17e8:	881d      	ldrh	r5, [r3, #0]
    17ea:	885b      	ldrh	r3, [r3, #2]
    17ec:	436b      	muls	r3, r5
    17ee:	2418      	movs	r4, #24
    17f0:	4283      	cmp	r3, r0
    17f2:	d201      	bcs.n	17f8 <nvm_read_buffer+0x14>
    17f4:	0020      	movs	r0, r4
    17f6:	bd70      	pop	{r4, r5, r6, pc}
    17f8:	1e6b      	subs	r3, r5, #1
    17fa:	4218      	tst	r0, r3
    17fc:	d1fa      	bne.n	17f4 <nvm_read_buffer+0x10>
    17fe:	3c01      	subs	r4, #1
    1800:	4295      	cmp	r5, r2
    1802:	d3f7      	bcc.n	17f4 <nvm_read_buffer+0x10>
    1804:	4b11      	ldr	r3, [pc, #68]	; (184c <nvm_read_buffer+0x68>)
    1806:	7d1b      	ldrb	r3, [r3, #20]
    1808:	3c12      	subs	r4, #18
    180a:	07db      	lsls	r3, r3, #31
    180c:	d5f2      	bpl.n	17f4 <nvm_read_buffer+0x10>
    180e:	2420      	movs	r4, #32
    1810:	34ff      	adds	r4, #255	; 0xff
    1812:	4b0e      	ldr	r3, [pc, #56]	; (184c <nvm_read_buffer+0x68>)
    1814:	831c      	strh	r4, [r3, #24]
    1816:	2a00      	cmp	r2, #0
    1818:	d014      	beq.n	1844 <nvm_read_buffer+0x60>
    181a:	2301      	movs	r3, #1
    181c:	4398      	bics	r0, r3
    181e:	2300      	movs	r3, #0
    1820:	1e56      	subs	r6, r2, #1
    1822:	e004      	b.n	182e <nvm_read_buffer+0x4a>
    1824:	3302      	adds	r3, #2
    1826:	b29b      	uxth	r3, r3
    1828:	3002      	adds	r0, #2
    182a:	429a      	cmp	r2, r3
    182c:	d908      	bls.n	1840 <nvm_read_buffer+0x5c>
    182e:	8804      	ldrh	r4, [r0, #0]
    1830:	b2a4      	uxth	r4, r4
    1832:	54cc      	strb	r4, [r1, r3]
    1834:	42b3      	cmp	r3, r6
    1836:	daf5      	bge.n	1824 <nvm_read_buffer+0x40>
    1838:	18cd      	adds	r5, r1, r3
    183a:	0a24      	lsrs	r4, r4, #8
    183c:	706c      	strb	r4, [r5, #1]
    183e:	e7f1      	b.n	1824 <nvm_read_buffer+0x40>
    1840:	2400      	movs	r4, #0
    1842:	e7d7      	b.n	17f4 <nvm_read_buffer+0x10>
    1844:	2400      	movs	r4, #0
    1846:	e7d5      	b.n	17f4 <nvm_read_buffer+0x10>
    1848:	200002a8 	.word	0x200002a8
    184c:	41004000 	.word	0x41004000

00001850 <nvm_erase_row>:
    1850:	4b13      	ldr	r3, [pc, #76]	; (18a0 <nvm_erase_row+0x50>)
    1852:	881a      	ldrh	r2, [r3, #0]
    1854:	885b      	ldrh	r3, [r3, #2]
    1856:	4353      	muls	r3, r2
    1858:	2118      	movs	r1, #24
    185a:	4283      	cmp	r3, r0
    185c:	d201      	bcs.n	1862 <nvm_erase_row+0x12>
    185e:	0008      	movs	r0, r1
    1860:	4770      	bx	lr
    1862:	0092      	lsls	r2, r2, #2
    1864:	3a01      	subs	r2, #1
    1866:	4210      	tst	r0, r2
    1868:	d1f9      	bne.n	185e <nvm_erase_row+0xe>
    186a:	4b0e      	ldr	r3, [pc, #56]	; (18a4 <nvm_erase_row+0x54>)
    186c:	7d1b      	ldrb	r3, [r3, #20]
    186e:	3913      	subs	r1, #19
    1870:	07db      	lsls	r3, r3, #31
    1872:	d5f4      	bpl.n	185e <nvm_erase_row+0xe>
    1874:	4b0b      	ldr	r3, [pc, #44]	; (18a4 <nvm_erase_row+0x54>)
    1876:	2220      	movs	r2, #32
    1878:	32ff      	adds	r2, #255	; 0xff
    187a:	831a      	strh	r2, [r3, #24]
    187c:	0880      	lsrs	r0, r0, #2
    187e:	0040      	lsls	r0, r0, #1
    1880:	61d8      	str	r0, [r3, #28]
    1882:	4a09      	ldr	r2, [pc, #36]	; (18a8 <nvm_erase_row+0x58>)
    1884:	801a      	strh	r2, [r3, #0]
    1886:	0019      	movs	r1, r3
    1888:	2201      	movs	r2, #1
    188a:	7d0b      	ldrb	r3, [r1, #20]
    188c:	4213      	tst	r3, r2
    188e:	d0fc      	beq.n	188a <nvm_erase_row+0x3a>
    1890:	4b04      	ldr	r3, [pc, #16]	; (18a4 <nvm_erase_row+0x54>)
    1892:	8b19      	ldrh	r1, [r3, #24]
    1894:	201c      	movs	r0, #28
    1896:	4001      	ands	r1, r0
    1898:	1e48      	subs	r0, r1, #1
    189a:	4181      	sbcs	r1, r0
    189c:	0089      	lsls	r1, r1, #2
    189e:	e7de      	b.n	185e <nvm_erase_row+0xe>
    18a0:	200002a8 	.word	0x200002a8
    18a4:	41004000 	.word	0x41004000
    18a8:	ffffa502 	.word	0xffffa502

000018ac <port_pin_set_config>:
    18ac:	b500      	push	{lr}
    18ae:	b083      	sub	sp, #12
    18b0:	ab01      	add	r3, sp, #4
    18b2:	2280      	movs	r2, #128	; 0x80
    18b4:	701a      	strb	r2, [r3, #0]
    18b6:	780a      	ldrb	r2, [r1, #0]
    18b8:	705a      	strb	r2, [r3, #1]
    18ba:	784a      	ldrb	r2, [r1, #1]
    18bc:	709a      	strb	r2, [r3, #2]
    18be:	788a      	ldrb	r2, [r1, #2]
    18c0:	70da      	strb	r2, [r3, #3]
    18c2:	0019      	movs	r1, r3
    18c4:	4b01      	ldr	r3, [pc, #4]	; (18cc <port_pin_set_config+0x20>)
    18c6:	4798      	blx	r3
    18c8:	b003      	add	sp, #12
    18ca:	bd00      	pop	{pc}
    18cc:	00003345 	.word	0x00003345

000018d0 <rtc_calendar_enable>:
    18d0:	6801      	ldr	r1, [r0, #0]
    18d2:	2208      	movs	r2, #8
    18d4:	4b05      	ldr	r3, [pc, #20]	; (18ec <rtc_calendar_enable+0x1c>)
    18d6:	601a      	str	r2, [r3, #0]
    18d8:	6802      	ldr	r2, [r0, #0]
    18da:	7a93      	ldrb	r3, [r2, #10]
    18dc:	b25b      	sxtb	r3, r3
    18de:	2b00      	cmp	r3, #0
    18e0:	dbfb      	blt.n	18da <rtc_calendar_enable+0xa>
    18e2:	880b      	ldrh	r3, [r1, #0]
    18e4:	2202      	movs	r2, #2
    18e6:	4313      	orrs	r3, r2
    18e8:	800b      	strh	r3, [r1, #0]
    18ea:	4770      	bx	lr
    18ec:	e000e100 	.word	0xe000e100

000018f0 <rtc_calendar_disable>:
    18f0:	b510      	push	{r4, lr}
    18f2:	6802      	ldr	r2, [r0, #0]
    18f4:	2408      	movs	r4, #8
    18f6:	2380      	movs	r3, #128	; 0x80
    18f8:	4907      	ldr	r1, [pc, #28]	; (1918 <rtc_calendar_disable+0x28>)
    18fa:	50cc      	str	r4, [r1, r3]
    18fc:	6801      	ldr	r1, [r0, #0]
    18fe:	7a8b      	ldrb	r3, [r1, #10]
    1900:	b25b      	sxtb	r3, r3
    1902:	2b00      	cmp	r3, #0
    1904:	dbfb      	blt.n	18fe <rtc_calendar_disable+0xe>
    1906:	23c1      	movs	r3, #193	; 0xc1
    1908:	7193      	strb	r3, [r2, #6]
    190a:	7213      	strb	r3, [r2, #8]
    190c:	8813      	ldrh	r3, [r2, #0]
    190e:	2102      	movs	r1, #2
    1910:	438b      	bics	r3, r1
    1912:	8013      	strh	r3, [r2, #0]
    1914:	bd10      	pop	{r4, pc}
    1916:	46c0      	nop			; (mov r8, r8)
    1918:	e000e100 	.word	0xe000e100

0000191c <rtc_calendar_reset>:
    191c:	b570      	push	{r4, r5, r6, lr}
    191e:	0004      	movs	r4, r0
    1920:	6805      	ldr	r5, [r0, #0]
    1922:	4b07      	ldr	r3, [pc, #28]	; (1940 <rtc_calendar_reset+0x24>)
    1924:	4798      	blx	r3
    1926:	2300      	movs	r3, #0
    1928:	8223      	strh	r3, [r4, #16]
    192a:	8263      	strh	r3, [r4, #18]
    192c:	6822      	ldr	r2, [r4, #0]
    192e:	7a93      	ldrb	r3, [r2, #10]
    1930:	b25b      	sxtb	r3, r3
    1932:	2b00      	cmp	r3, #0
    1934:	dbfb      	blt.n	192e <rtc_calendar_reset+0x12>
    1936:	882b      	ldrh	r3, [r5, #0]
    1938:	2201      	movs	r2, #1
    193a:	4313      	orrs	r3, r2
    193c:	802b      	strh	r3, [r5, #0]
    193e:	bd70      	pop	{r4, r5, r6, pc}
    1940:	000018f1 	.word	0x000018f1

00001944 <rtc_calendar_time_to_register_value>:
    1944:	b510      	push	{r4, lr}
    1946:	88cb      	ldrh	r3, [r1, #6]
    1948:	88c2      	ldrh	r2, [r0, #6]
    194a:	1a9a      	subs	r2, r3, r2
    194c:	0692      	lsls	r2, r2, #26
    194e:	794b      	ldrb	r3, [r1, #5]
    1950:	059b      	lsls	r3, r3, #22
    1952:	790c      	ldrb	r4, [r1, #4]
    1954:	0464      	lsls	r4, r4, #17
    1956:	4323      	orrs	r3, r4
    1958:	788c      	ldrb	r4, [r1, #2]
    195a:	0324      	lsls	r4, r4, #12
    195c:	4323      	orrs	r3, r4
    195e:	4313      	orrs	r3, r2
    1960:	7902      	ldrb	r2, [r0, #4]
    1962:	2a00      	cmp	r2, #0
    1964:	d105      	bne.n	1972 <rtc_calendar_time_to_register_value+0x2e>
    1966:	78ca      	ldrb	r2, [r1, #3]
    1968:	2a00      	cmp	r2, #0
    196a:	d002      	beq.n	1972 <rtc_calendar_time_to_register_value+0x2e>
    196c:	2280      	movs	r2, #128	; 0x80
    196e:	0252      	lsls	r2, r2, #9
    1970:	4313      	orrs	r3, r2
    1972:	7848      	ldrb	r0, [r1, #1]
    1974:	0180      	lsls	r0, r0, #6
    1976:	780a      	ldrb	r2, [r1, #0]
    1978:	4310      	orrs	r0, r2
    197a:	4318      	orrs	r0, r3
    197c:	bd10      	pop	{r4, pc}

0000197e <rtc_calendar_register_value_to_time>:
    197e:	b510      	push	{r4, lr}
    1980:	0e8b      	lsrs	r3, r1, #26
    1982:	88c4      	ldrh	r4, [r0, #6]
    1984:	191b      	adds	r3, r3, r4
    1986:	80d3      	strh	r3, [r2, #6]
    1988:	018b      	lsls	r3, r1, #6
    198a:	0f1b      	lsrs	r3, r3, #28
    198c:	7153      	strb	r3, [r2, #5]
    198e:	028b      	lsls	r3, r1, #10
    1990:	0edb      	lsrs	r3, r3, #27
    1992:	7113      	strb	r3, [r2, #4]
    1994:	7903      	ldrb	r3, [r0, #4]
    1996:	2b00      	cmp	r3, #0
    1998:	d10c      	bne.n	19b4 <rtc_calendar_register_value_to_time+0x36>
    199a:	040b      	lsls	r3, r1, #16
    199c:	0f1b      	lsrs	r3, r3, #28
    199e:	7093      	strb	r3, [r2, #2]
    19a0:	03cb      	lsls	r3, r1, #15
    19a2:	0fdb      	lsrs	r3, r3, #31
    19a4:	70d3      	strb	r3, [r2, #3]
    19a6:	0988      	lsrs	r0, r1, #6
    19a8:	233f      	movs	r3, #63	; 0x3f
    19aa:	4018      	ands	r0, r3
    19ac:	7050      	strb	r0, [r2, #1]
    19ae:	4019      	ands	r1, r3
    19b0:	7011      	strb	r1, [r2, #0]
    19b2:	bd10      	pop	{r4, pc}
    19b4:	03cb      	lsls	r3, r1, #15
    19b6:	0edb      	lsrs	r3, r3, #27
    19b8:	7093      	strb	r3, [r2, #2]
    19ba:	e7f4      	b.n	19a6 <rtc_calendar_register_value_to_time+0x28>

000019bc <rtc_calendar_get_time>:
    19bc:	b510      	push	{r4, lr}
    19be:	000a      	movs	r2, r1
    19c0:	6803      	ldr	r3, [r0, #0]
    19c2:	7941      	ldrb	r1, [r0, #5]
    19c4:	2900      	cmp	r1, #0
    19c6:	d006      	beq.n	19d6 <rtc_calendar_get_time+0x1a>
    19c8:	8859      	ldrh	r1, [r3, #2]
    19ca:	0449      	lsls	r1, r1, #17
    19cc:	d50b      	bpl.n	19e6 <rtc_calendar_get_time+0x2a>
    19ce:	6919      	ldr	r1, [r3, #16]
    19d0:	4b0a      	ldr	r3, [pc, #40]	; (19fc <rtc_calendar_get_time+0x40>)
    19d2:	4798      	blx	r3
    19d4:	bd10      	pop	{r4, pc}
    19d6:	490a      	ldr	r1, [pc, #40]	; (1a00 <rtc_calendar_get_time+0x44>)
    19d8:	8059      	strh	r1, [r3, #2]
    19da:	6804      	ldr	r4, [r0, #0]
    19dc:	7aa1      	ldrb	r1, [r4, #10]
    19de:	b249      	sxtb	r1, r1
    19e0:	2900      	cmp	r1, #0
    19e2:	dbfb      	blt.n	19dc <rtc_calendar_get_time+0x20>
    19e4:	e7f3      	b.n	19ce <rtc_calendar_get_time+0x12>
    19e6:	8859      	ldrh	r1, [r3, #2]
    19e8:	24c0      	movs	r4, #192	; 0xc0
    19ea:	0224      	lsls	r4, r4, #8
    19ec:	4321      	orrs	r1, r4
    19ee:	8059      	strh	r1, [r3, #2]
    19f0:	6804      	ldr	r4, [r0, #0]
    19f2:	7aa1      	ldrb	r1, [r4, #10]
    19f4:	b249      	sxtb	r1, r1
    19f6:	2900      	cmp	r1, #0
    19f8:	dbfb      	blt.n	19f2 <rtc_calendar_get_time+0x36>
    19fa:	e7e8      	b.n	19ce <rtc_calendar_get_time+0x12>
    19fc:	0000197f 	.word	0x0000197f
    1a00:	ffff8000 	.word	0xffff8000

00001a04 <rtc_calendar_set_alarm>:
    1a04:	b570      	push	{r4, r5, r6, lr}
    1a06:	000d      	movs	r5, r1
    1a08:	0014      	movs	r4, r2
    1a0a:	2317      	movs	r3, #23
    1a0c:	2a01      	cmp	r2, #1
    1a0e:	d901      	bls.n	1a14 <rtc_calendar_set_alarm+0x10>
    1a10:	0018      	movs	r0, r3
    1a12:	bd70      	pop	{r4, r5, r6, pc}
    1a14:	6806      	ldr	r6, [r0, #0]
    1a16:	4b06      	ldr	r3, [pc, #24]	; (1a30 <rtc_calendar_set_alarm+0x2c>)
    1a18:	4798      	blx	r3
    1a1a:	7ab3      	ldrb	r3, [r6, #10]
    1a1c:	b25b      	sxtb	r3, r3
    1a1e:	2b00      	cmp	r3, #0
    1a20:	dbfb      	blt.n	1a1a <rtc_calendar_set_alarm+0x16>
    1a22:	00e4      	lsls	r4, r4, #3
    1a24:	1934      	adds	r4, r6, r4
    1a26:	61a0      	str	r0, [r4, #24]
    1a28:	7a2b      	ldrb	r3, [r5, #8]
    1a2a:	7723      	strb	r3, [r4, #28]
    1a2c:	2300      	movs	r3, #0
    1a2e:	e7ef      	b.n	1a10 <rtc_calendar_set_alarm+0xc>
    1a30:	00001945 	.word	0x00001945

00001a34 <rtc_calendar_init>:
    1a34:	b530      	push	{r4, r5, lr}
    1a36:	b083      	sub	sp, #12
    1a38:	0005      	movs	r5, r0
    1a3a:	0014      	movs	r4, r2
    1a3c:	6001      	str	r1, [r0, #0]
    1a3e:	4a1c      	ldr	r2, [pc, #112]	; (1ab0 <rtc_calendar_init+0x7c>)
    1a40:	6993      	ldr	r3, [r2, #24]
    1a42:	2120      	movs	r1, #32
    1a44:	430b      	orrs	r3, r1
    1a46:	6193      	str	r3, [r2, #24]
    1a48:	a901      	add	r1, sp, #4
    1a4a:	2302      	movs	r3, #2
    1a4c:	700b      	strb	r3, [r1, #0]
    1a4e:	2004      	movs	r0, #4
    1a50:	4b18      	ldr	r3, [pc, #96]	; (1ab4 <rtc_calendar_init+0x80>)
    1a52:	4798      	blx	r3
    1a54:	2004      	movs	r0, #4
    1a56:	4b18      	ldr	r3, [pc, #96]	; (1ab8 <rtc_calendar_init+0x84>)
    1a58:	4798      	blx	r3
    1a5a:	0028      	movs	r0, r5
    1a5c:	4b17      	ldr	r3, [pc, #92]	; (1abc <rtc_calendar_init+0x88>)
    1a5e:	4798      	blx	r3
    1a60:	7923      	ldrb	r3, [r4, #4]
    1a62:	712b      	strb	r3, [r5, #4]
    1a64:	78e3      	ldrb	r3, [r4, #3]
    1a66:	716b      	strb	r3, [r5, #5]
    1a68:	88e3      	ldrh	r3, [r4, #6]
    1a6a:	80eb      	strh	r3, [r5, #6]
    1a6c:	4b14      	ldr	r3, [pc, #80]	; (1ac0 <rtc_calendar_init+0x8c>)
    1a6e:	601d      	str	r5, [r3, #0]
    1a70:	682a      	ldr	r2, [r5, #0]
    1a72:	8823      	ldrh	r3, [r4, #0]
    1a74:	7921      	ldrb	r1, [r4, #4]
    1a76:	2900      	cmp	r1, #0
    1a78:	d017      	beq.n	1aaa <rtc_calendar_init+0x76>
    1a7a:	2108      	movs	r1, #8
    1a7c:	430b      	orrs	r3, r1
    1a7e:	78a1      	ldrb	r1, [r4, #2]
    1a80:	2900      	cmp	r1, #0
    1a82:	d001      	beq.n	1a88 <rtc_calendar_init+0x54>
    1a84:	2180      	movs	r1, #128	; 0x80
    1a86:	430b      	orrs	r3, r1
    1a88:	8013      	strh	r3, [r2, #0]
    1a8a:	78e3      	ldrb	r3, [r4, #3]
    1a8c:	2b00      	cmp	r3, #0
    1a8e:	d004      	beq.n	1a9a <rtc_calendar_init+0x66>
    1a90:	8853      	ldrh	r3, [r2, #2]
    1a92:	2180      	movs	r1, #128	; 0x80
    1a94:	01c9      	lsls	r1, r1, #7
    1a96:	430b      	orrs	r3, r1
    1a98:	8053      	strh	r3, [r2, #2]
    1a9a:	0021      	movs	r1, r4
    1a9c:	3108      	adds	r1, #8
    1a9e:	2200      	movs	r2, #0
    1aa0:	0028      	movs	r0, r5
    1aa2:	4b08      	ldr	r3, [pc, #32]	; (1ac4 <rtc_calendar_init+0x90>)
    1aa4:	4798      	blx	r3
    1aa6:	b003      	add	sp, #12
    1aa8:	bd30      	pop	{r4, r5, pc}
    1aaa:	2148      	movs	r1, #72	; 0x48
    1aac:	430b      	orrs	r3, r1
    1aae:	e7e6      	b.n	1a7e <rtc_calendar_init+0x4a>
    1ab0:	40000400 	.word	0x40000400
    1ab4:	0000324d 	.word	0x0000324d
    1ab8:	000031c1 	.word	0x000031c1
    1abc:	0000191d 	.word	0x0000191d
    1ac0:	200005e8 	.word	0x200005e8
    1ac4:	00001a05 	.word	0x00001a05

00001ac8 <RTC_Handler>:
    1ac8:	b510      	push	{r4, lr}
    1aca:	4b0f      	ldr	r3, [pc, #60]	; (1b08 <RTC_Handler+0x40>)
    1acc:	681a      	ldr	r2, [r3, #0]
    1ace:	6814      	ldr	r4, [r2, #0]
    1ad0:	8a51      	ldrh	r1, [r2, #18]
    1ad2:	8a13      	ldrh	r3, [r2, #16]
    1ad4:	4019      	ands	r1, r3
    1ad6:	7a20      	ldrb	r0, [r4, #8]
    1ad8:	79e3      	ldrb	r3, [r4, #7]
    1ada:	4003      	ands	r3, r0
    1adc:	b258      	sxtb	r0, r3
    1ade:	2800      	cmp	r0, #0
    1ae0:	db06      	blt.n	1af0 <RTC_Handler+0x28>
    1ae2:	07db      	lsls	r3, r3, #31
    1ae4:	d503      	bpl.n	1aee <RTC_Handler+0x26>
    1ae6:	07cb      	lsls	r3, r1, #31
    1ae8:	d40a      	bmi.n	1b00 <RTC_Handler+0x38>
    1aea:	2301      	movs	r3, #1
    1aec:	7223      	strb	r3, [r4, #8]
    1aee:	bd10      	pop	{r4, pc}
    1af0:	078b      	lsls	r3, r1, #30
    1af2:	d402      	bmi.n	1afa <RTC_Handler+0x32>
    1af4:	2380      	movs	r3, #128	; 0x80
    1af6:	7223      	strb	r3, [r4, #8]
    1af8:	e7f9      	b.n	1aee <RTC_Handler+0x26>
    1afa:	68d3      	ldr	r3, [r2, #12]
    1afc:	4798      	blx	r3
    1afe:	e7f9      	b.n	1af4 <RTC_Handler+0x2c>
    1b00:	6893      	ldr	r3, [r2, #8]
    1b02:	4798      	blx	r3
    1b04:	e7f1      	b.n	1aea <RTC_Handler+0x22>
    1b06:	46c0      	nop			; (mov r8, r8)
    1b08:	200005e8 	.word	0x200005e8

00001b0c <long_division>:
    1b0c:	b5f0      	push	{r4, r5, r6, r7, lr}
    1b0e:	46de      	mov	lr, fp
    1b10:	4657      	mov	r7, sl
    1b12:	464e      	mov	r6, r9
    1b14:	4645      	mov	r5, r8
    1b16:	b5e0      	push	{r5, r6, r7, lr}
    1b18:	b087      	sub	sp, #28
    1b1a:	4680      	mov	r8, r0
    1b1c:	9104      	str	r1, [sp, #16]
    1b1e:	0016      	movs	r6, r2
    1b20:	001f      	movs	r7, r3
    1b22:	2200      	movs	r2, #0
    1b24:	2300      	movs	r3, #0
    1b26:	2100      	movs	r1, #0
    1b28:	468b      	mov	fp, r1
    1b2a:	243f      	movs	r4, #63	; 0x3f
    1b2c:	2001      	movs	r0, #1
    1b2e:	0021      	movs	r1, r4
    1b30:	9600      	str	r6, [sp, #0]
    1b32:	9701      	str	r7, [sp, #4]
    1b34:	465c      	mov	r4, fp
    1b36:	9403      	str	r4, [sp, #12]
    1b38:	4644      	mov	r4, r8
    1b3a:	9405      	str	r4, [sp, #20]
    1b3c:	e013      	b.n	1b66 <long_division+0x5a>
    1b3e:	2420      	movs	r4, #32
    1b40:	1a64      	subs	r4, r4, r1
    1b42:	0005      	movs	r5, r0
    1b44:	40e5      	lsrs	r5, r4
    1b46:	46a8      	mov	r8, r5
    1b48:	e014      	b.n	1b74 <long_division+0x68>
    1b4a:	9c00      	ldr	r4, [sp, #0]
    1b4c:	9d01      	ldr	r5, [sp, #4]
    1b4e:	1b12      	subs	r2, r2, r4
    1b50:	41ab      	sbcs	r3, r5
    1b52:	465c      	mov	r4, fp
    1b54:	464d      	mov	r5, r9
    1b56:	432c      	orrs	r4, r5
    1b58:	46a3      	mov	fp, r4
    1b5a:	9c03      	ldr	r4, [sp, #12]
    1b5c:	4645      	mov	r5, r8
    1b5e:	432c      	orrs	r4, r5
    1b60:	9403      	str	r4, [sp, #12]
    1b62:	3901      	subs	r1, #1
    1b64:	d325      	bcc.n	1bb2 <long_division+0xa6>
    1b66:	2420      	movs	r4, #32
    1b68:	4264      	negs	r4, r4
    1b6a:	190c      	adds	r4, r1, r4
    1b6c:	d4e7      	bmi.n	1b3e <long_division+0x32>
    1b6e:	0005      	movs	r5, r0
    1b70:	40a5      	lsls	r5, r4
    1b72:	46a8      	mov	r8, r5
    1b74:	0004      	movs	r4, r0
    1b76:	408c      	lsls	r4, r1
    1b78:	46a1      	mov	r9, r4
    1b7a:	1892      	adds	r2, r2, r2
    1b7c:	415b      	adcs	r3, r3
    1b7e:	0014      	movs	r4, r2
    1b80:	001d      	movs	r5, r3
    1b82:	9e05      	ldr	r6, [sp, #20]
    1b84:	464f      	mov	r7, r9
    1b86:	403e      	ands	r6, r7
    1b88:	46b4      	mov	ip, r6
    1b8a:	9e04      	ldr	r6, [sp, #16]
    1b8c:	4647      	mov	r7, r8
    1b8e:	403e      	ands	r6, r7
    1b90:	46b2      	mov	sl, r6
    1b92:	4666      	mov	r6, ip
    1b94:	4657      	mov	r7, sl
    1b96:	433e      	orrs	r6, r7
    1b98:	d003      	beq.n	1ba2 <long_division+0x96>
    1b9a:	0006      	movs	r6, r0
    1b9c:	4326      	orrs	r6, r4
    1b9e:	0032      	movs	r2, r6
    1ba0:	002b      	movs	r3, r5
    1ba2:	9c00      	ldr	r4, [sp, #0]
    1ba4:	9d01      	ldr	r5, [sp, #4]
    1ba6:	429d      	cmp	r5, r3
    1ba8:	d8db      	bhi.n	1b62 <long_division+0x56>
    1baa:	d1ce      	bne.n	1b4a <long_division+0x3e>
    1bac:	4294      	cmp	r4, r2
    1bae:	d8d8      	bhi.n	1b62 <long_division+0x56>
    1bb0:	e7cb      	b.n	1b4a <long_division+0x3e>
    1bb2:	9b03      	ldr	r3, [sp, #12]
    1bb4:	4658      	mov	r0, fp
    1bb6:	0019      	movs	r1, r3
    1bb8:	b007      	add	sp, #28
    1bba:	bc3c      	pop	{r2, r3, r4, r5}
    1bbc:	4690      	mov	r8, r2
    1bbe:	4699      	mov	r9, r3
    1bc0:	46a2      	mov	sl, r4
    1bc2:	46ab      	mov	fp, r5
    1bc4:	bdf0      	pop	{r4, r5, r6, r7, pc}

00001bc6 <_sercom_get_sync_baud_val>:
    1bc6:	b510      	push	{r4, lr}
    1bc8:	0849      	lsrs	r1, r1, #1
    1bca:	2340      	movs	r3, #64	; 0x40
    1bcc:	2400      	movs	r4, #0
    1bce:	4281      	cmp	r1, r0
    1bd0:	d202      	bcs.n	1bd8 <_sercom_get_sync_baud_val+0x12>
    1bd2:	0018      	movs	r0, r3
    1bd4:	bd10      	pop	{r4, pc}
    1bd6:	001c      	movs	r4, r3
    1bd8:	1a09      	subs	r1, r1, r0
    1bda:	1c63      	adds	r3, r4, #1
    1bdc:	b29b      	uxth	r3, r3
    1bde:	4288      	cmp	r0, r1
    1be0:	d9f9      	bls.n	1bd6 <_sercom_get_sync_baud_val+0x10>
    1be2:	2340      	movs	r3, #64	; 0x40
    1be4:	2cff      	cmp	r4, #255	; 0xff
    1be6:	d8f4      	bhi.n	1bd2 <_sercom_get_sync_baud_val+0xc>
    1be8:	8014      	strh	r4, [r2, #0]
    1bea:	2300      	movs	r3, #0
    1bec:	e7f1      	b.n	1bd2 <_sercom_get_sync_baud_val+0xc>
	...

00001bf0 <_sercom_get_async_baud_val>:
    1bf0:	b5f0      	push	{r4, r5, r6, r7, lr}
    1bf2:	b083      	sub	sp, #12
    1bf4:	000f      	movs	r7, r1
    1bf6:	0016      	movs	r6, r2
    1bf8:	aa08      	add	r2, sp, #32
    1bfa:	7811      	ldrb	r1, [r2, #0]
    1bfc:	0004      	movs	r4, r0
    1bfe:	434c      	muls	r4, r1
    1c00:	2240      	movs	r2, #64	; 0x40
    1c02:	42bc      	cmp	r4, r7
    1c04:	d902      	bls.n	1c0c <_sercom_get_async_baud_val+0x1c>
    1c06:	0010      	movs	r0, r2
    1c08:	b003      	add	sp, #12
    1c0a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    1c0c:	2b00      	cmp	r3, #0
    1c0e:	d114      	bne.n	1c3a <_sercom_get_async_baud_val+0x4a>
    1c10:	0002      	movs	r2, r0
    1c12:	0008      	movs	r0, r1
    1c14:	2100      	movs	r1, #0
    1c16:	4c19      	ldr	r4, [pc, #100]	; (1c7c <_sercom_get_async_baud_val+0x8c>)
    1c18:	47a0      	blx	r4
    1c1a:	0001      	movs	r1, r0
    1c1c:	003a      	movs	r2, r7
    1c1e:	2300      	movs	r3, #0
    1c20:	2000      	movs	r0, #0
    1c22:	4c17      	ldr	r4, [pc, #92]	; (1c80 <_sercom_get_async_baud_val+0x90>)
    1c24:	47a0      	blx	r4
    1c26:	2200      	movs	r2, #0
    1c28:	2301      	movs	r3, #1
    1c2a:	1a12      	subs	r2, r2, r0
    1c2c:	418b      	sbcs	r3, r1
    1c2e:	0c12      	lsrs	r2, r2, #16
    1c30:	041b      	lsls	r3, r3, #16
    1c32:	431a      	orrs	r2, r3
    1c34:	8032      	strh	r2, [r6, #0]
    1c36:	2200      	movs	r2, #0
    1c38:	e7e5      	b.n	1c06 <_sercom_get_async_baud_val+0x16>
    1c3a:	2200      	movs	r2, #0
    1c3c:	2b01      	cmp	r3, #1
    1c3e:	d1f9      	bne.n	1c34 <_sercom_get_async_baud_val+0x44>
    1c40:	000a      	movs	r2, r1
    1c42:	2300      	movs	r3, #0
    1c44:	2100      	movs	r1, #0
    1c46:	4c0d      	ldr	r4, [pc, #52]	; (1c7c <_sercom_get_async_baud_val+0x8c>)
    1c48:	47a0      	blx	r4
    1c4a:	0002      	movs	r2, r0
    1c4c:	000b      	movs	r3, r1
    1c4e:	9200      	str	r2, [sp, #0]
    1c50:	9301      	str	r3, [sp, #4]
    1c52:	0038      	movs	r0, r7
    1c54:	2100      	movs	r1, #0
    1c56:	4c0a      	ldr	r4, [pc, #40]	; (1c80 <_sercom_get_async_baud_val+0x90>)
    1c58:	47a0      	blx	r4
    1c5a:	0005      	movs	r5, r0
    1c5c:	2380      	movs	r3, #128	; 0x80
    1c5e:	019b      	lsls	r3, r3, #6
    1c60:	2240      	movs	r2, #64	; 0x40
    1c62:	4298      	cmp	r0, r3
    1c64:	d8cf      	bhi.n	1c06 <_sercom_get_async_baud_val+0x16>
    1c66:	0f79      	lsrs	r1, r7, #29
    1c68:	00f8      	lsls	r0, r7, #3
    1c6a:	9a00      	ldr	r2, [sp, #0]
    1c6c:	9b01      	ldr	r3, [sp, #4]
    1c6e:	47a0      	blx	r4
    1c70:	00ea      	lsls	r2, r5, #3
    1c72:	1a82      	subs	r2, r0, r2
    1c74:	b2d2      	uxtb	r2, r2
    1c76:	0352      	lsls	r2, r2, #13
    1c78:	432a      	orrs	r2, r5
    1c7a:	e7db      	b.n	1c34 <_sercom_get_async_baud_val+0x44>
    1c7c:	00005a39 	.word	0x00005a39
    1c80:	00001b0d 	.word	0x00001b0d

00001c84 <sercom_set_gclk_generator>:
    1c84:	b510      	push	{r4, lr}
    1c86:	b082      	sub	sp, #8
    1c88:	0004      	movs	r4, r0
    1c8a:	4b0e      	ldr	r3, [pc, #56]	; (1cc4 <sercom_set_gclk_generator+0x40>)
    1c8c:	781b      	ldrb	r3, [r3, #0]
    1c8e:	2b00      	cmp	r3, #0
    1c90:	d007      	beq.n	1ca2 <sercom_set_gclk_generator+0x1e>
    1c92:	2900      	cmp	r1, #0
    1c94:	d105      	bne.n	1ca2 <sercom_set_gclk_generator+0x1e>
    1c96:	4b0b      	ldr	r3, [pc, #44]	; (1cc4 <sercom_set_gclk_generator+0x40>)
    1c98:	785b      	ldrb	r3, [r3, #1]
    1c9a:	4283      	cmp	r3, r0
    1c9c:	d010      	beq.n	1cc0 <sercom_set_gclk_generator+0x3c>
    1c9e:	201d      	movs	r0, #29
    1ca0:	e00c      	b.n	1cbc <sercom_set_gclk_generator+0x38>
    1ca2:	a901      	add	r1, sp, #4
    1ca4:	700c      	strb	r4, [r1, #0]
    1ca6:	2013      	movs	r0, #19
    1ca8:	4b07      	ldr	r3, [pc, #28]	; (1cc8 <sercom_set_gclk_generator+0x44>)
    1caa:	4798      	blx	r3
    1cac:	2013      	movs	r0, #19
    1cae:	4b07      	ldr	r3, [pc, #28]	; (1ccc <sercom_set_gclk_generator+0x48>)
    1cb0:	4798      	blx	r3
    1cb2:	4b04      	ldr	r3, [pc, #16]	; (1cc4 <sercom_set_gclk_generator+0x40>)
    1cb4:	705c      	strb	r4, [r3, #1]
    1cb6:	2201      	movs	r2, #1
    1cb8:	701a      	strb	r2, [r3, #0]
    1cba:	2000      	movs	r0, #0
    1cbc:	b002      	add	sp, #8
    1cbe:	bd10      	pop	{r4, pc}
    1cc0:	2000      	movs	r0, #0
    1cc2:	e7fb      	b.n	1cbc <sercom_set_gclk_generator+0x38>
    1cc4:	200002b0 	.word	0x200002b0
    1cc8:	0000324d 	.word	0x0000324d
    1ccc:	000031c1 	.word	0x000031c1

00001cd0 <_sercom_get_default_pad>:
    1cd0:	4b40      	ldr	r3, [pc, #256]	; (1dd4 <_sercom_get_default_pad+0x104>)
    1cd2:	4298      	cmp	r0, r3
    1cd4:	d031      	beq.n	1d3a <_sercom_get_default_pad+0x6a>
    1cd6:	d90a      	bls.n	1cee <_sercom_get_default_pad+0x1e>
    1cd8:	4b3f      	ldr	r3, [pc, #252]	; (1dd8 <_sercom_get_default_pad+0x108>)
    1cda:	4298      	cmp	r0, r3
    1cdc:	d04d      	beq.n	1d7a <_sercom_get_default_pad+0xaa>
    1cde:	4b3f      	ldr	r3, [pc, #252]	; (1ddc <_sercom_get_default_pad+0x10c>)
    1ce0:	4298      	cmp	r0, r3
    1ce2:	d05a      	beq.n	1d9a <_sercom_get_default_pad+0xca>
    1ce4:	4b3e      	ldr	r3, [pc, #248]	; (1de0 <_sercom_get_default_pad+0x110>)
    1ce6:	4298      	cmp	r0, r3
    1ce8:	d037      	beq.n	1d5a <_sercom_get_default_pad+0x8a>
    1cea:	2000      	movs	r0, #0
    1cec:	4770      	bx	lr
    1cee:	4b3d      	ldr	r3, [pc, #244]	; (1de4 <_sercom_get_default_pad+0x114>)
    1cf0:	4298      	cmp	r0, r3
    1cf2:	d00c      	beq.n	1d0e <_sercom_get_default_pad+0x3e>
    1cf4:	4b3c      	ldr	r3, [pc, #240]	; (1de8 <_sercom_get_default_pad+0x118>)
    1cf6:	4298      	cmp	r0, r3
    1cf8:	d1f7      	bne.n	1cea <_sercom_get_default_pad+0x1a>
    1cfa:	2901      	cmp	r1, #1
    1cfc:	d017      	beq.n	1d2e <_sercom_get_default_pad+0x5e>
    1cfe:	2900      	cmp	r1, #0
    1d00:	d05d      	beq.n	1dbe <_sercom_get_default_pad+0xee>
    1d02:	2902      	cmp	r1, #2
    1d04:	d015      	beq.n	1d32 <_sercom_get_default_pad+0x62>
    1d06:	2903      	cmp	r1, #3
    1d08:	d015      	beq.n	1d36 <_sercom_get_default_pad+0x66>
    1d0a:	2000      	movs	r0, #0
    1d0c:	e7ee      	b.n	1cec <_sercom_get_default_pad+0x1c>
    1d0e:	2901      	cmp	r1, #1
    1d10:	d007      	beq.n	1d22 <_sercom_get_default_pad+0x52>
    1d12:	2900      	cmp	r1, #0
    1d14:	d051      	beq.n	1dba <_sercom_get_default_pad+0xea>
    1d16:	2902      	cmp	r1, #2
    1d18:	d005      	beq.n	1d26 <_sercom_get_default_pad+0x56>
    1d1a:	2903      	cmp	r1, #3
    1d1c:	d005      	beq.n	1d2a <_sercom_get_default_pad+0x5a>
    1d1e:	2000      	movs	r0, #0
    1d20:	e7e4      	b.n	1cec <_sercom_get_default_pad+0x1c>
    1d22:	4832      	ldr	r0, [pc, #200]	; (1dec <_sercom_get_default_pad+0x11c>)
    1d24:	e7e2      	b.n	1cec <_sercom_get_default_pad+0x1c>
    1d26:	4832      	ldr	r0, [pc, #200]	; (1df0 <_sercom_get_default_pad+0x120>)
    1d28:	e7e0      	b.n	1cec <_sercom_get_default_pad+0x1c>
    1d2a:	4832      	ldr	r0, [pc, #200]	; (1df4 <_sercom_get_default_pad+0x124>)
    1d2c:	e7de      	b.n	1cec <_sercom_get_default_pad+0x1c>
    1d2e:	4832      	ldr	r0, [pc, #200]	; (1df8 <_sercom_get_default_pad+0x128>)
    1d30:	e7dc      	b.n	1cec <_sercom_get_default_pad+0x1c>
    1d32:	4832      	ldr	r0, [pc, #200]	; (1dfc <_sercom_get_default_pad+0x12c>)
    1d34:	e7da      	b.n	1cec <_sercom_get_default_pad+0x1c>
    1d36:	4832      	ldr	r0, [pc, #200]	; (1e00 <_sercom_get_default_pad+0x130>)
    1d38:	e7d8      	b.n	1cec <_sercom_get_default_pad+0x1c>
    1d3a:	2901      	cmp	r1, #1
    1d3c:	d007      	beq.n	1d4e <_sercom_get_default_pad+0x7e>
    1d3e:	2900      	cmp	r1, #0
    1d40:	d03f      	beq.n	1dc2 <_sercom_get_default_pad+0xf2>
    1d42:	2902      	cmp	r1, #2
    1d44:	d005      	beq.n	1d52 <_sercom_get_default_pad+0x82>
    1d46:	2903      	cmp	r1, #3
    1d48:	d005      	beq.n	1d56 <_sercom_get_default_pad+0x86>
    1d4a:	2000      	movs	r0, #0
    1d4c:	e7ce      	b.n	1cec <_sercom_get_default_pad+0x1c>
    1d4e:	482d      	ldr	r0, [pc, #180]	; (1e04 <_sercom_get_default_pad+0x134>)
    1d50:	e7cc      	b.n	1cec <_sercom_get_default_pad+0x1c>
    1d52:	482d      	ldr	r0, [pc, #180]	; (1e08 <_sercom_get_default_pad+0x138>)
    1d54:	e7ca      	b.n	1cec <_sercom_get_default_pad+0x1c>
    1d56:	482d      	ldr	r0, [pc, #180]	; (1e0c <_sercom_get_default_pad+0x13c>)
    1d58:	e7c8      	b.n	1cec <_sercom_get_default_pad+0x1c>
    1d5a:	2901      	cmp	r1, #1
    1d5c:	d007      	beq.n	1d6e <_sercom_get_default_pad+0x9e>
    1d5e:	2900      	cmp	r1, #0
    1d60:	d031      	beq.n	1dc6 <_sercom_get_default_pad+0xf6>
    1d62:	2902      	cmp	r1, #2
    1d64:	d005      	beq.n	1d72 <_sercom_get_default_pad+0xa2>
    1d66:	2903      	cmp	r1, #3
    1d68:	d005      	beq.n	1d76 <_sercom_get_default_pad+0xa6>
    1d6a:	2000      	movs	r0, #0
    1d6c:	e7be      	b.n	1cec <_sercom_get_default_pad+0x1c>
    1d6e:	4828      	ldr	r0, [pc, #160]	; (1e10 <_sercom_get_default_pad+0x140>)
    1d70:	e7bc      	b.n	1cec <_sercom_get_default_pad+0x1c>
    1d72:	4828      	ldr	r0, [pc, #160]	; (1e14 <_sercom_get_default_pad+0x144>)
    1d74:	e7ba      	b.n	1cec <_sercom_get_default_pad+0x1c>
    1d76:	4828      	ldr	r0, [pc, #160]	; (1e18 <_sercom_get_default_pad+0x148>)
    1d78:	e7b8      	b.n	1cec <_sercom_get_default_pad+0x1c>
    1d7a:	2901      	cmp	r1, #1
    1d7c:	d007      	beq.n	1d8e <_sercom_get_default_pad+0xbe>
    1d7e:	2900      	cmp	r1, #0
    1d80:	d023      	beq.n	1dca <_sercom_get_default_pad+0xfa>
    1d82:	2902      	cmp	r1, #2
    1d84:	d005      	beq.n	1d92 <_sercom_get_default_pad+0xc2>
    1d86:	2903      	cmp	r1, #3
    1d88:	d005      	beq.n	1d96 <_sercom_get_default_pad+0xc6>
    1d8a:	2000      	movs	r0, #0
    1d8c:	e7ae      	b.n	1cec <_sercom_get_default_pad+0x1c>
    1d8e:	4823      	ldr	r0, [pc, #140]	; (1e1c <_sercom_get_default_pad+0x14c>)
    1d90:	e7ac      	b.n	1cec <_sercom_get_default_pad+0x1c>
    1d92:	4823      	ldr	r0, [pc, #140]	; (1e20 <_sercom_get_default_pad+0x150>)
    1d94:	e7aa      	b.n	1cec <_sercom_get_default_pad+0x1c>
    1d96:	4823      	ldr	r0, [pc, #140]	; (1e24 <_sercom_get_default_pad+0x154>)
    1d98:	e7a8      	b.n	1cec <_sercom_get_default_pad+0x1c>
    1d9a:	2901      	cmp	r1, #1
    1d9c:	d007      	beq.n	1dae <_sercom_get_default_pad+0xde>
    1d9e:	2900      	cmp	r1, #0
    1da0:	d015      	beq.n	1dce <_sercom_get_default_pad+0xfe>
    1da2:	2902      	cmp	r1, #2
    1da4:	d005      	beq.n	1db2 <_sercom_get_default_pad+0xe2>
    1da6:	2903      	cmp	r1, #3
    1da8:	d005      	beq.n	1db6 <_sercom_get_default_pad+0xe6>
    1daa:	2000      	movs	r0, #0
    1dac:	e79e      	b.n	1cec <_sercom_get_default_pad+0x1c>
    1dae:	481e      	ldr	r0, [pc, #120]	; (1e28 <_sercom_get_default_pad+0x158>)
    1db0:	e79c      	b.n	1cec <_sercom_get_default_pad+0x1c>
    1db2:	481e      	ldr	r0, [pc, #120]	; (1e2c <_sercom_get_default_pad+0x15c>)
    1db4:	e79a      	b.n	1cec <_sercom_get_default_pad+0x1c>
    1db6:	481e      	ldr	r0, [pc, #120]	; (1e30 <_sercom_get_default_pad+0x160>)
    1db8:	e798      	b.n	1cec <_sercom_get_default_pad+0x1c>
    1dba:	481e      	ldr	r0, [pc, #120]	; (1e34 <_sercom_get_default_pad+0x164>)
    1dbc:	e796      	b.n	1cec <_sercom_get_default_pad+0x1c>
    1dbe:	2003      	movs	r0, #3
    1dc0:	e794      	b.n	1cec <_sercom_get_default_pad+0x1c>
    1dc2:	481d      	ldr	r0, [pc, #116]	; (1e38 <_sercom_get_default_pad+0x168>)
    1dc4:	e792      	b.n	1cec <_sercom_get_default_pad+0x1c>
    1dc6:	481d      	ldr	r0, [pc, #116]	; (1e3c <_sercom_get_default_pad+0x16c>)
    1dc8:	e790      	b.n	1cec <_sercom_get_default_pad+0x1c>
    1dca:	481d      	ldr	r0, [pc, #116]	; (1e40 <_sercom_get_default_pad+0x170>)
    1dcc:	e78e      	b.n	1cec <_sercom_get_default_pad+0x1c>
    1dce:	481d      	ldr	r0, [pc, #116]	; (1e44 <_sercom_get_default_pad+0x174>)
    1dd0:	e78c      	b.n	1cec <_sercom_get_default_pad+0x1c>
    1dd2:	46c0      	nop			; (mov r8, r8)
    1dd4:	42001000 	.word	0x42001000
    1dd8:	42001800 	.word	0x42001800
    1ddc:	42001c00 	.word	0x42001c00
    1de0:	42001400 	.word	0x42001400
    1de4:	42000800 	.word	0x42000800
    1de8:	42000c00 	.word	0x42000c00
    1dec:	00050003 	.word	0x00050003
    1df0:	00060003 	.word	0x00060003
    1df4:	00070003 	.word	0x00070003
    1df8:	00010003 	.word	0x00010003
    1dfc:	001e0003 	.word	0x001e0003
    1e00:	001f0003 	.word	0x001f0003
    1e04:	00090003 	.word	0x00090003
    1e08:	000a0003 	.word	0x000a0003
    1e0c:	000b0003 	.word	0x000b0003
    1e10:	00110003 	.word	0x00110003
    1e14:	00120003 	.word	0x00120003
    1e18:	00130003 	.word	0x00130003
    1e1c:	000d0003 	.word	0x000d0003
    1e20:	000e0003 	.word	0x000e0003
    1e24:	000f0003 	.word	0x000f0003
    1e28:	00170003 	.word	0x00170003
    1e2c:	00180003 	.word	0x00180003
    1e30:	00190003 	.word	0x00190003
    1e34:	00040003 	.word	0x00040003
    1e38:	00080003 	.word	0x00080003
    1e3c:	00100003 	.word	0x00100003
    1e40:	000c0003 	.word	0x000c0003
    1e44:	00160003 	.word	0x00160003

00001e48 <_sercom_get_sercom_inst_index>:
    1e48:	b530      	push	{r4, r5, lr}
    1e4a:	b087      	sub	sp, #28
    1e4c:	4b0b      	ldr	r3, [pc, #44]	; (1e7c <_sercom_get_sercom_inst_index+0x34>)
    1e4e:	466a      	mov	r2, sp
    1e50:	cb32      	ldmia	r3!, {r1, r4, r5}
    1e52:	c232      	stmia	r2!, {r1, r4, r5}
    1e54:	cb32      	ldmia	r3!, {r1, r4, r5}
    1e56:	c232      	stmia	r2!, {r1, r4, r5}
    1e58:	9b00      	ldr	r3, [sp, #0]
    1e5a:	4283      	cmp	r3, r0
    1e5c:	d00b      	beq.n	1e76 <_sercom_get_sercom_inst_index+0x2e>
    1e5e:	2301      	movs	r3, #1
    1e60:	009a      	lsls	r2, r3, #2
    1e62:	4669      	mov	r1, sp
    1e64:	5852      	ldr	r2, [r2, r1]
    1e66:	4282      	cmp	r2, r0
    1e68:	d006      	beq.n	1e78 <_sercom_get_sercom_inst_index+0x30>
    1e6a:	3301      	adds	r3, #1
    1e6c:	2b06      	cmp	r3, #6
    1e6e:	d1f7      	bne.n	1e60 <_sercom_get_sercom_inst_index+0x18>
    1e70:	2000      	movs	r0, #0
    1e72:	b007      	add	sp, #28
    1e74:	bd30      	pop	{r4, r5, pc}
    1e76:	2300      	movs	r3, #0
    1e78:	b2d8      	uxtb	r0, r3
    1e7a:	e7fa      	b.n	1e72 <_sercom_get_sercom_inst_index+0x2a>
    1e7c:	00006ed0 	.word	0x00006ed0

00001e80 <_sercom_default_handler>:
    1e80:	4770      	bx	lr
	...

00001e84 <_sercom_set_handler>:
    1e84:	b5f0      	push	{r4, r5, r6, r7, lr}
    1e86:	4b0a      	ldr	r3, [pc, #40]	; (1eb0 <_sercom_set_handler+0x2c>)
    1e88:	781b      	ldrb	r3, [r3, #0]
    1e8a:	2b00      	cmp	r3, #0
    1e8c:	d10c      	bne.n	1ea8 <_sercom_set_handler+0x24>
    1e8e:	4f09      	ldr	r7, [pc, #36]	; (1eb4 <_sercom_set_handler+0x30>)
    1e90:	4e09      	ldr	r6, [pc, #36]	; (1eb8 <_sercom_set_handler+0x34>)
    1e92:	4d0a      	ldr	r5, [pc, #40]	; (1ebc <_sercom_set_handler+0x38>)
    1e94:	2400      	movs	r4, #0
    1e96:	51de      	str	r6, [r3, r7]
    1e98:	195a      	adds	r2, r3, r5
    1e9a:	6014      	str	r4, [r2, #0]
    1e9c:	3304      	adds	r3, #4
    1e9e:	2b18      	cmp	r3, #24
    1ea0:	d1f9      	bne.n	1e96 <_sercom_set_handler+0x12>
    1ea2:	2201      	movs	r2, #1
    1ea4:	4b02      	ldr	r3, [pc, #8]	; (1eb0 <_sercom_set_handler+0x2c>)
    1ea6:	701a      	strb	r2, [r3, #0]
    1ea8:	0080      	lsls	r0, r0, #2
    1eaa:	4b02      	ldr	r3, [pc, #8]	; (1eb4 <_sercom_set_handler+0x30>)
    1eac:	50c1      	str	r1, [r0, r3]
    1eae:	bdf0      	pop	{r4, r5, r6, r7, pc}
    1eb0:	200002b2 	.word	0x200002b2
    1eb4:	200002b4 	.word	0x200002b4
    1eb8:	00001e81 	.word	0x00001e81
    1ebc:	200005ec 	.word	0x200005ec

00001ec0 <_sercom_get_interrupt_vector>:
    1ec0:	b500      	push	{lr}
    1ec2:	b083      	sub	sp, #12
    1ec4:	2309      	movs	r3, #9
    1ec6:	466a      	mov	r2, sp
    1ec8:	7013      	strb	r3, [r2, #0]
    1eca:	3301      	adds	r3, #1
    1ecc:	7053      	strb	r3, [r2, #1]
    1ece:	3301      	adds	r3, #1
    1ed0:	7093      	strb	r3, [r2, #2]
    1ed2:	3301      	adds	r3, #1
    1ed4:	70d3      	strb	r3, [r2, #3]
    1ed6:	3301      	adds	r3, #1
    1ed8:	7113      	strb	r3, [r2, #4]
    1eda:	3301      	adds	r3, #1
    1edc:	7153      	strb	r3, [r2, #5]
    1ede:	4b03      	ldr	r3, [pc, #12]	; (1eec <_sercom_get_interrupt_vector+0x2c>)
    1ee0:	4798      	blx	r3
    1ee2:	466b      	mov	r3, sp
    1ee4:	5618      	ldrsb	r0, [r3, r0]
    1ee6:	b003      	add	sp, #12
    1ee8:	bd00      	pop	{pc}
    1eea:	46c0      	nop			; (mov r8, r8)
    1eec:	00001e49 	.word	0x00001e49

00001ef0 <SERCOM0_Handler>:
    1ef0:	b510      	push	{r4, lr}
    1ef2:	4b02      	ldr	r3, [pc, #8]	; (1efc <SERCOM0_Handler+0xc>)
    1ef4:	681b      	ldr	r3, [r3, #0]
    1ef6:	2000      	movs	r0, #0
    1ef8:	4798      	blx	r3
    1efa:	bd10      	pop	{r4, pc}
    1efc:	200002b4 	.word	0x200002b4

00001f00 <SERCOM1_Handler>:
    1f00:	b510      	push	{r4, lr}
    1f02:	4b02      	ldr	r3, [pc, #8]	; (1f0c <SERCOM1_Handler+0xc>)
    1f04:	685b      	ldr	r3, [r3, #4]
    1f06:	2001      	movs	r0, #1
    1f08:	4798      	blx	r3
    1f0a:	bd10      	pop	{r4, pc}
    1f0c:	200002b4 	.word	0x200002b4

00001f10 <SERCOM2_Handler>:
    1f10:	b510      	push	{r4, lr}
    1f12:	4b02      	ldr	r3, [pc, #8]	; (1f1c <SERCOM2_Handler+0xc>)
    1f14:	689b      	ldr	r3, [r3, #8]
    1f16:	2002      	movs	r0, #2
    1f18:	4798      	blx	r3
    1f1a:	bd10      	pop	{r4, pc}
    1f1c:	200002b4 	.word	0x200002b4

00001f20 <SERCOM3_Handler>:
    1f20:	b510      	push	{r4, lr}
    1f22:	4b02      	ldr	r3, [pc, #8]	; (1f2c <SERCOM3_Handler+0xc>)
    1f24:	68db      	ldr	r3, [r3, #12]
    1f26:	2003      	movs	r0, #3
    1f28:	4798      	blx	r3
    1f2a:	bd10      	pop	{r4, pc}
    1f2c:	200002b4 	.word	0x200002b4

00001f30 <SERCOM4_Handler>:
    1f30:	b510      	push	{r4, lr}
    1f32:	4b02      	ldr	r3, [pc, #8]	; (1f3c <SERCOM4_Handler+0xc>)
    1f34:	691b      	ldr	r3, [r3, #16]
    1f36:	2004      	movs	r0, #4
    1f38:	4798      	blx	r3
    1f3a:	bd10      	pop	{r4, pc}
    1f3c:	200002b4 	.word	0x200002b4

00001f40 <SERCOM5_Handler>:
    1f40:	b510      	push	{r4, lr}
    1f42:	4b02      	ldr	r3, [pc, #8]	; (1f4c <SERCOM5_Handler+0xc>)
    1f44:	695b      	ldr	r3, [r3, #20]
    1f46:	2005      	movs	r0, #5
    1f48:	4798      	blx	r3
    1f4a:	bd10      	pop	{r4, pc}
    1f4c:	200002b4 	.word	0x200002b4

00001f50 <spi_reset>:
    1f50:	b570      	push	{r4, r5, r6, lr}
    1f52:	0005      	movs	r5, r0
    1f54:	6804      	ldr	r4, [r0, #0]
    1f56:	0020      	movs	r0, r4
    1f58:	4b0e      	ldr	r3, [pc, #56]	; (1f94 <spi_reset+0x44>)
    1f5a:	4798      	blx	r3
    1f5c:	231f      	movs	r3, #31
    1f5e:	4018      	ands	r0, r3
    1f60:	3b1e      	subs	r3, #30
    1f62:	4083      	lsls	r3, r0
    1f64:	2280      	movs	r2, #128	; 0x80
    1f66:	490c      	ldr	r1, [pc, #48]	; (1f98 <spi_reset+0x48>)
    1f68:	508b      	str	r3, [r1, r2]
    1f6a:	682a      	ldr	r2, [r5, #0]
    1f6c:	69d3      	ldr	r3, [r2, #28]
    1f6e:	2b00      	cmp	r3, #0
    1f70:	d1fc      	bne.n	1f6c <spi_reset+0x1c>
    1f72:	338f      	adds	r3, #143	; 0x8f
    1f74:	7523      	strb	r3, [r4, #20]
    1f76:	7623      	strb	r3, [r4, #24]
    1f78:	6823      	ldr	r3, [r4, #0]
    1f7a:	2202      	movs	r2, #2
    1f7c:	4393      	bics	r3, r2
    1f7e:	6023      	str	r3, [r4, #0]
    1f80:	682a      	ldr	r2, [r5, #0]
    1f82:	69d3      	ldr	r3, [r2, #28]
    1f84:	2b00      	cmp	r3, #0
    1f86:	d1fc      	bne.n	1f82 <spi_reset+0x32>
    1f88:	6823      	ldr	r3, [r4, #0]
    1f8a:	2201      	movs	r2, #1
    1f8c:	4313      	orrs	r3, r2
    1f8e:	6023      	str	r3, [r4, #0]
    1f90:	bd70      	pop	{r4, r5, r6, pc}
    1f92:	46c0      	nop			; (mov r8, r8)
    1f94:	00001ec1 	.word	0x00001ec1
    1f98:	e000e100 	.word	0xe000e100

00001f9c <spi_set_baudrate>:
    1f9c:	b570      	push	{r4, r5, r6, lr}
    1f9e:	b082      	sub	sp, #8
    1fa0:	0005      	movs	r5, r0
    1fa2:	000c      	movs	r4, r1
    1fa4:	2200      	movs	r2, #0
    1fa6:	466b      	mov	r3, sp
    1fa8:	80da      	strh	r2, [r3, #6]
    1faa:	6806      	ldr	r6, [r0, #0]
    1fac:	0030      	movs	r0, r6
    1fae:	4b24      	ldr	r3, [pc, #144]	; (2040 <STACK_SIZE+0x40>)
    1fb0:	4798      	blx	r3
    1fb2:	231f      	movs	r3, #31
    1fb4:	4018      	ands	r0, r3
    1fb6:	3b1e      	subs	r3, #30
    1fb8:	4083      	lsls	r3, r0
    1fba:	2280      	movs	r2, #128	; 0x80
    1fbc:	4921      	ldr	r1, [pc, #132]	; (2044 <STACK_SIZE+0x44>)
    1fbe:	508b      	str	r3, [r1, r2]
    1fc0:	682a      	ldr	r2, [r5, #0]
    1fc2:	69d3      	ldr	r3, [r2, #28]
    1fc4:	2b00      	cmp	r3, #0
    1fc6:	d1fc      	bne.n	1fc2 <spi_set_baudrate+0x26>
    1fc8:	338f      	adds	r3, #143	; 0x8f
    1fca:	7533      	strb	r3, [r6, #20]
    1fcc:	7633      	strb	r3, [r6, #24]
    1fce:	6833      	ldr	r3, [r6, #0]
    1fd0:	2202      	movs	r2, #2
    1fd2:	4393      	bics	r3, r2
    1fd4:	6033      	str	r3, [r6, #0]
    1fd6:	6828      	ldr	r0, [r5, #0]
    1fd8:	69c3      	ldr	r3, [r0, #28]
    1fda:	2b00      	cmp	r3, #0
    1fdc:	d1fc      	bne.n	1fd8 <spi_set_baudrate+0x3c>
    1fde:	4b1a      	ldr	r3, [pc, #104]	; (2048 <STACK_SIZE+0x48>)
    1fe0:	4798      	blx	r3
    1fe2:	3014      	adds	r0, #20
    1fe4:	b2c0      	uxtb	r0, r0
    1fe6:	4b19      	ldr	r3, [pc, #100]	; (204c <STACK_SIZE+0x4c>)
    1fe8:	4798      	blx	r3
    1fea:	0001      	movs	r1, r0
    1fec:	466b      	mov	r3, sp
    1fee:	1d9a      	adds	r2, r3, #6
    1ff0:	0020      	movs	r0, r4
    1ff2:	4b17      	ldr	r3, [pc, #92]	; (2050 <STACK_SIZE+0x50>)
    1ff4:	4798      	blx	r3
    1ff6:	1e04      	subs	r4, r0, #0
    1ff8:	d003      	beq.n	2002 <STACK_SIZE+0x2>
    1ffa:	2417      	movs	r4, #23
    1ffc:	0020      	movs	r0, r4
    1ffe:	b002      	add	sp, #8
    2000:	bd70      	pop	{r4, r5, r6, pc}
    2002:	466b      	mov	r3, sp
    2004:	3306      	adds	r3, #6
    2006:	781b      	ldrb	r3, [r3, #0]
    2008:	7333      	strb	r3, [r6, #12]
    200a:	682e      	ldr	r6, [r5, #0]
    200c:	69f3      	ldr	r3, [r6, #28]
    200e:	2b00      	cmp	r3, #0
    2010:	d1fc      	bne.n	200c <STACK_SIZE+0xc>
    2012:	0030      	movs	r0, r6
    2014:	4b0a      	ldr	r3, [pc, #40]	; (2040 <STACK_SIZE+0x40>)
    2016:	4798      	blx	r3
    2018:	231f      	movs	r3, #31
    201a:	4018      	ands	r0, r3
    201c:	3b1e      	subs	r3, #30
    201e:	4083      	lsls	r3, r0
    2020:	4a08      	ldr	r2, [pc, #32]	; (2044 <STACK_SIZE+0x44>)
    2022:	6013      	str	r3, [r2, #0]
    2024:	682a      	ldr	r2, [r5, #0]
    2026:	69d3      	ldr	r3, [r2, #28]
    2028:	2b00      	cmp	r3, #0
    202a:	d1fc      	bne.n	2026 <STACK_SIZE+0x26>
    202c:	6833      	ldr	r3, [r6, #0]
    202e:	2202      	movs	r2, #2
    2030:	4313      	orrs	r3, r2
    2032:	6033      	str	r3, [r6, #0]
    2034:	682a      	ldr	r2, [r5, #0]
    2036:	69d3      	ldr	r3, [r2, #28]
    2038:	2b00      	cmp	r3, #0
    203a:	d1fc      	bne.n	2036 <STACK_SIZE+0x36>
    203c:	e7de      	b.n	1ffc <spi_set_baudrate+0x60>
    203e:	46c0      	nop			; (mov r8, r8)
    2040:	00001ec1 	.word	0x00001ec1
    2044:	e000e100 	.word	0xe000e100
    2048:	00001e49 	.word	0x00001e49
    204c:	00003269 	.word	0x00003269
    2050:	00001bc7 	.word	0x00001bc7

00002054 <spi_init>:
    2054:	b5f0      	push	{r4, r5, r6, r7, lr}
    2056:	b08b      	sub	sp, #44	; 0x2c
    2058:	0005      	movs	r5, r0
    205a:	000c      	movs	r4, r1
    205c:	0016      	movs	r6, r2
    205e:	6029      	str	r1, [r5, #0]
    2060:	680b      	ldr	r3, [r1, #0]
    2062:	201c      	movs	r0, #28
    2064:	079b      	lsls	r3, r3, #30
    2066:	d501      	bpl.n	206c <spi_init+0x18>
    2068:	b00b      	add	sp, #44	; 0x2c
    206a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    206c:	680b      	ldr	r3, [r1, #0]
    206e:	3817      	subs	r0, #23
    2070:	07db      	lsls	r3, r3, #31
    2072:	d4f9      	bmi.n	2068 <spi_init+0x14>
    2074:	0008      	movs	r0, r1
    2076:	4b60      	ldr	r3, [pc, #384]	; (21f8 <spi_init+0x1a4>)
    2078:	4798      	blx	r3
    207a:	4a60      	ldr	r2, [pc, #384]	; (21fc <spi_init+0x1a8>)
    207c:	6a11      	ldr	r1, [r2, #32]
    207e:	1c87      	adds	r7, r0, #2
    2080:	2301      	movs	r3, #1
    2082:	40bb      	lsls	r3, r7
    2084:	430b      	orrs	r3, r1
    2086:	6213      	str	r3, [r2, #32]
    2088:	a909      	add	r1, sp, #36	; 0x24
    208a:	2724      	movs	r7, #36	; 0x24
    208c:	5df3      	ldrb	r3, [r6, r7]
    208e:	700b      	strb	r3, [r1, #0]
    2090:	3014      	adds	r0, #20
    2092:	b2c3      	uxtb	r3, r0
    2094:	9301      	str	r3, [sp, #4]
    2096:	0018      	movs	r0, r3
    2098:	4b59      	ldr	r3, [pc, #356]	; (2200 <spi_init+0x1ac>)
    209a:	4798      	blx	r3
    209c:	9801      	ldr	r0, [sp, #4]
    209e:	4b59      	ldr	r3, [pc, #356]	; (2204 <spi_init+0x1b0>)
    20a0:	4798      	blx	r3
    20a2:	5df0      	ldrb	r0, [r6, r7]
    20a4:	2100      	movs	r1, #0
    20a6:	4b58      	ldr	r3, [pc, #352]	; (2208 <spi_init+0x1b4>)
    20a8:	4798      	blx	r3
    20aa:	7833      	ldrb	r3, [r6, #0]
    20ac:	2b01      	cmp	r3, #1
    20ae:	d038      	beq.n	2122 <spi_init+0xce>
    20b0:	002b      	movs	r3, r5
    20b2:	330c      	adds	r3, #12
    20b4:	0029      	movs	r1, r5
    20b6:	3128      	adds	r1, #40	; 0x28
    20b8:	2200      	movs	r2, #0
    20ba:	c304      	stmia	r3!, {r2}
    20bc:	428b      	cmp	r3, r1
    20be:	d1fc      	bne.n	20ba <spi_init+0x66>
    20c0:	2300      	movs	r3, #0
    20c2:	62eb      	str	r3, [r5, #44]	; 0x2c
    20c4:	62ab      	str	r3, [r5, #40]	; 0x28
    20c6:	2400      	movs	r4, #0
    20c8:	86ab      	strh	r3, [r5, #52]	; 0x34
    20ca:	862b      	strh	r3, [r5, #48]	; 0x30
    20cc:	3336      	adds	r3, #54	; 0x36
    20ce:	54ec      	strb	r4, [r5, r3]
    20d0:	3301      	adds	r3, #1
    20d2:	54ec      	strb	r4, [r5, r3]
    20d4:	3301      	adds	r3, #1
    20d6:	54ec      	strb	r4, [r5, r3]
    20d8:	3b35      	subs	r3, #53	; 0x35
    20da:	726b      	strb	r3, [r5, #9]
    20dc:	712c      	strb	r4, [r5, #4]
    20de:	6828      	ldr	r0, [r5, #0]
    20e0:	4b45      	ldr	r3, [pc, #276]	; (21f8 <spi_init+0x1a4>)
    20e2:	4798      	blx	r3
    20e4:	0007      	movs	r7, r0
    20e6:	4949      	ldr	r1, [pc, #292]	; (220c <spi_init+0x1b8>)
    20e8:	4b49      	ldr	r3, [pc, #292]	; (2210 <spi_init+0x1bc>)
    20ea:	4798      	blx	r3
    20ec:	00bf      	lsls	r7, r7, #2
    20ee:	4b49      	ldr	r3, [pc, #292]	; (2214 <spi_init+0x1c0>)
    20f0:	50fd      	str	r5, [r7, r3]
    20f2:	682f      	ldr	r7, [r5, #0]
    20f4:	ab04      	add	r3, sp, #16
    20f6:	2280      	movs	r2, #128	; 0x80
    20f8:	701a      	strb	r2, [r3, #0]
    20fa:	705c      	strb	r4, [r3, #1]
    20fc:	3a7f      	subs	r2, #127	; 0x7f
    20fe:	709a      	strb	r2, [r3, #2]
    2100:	70dc      	strb	r4, [r3, #3]
    2102:	7833      	ldrb	r3, [r6, #0]
    2104:	2b00      	cmp	r3, #0
    2106:	d102      	bne.n	210e <spi_init+0xba>
    2108:	2200      	movs	r2, #0
    210a:	ab04      	add	r3, sp, #16
    210c:	709a      	strb	r2, [r3, #2]
    210e:	6ab3      	ldr	r3, [r6, #40]	; 0x28
    2110:	9305      	str	r3, [sp, #20]
    2112:	6af3      	ldr	r3, [r6, #44]	; 0x2c
    2114:	9306      	str	r3, [sp, #24]
    2116:	6b33      	ldr	r3, [r6, #48]	; 0x30
    2118:	9307      	str	r3, [sp, #28]
    211a:	6b73      	ldr	r3, [r6, #52]	; 0x34
    211c:	9308      	str	r3, [sp, #32]
    211e:	2400      	movs	r4, #0
    2120:	e00b      	b.n	213a <spi_init+0xe6>
    2122:	6823      	ldr	r3, [r4, #0]
    2124:	220c      	movs	r2, #12
    2126:	4313      	orrs	r3, r2
    2128:	6023      	str	r3, [r4, #0]
    212a:	e7c1      	b.n	20b0 <spi_init+0x5c>
    212c:	0038      	movs	r0, r7
    212e:	4b3a      	ldr	r3, [pc, #232]	; (2218 <spi_init+0x1c4>)
    2130:	4798      	blx	r3
    2132:	e00a      	b.n	214a <spi_init+0xf6>
    2134:	3401      	adds	r4, #1
    2136:	2c04      	cmp	r4, #4
    2138:	d010      	beq.n	215c <spi_init+0x108>
    213a:	b2e1      	uxtb	r1, r4
    213c:	00a3      	lsls	r3, r4, #2
    213e:	aa02      	add	r2, sp, #8
    2140:	200c      	movs	r0, #12
    2142:	1812      	adds	r2, r2, r0
    2144:	58d0      	ldr	r0, [r2, r3]
    2146:	2800      	cmp	r0, #0
    2148:	d0f0      	beq.n	212c <spi_init+0xd8>
    214a:	1c43      	adds	r3, r0, #1
    214c:	d0f2      	beq.n	2134 <spi_init+0xe0>
    214e:	a904      	add	r1, sp, #16
    2150:	7008      	strb	r0, [r1, #0]
    2152:	0c00      	lsrs	r0, r0, #16
    2154:	b2c0      	uxtb	r0, r0
    2156:	4b31      	ldr	r3, [pc, #196]	; (221c <spi_init+0x1c8>)
    2158:	4798      	blx	r3
    215a:	e7eb      	b.n	2134 <spi_init+0xe0>
    215c:	7833      	ldrb	r3, [r6, #0]
    215e:	716b      	strb	r3, [r5, #5]
    2160:	7c33      	ldrb	r3, [r6, #16]
    2162:	71ab      	strb	r3, [r5, #6]
    2164:	7cb3      	ldrb	r3, [r6, #18]
    2166:	71eb      	strb	r3, [r5, #7]
    2168:	7d33      	ldrb	r3, [r6, #20]
    216a:	722b      	strb	r3, [r5, #8]
    216c:	2200      	movs	r2, #0
    216e:	ab02      	add	r3, sp, #8
    2170:	80da      	strh	r2, [r3, #6]
    2172:	7833      	ldrb	r3, [r6, #0]
    2174:	2b01      	cmp	r3, #1
    2176:	d028      	beq.n	21ca <spi_init+0x176>
    2178:	6873      	ldr	r3, [r6, #4]
    217a:	68b2      	ldr	r2, [r6, #8]
    217c:	4313      	orrs	r3, r2
    217e:	68f2      	ldr	r2, [r6, #12]
    2180:	4313      	orrs	r3, r2
    2182:	7c31      	ldrb	r1, [r6, #16]
    2184:	7c72      	ldrb	r2, [r6, #17]
    2186:	2a00      	cmp	r2, #0
    2188:	d103      	bne.n	2192 <spi_init+0x13e>
    218a:	4a25      	ldr	r2, [pc, #148]	; (2220 <spi_init+0x1cc>)
    218c:	7892      	ldrb	r2, [r2, #2]
    218e:	0792      	lsls	r2, r2, #30
    2190:	d501      	bpl.n	2196 <spi_init+0x142>
    2192:	2280      	movs	r2, #128	; 0x80
    2194:	4313      	orrs	r3, r2
    2196:	7cb2      	ldrb	r2, [r6, #18]
    2198:	2a00      	cmp	r2, #0
    219a:	d002      	beq.n	21a2 <spi_init+0x14e>
    219c:	2280      	movs	r2, #128	; 0x80
    219e:	0292      	lsls	r2, r2, #10
    21a0:	4311      	orrs	r1, r2
    21a2:	7cf2      	ldrb	r2, [r6, #19]
    21a4:	2a00      	cmp	r2, #0
    21a6:	d002      	beq.n	21ae <spi_init+0x15a>
    21a8:	2280      	movs	r2, #128	; 0x80
    21aa:	0092      	lsls	r2, r2, #2
    21ac:	4311      	orrs	r1, r2
    21ae:	7d32      	ldrb	r2, [r6, #20]
    21b0:	2a00      	cmp	r2, #0
    21b2:	d002      	beq.n	21ba <spi_init+0x166>
    21b4:	2280      	movs	r2, #128	; 0x80
    21b6:	0192      	lsls	r2, r2, #6
    21b8:	4311      	orrs	r1, r2
    21ba:	683a      	ldr	r2, [r7, #0]
    21bc:	4313      	orrs	r3, r2
    21be:	603b      	str	r3, [r7, #0]
    21c0:	687b      	ldr	r3, [r7, #4]
    21c2:	430b      	orrs	r3, r1
    21c4:	607b      	str	r3, [r7, #4]
    21c6:	2000      	movs	r0, #0
    21c8:	e74e      	b.n	2068 <spi_init+0x14>
    21ca:	6828      	ldr	r0, [r5, #0]
    21cc:	4b0a      	ldr	r3, [pc, #40]	; (21f8 <spi_init+0x1a4>)
    21ce:	4798      	blx	r3
    21d0:	3014      	adds	r0, #20
    21d2:	b2c0      	uxtb	r0, r0
    21d4:	4b13      	ldr	r3, [pc, #76]	; (2224 <spi_init+0x1d0>)
    21d6:	4798      	blx	r3
    21d8:	0001      	movs	r1, r0
    21da:	ab02      	add	r3, sp, #8
    21dc:	1d9a      	adds	r2, r3, #6
    21de:	69b0      	ldr	r0, [r6, #24]
    21e0:	4b11      	ldr	r3, [pc, #68]	; (2228 <spi_init+0x1d4>)
    21e2:	4798      	blx	r3
    21e4:	0003      	movs	r3, r0
    21e6:	2017      	movs	r0, #23
    21e8:	2b00      	cmp	r3, #0
    21ea:	d000      	beq.n	21ee <spi_init+0x19a>
    21ec:	e73c      	b.n	2068 <spi_init+0x14>
    21ee:	ab02      	add	r3, sp, #8
    21f0:	3306      	adds	r3, #6
    21f2:	781b      	ldrb	r3, [r3, #0]
    21f4:	733b      	strb	r3, [r7, #12]
    21f6:	e7bf      	b.n	2178 <spi_init+0x124>
    21f8:	00001e49 	.word	0x00001e49
    21fc:	40000400 	.word	0x40000400
    2200:	0000324d 	.word	0x0000324d
    2204:	000031c1 	.word	0x000031c1
    2208:	00001c85 	.word	0x00001c85
    220c:	000024c1 	.word	0x000024c1
    2210:	00001e85 	.word	0x00001e85
    2214:	200005ec 	.word	0x200005ec
    2218:	00001cd1 	.word	0x00001cd1
    221c:	00003345 	.word	0x00003345
    2220:	41002000 	.word	0x41002000
    2224:	00003269 	.word	0x00003269
    2228:	00001bc7 	.word	0x00001bc7

0000222c <spi_read_buffer_wait>:
    222c:	b5f0      	push	{r4, r5, r6, r7, lr}
    222e:	46d6      	mov	lr, sl
    2230:	4647      	mov	r7, r8
    2232:	b580      	push	{r7, lr}
    2234:	b083      	sub	sp, #12
    2236:	2438      	movs	r4, #56	; 0x38
    2238:	5d05      	ldrb	r5, [r0, r4]
    223a:	3c33      	subs	r4, #51	; 0x33
    223c:	2d05      	cmp	r5, #5
    223e:	d002      	beq.n	2246 <spi_read_buffer_wait+0x1a>
    2240:	3412      	adds	r4, #18
    2242:	2a00      	cmp	r2, #0
    2244:	d105      	bne.n	2252 <spi_read_buffer_wait+0x26>
    2246:	0020      	movs	r0, r4
    2248:	b003      	add	sp, #12
    224a:	bc0c      	pop	{r2, r3}
    224c:	4690      	mov	r8, r2
    224e:	469a      	mov	sl, r3
    2250:	bdf0      	pop	{r4, r5, r6, r7, pc}
    2252:	79c4      	ldrb	r4, [r0, #7]
    2254:	2c00      	cmp	r4, #0
    2256:	d144      	bne.n	22e2 <spi_read_buffer_wait+0xb6>
    2258:	341c      	adds	r4, #28
    225a:	e7f4      	b.n	2246 <spi_read_buffer_wait+0x1a>
    225c:	6805      	ldr	r5, [r0, #0]
    225e:	7e2c      	ldrb	r4, [r5, #24]
    2260:	423c      	tst	r4, r7
    2262:	d0fc      	beq.n	225e <spi_read_buffer_wait+0x32>
    2264:	7e2c      	ldrb	r4, [r5, #24]
    2266:	423c      	tst	r4, r7
    2268:	d01a      	beq.n	22a0 <spi_read_buffer_wait+0x74>
    226a:	4644      	mov	r4, r8
    226c:	62ac      	str	r4, [r5, #40]	; 0x28
    226e:	e017      	b.n	22a0 <spi_read_buffer_wait+0x74>
    2270:	7984      	ldrb	r4, [r0, #6]
    2272:	2c01      	cmp	r4, #1
    2274:	d026      	beq.n	22c4 <spi_read_buffer_wait+0x98>
    2276:	6aad      	ldr	r5, [r5, #40]	; 0x28
    2278:	b2ec      	uxtb	r4, r5
    227a:	46a4      	mov	ip, r4
    227c:	9c01      	ldr	r4, [sp, #4]
    227e:	2c00      	cmp	r4, #0
    2280:	d13a      	bne.n	22f8 <spi_read_buffer_wait+0xcc>
    2282:	1c75      	adds	r5, r6, #1
    2284:	b2ad      	uxth	r5, r5
    2286:	4664      	mov	r4, ip
    2288:	558c      	strb	r4, [r1, r6]
    228a:	7984      	ldrb	r4, [r0, #6]
    228c:	2c01      	cmp	r4, #1
    228e:	d01e      	beq.n	22ce <spi_read_buffer_wait+0xa2>
    2290:	002e      	movs	r6, r5
    2292:	3a01      	subs	r2, #1
    2294:	b292      	uxth	r2, r2
    2296:	4552      	cmp	r2, sl
    2298:	d01f      	beq.n	22da <spi_read_buffer_wait+0xae>
    229a:	7944      	ldrb	r4, [r0, #5]
    229c:	2c01      	cmp	r4, #1
    229e:	d0dd      	beq.n	225c <spi_read_buffer_wait+0x30>
    22a0:	6805      	ldr	r5, [r0, #0]
    22a2:	7e2c      	ldrb	r4, [r5, #24]
    22a4:	421c      	tst	r4, r3
    22a6:	d0fc      	beq.n	22a2 <spi_read_buffer_wait+0x76>
    22a8:	7e2c      	ldrb	r4, [r5, #24]
    22aa:	421c      	tst	r4, r3
    22ac:	d017      	beq.n	22de <spi_read_buffer_wait+0xb2>
    22ae:	8b6c      	ldrh	r4, [r5, #26]
    22b0:	46a4      	mov	ip, r4
    22b2:	2400      	movs	r4, #0
    22b4:	9401      	str	r4, [sp, #4]
    22b6:	4664      	mov	r4, ip
    22b8:	421c      	tst	r4, r3
    22ba:	d0d9      	beq.n	2270 <spi_read_buffer_wait+0x44>
    22bc:	836b      	strh	r3, [r5, #26]
    22be:	241e      	movs	r4, #30
    22c0:	9401      	str	r4, [sp, #4]
    22c2:	e7d5      	b.n	2270 <spi_read_buffer_wait+0x44>
    22c4:	6aac      	ldr	r4, [r5, #40]	; 0x28
    22c6:	05e4      	lsls	r4, r4, #23
    22c8:	0de4      	lsrs	r4, r4, #23
    22ca:	46a4      	mov	ip, r4
    22cc:	e7d6      	b.n	227c <spi_read_buffer_wait+0x50>
    22ce:	3602      	adds	r6, #2
    22d0:	b2b6      	uxth	r6, r6
    22d2:	4664      	mov	r4, ip
    22d4:	0a24      	lsrs	r4, r4, #8
    22d6:	554c      	strb	r4, [r1, r5]
    22d8:	e7db      	b.n	2292 <spi_read_buffer_wait+0x66>
    22da:	9c01      	ldr	r4, [sp, #4]
    22dc:	e7b3      	b.n	2246 <spi_read_buffer_wait+0x1a>
    22de:	2410      	movs	r4, #16
    22e0:	e7b1      	b.n	2246 <spi_read_buffer_wait+0x1a>
    22e2:	3a01      	subs	r2, #1
    22e4:	b292      	uxth	r2, r2
    22e6:	2600      	movs	r6, #0
    22e8:	2701      	movs	r7, #1
    22ea:	05db      	lsls	r3, r3, #23
    22ec:	0ddb      	lsrs	r3, r3, #23
    22ee:	4698      	mov	r8, r3
    22f0:	2304      	movs	r3, #4
    22f2:	4c02      	ldr	r4, [pc, #8]	; (22fc <spi_read_buffer_wait+0xd0>)
    22f4:	46a2      	mov	sl, r4
    22f6:	e7d0      	b.n	229a <spi_read_buffer_wait+0x6e>
    22f8:	9c01      	ldr	r4, [sp, #4]
    22fa:	e7a4      	b.n	2246 <spi_read_buffer_wait+0x1a>
    22fc:	0000ffff 	.word	0x0000ffff

00002300 <spi_select_slave>:
    2300:	b510      	push	{r4, lr}
    2302:	7944      	ldrb	r4, [r0, #5]
    2304:	2315      	movs	r3, #21
    2306:	2c01      	cmp	r4, #1
    2308:	d001      	beq.n	230e <spi_select_slave+0xe>
    230a:	0018      	movs	r0, r3
    230c:	bd10      	pop	{r4, pc}
    230e:	7a04      	ldrb	r4, [r0, #8]
    2310:	2300      	movs	r3, #0
    2312:	2c00      	cmp	r4, #0
    2314:	d1f9      	bne.n	230a <spi_select_slave+0xa>
    2316:	2a00      	cmp	r2, #0
    2318:	d058      	beq.n	23cc <spi_select_slave+0xcc>
    231a:	784b      	ldrb	r3, [r1, #1]
    231c:	2b00      	cmp	r3, #0
    231e:	d044      	beq.n	23aa <spi_select_slave+0xaa>
    2320:	6803      	ldr	r3, [r0, #0]
    2322:	7e1b      	ldrb	r3, [r3, #24]
    2324:	07db      	lsls	r3, r3, #31
    2326:	d410      	bmi.n	234a <spi_select_slave+0x4a>
    2328:	780a      	ldrb	r2, [r1, #0]
    232a:	09d1      	lsrs	r1, r2, #7
    232c:	2300      	movs	r3, #0
    232e:	2900      	cmp	r1, #0
    2330:	d104      	bne.n	233c <spi_select_slave+0x3c>
    2332:	0953      	lsrs	r3, r2, #5
    2334:	01db      	lsls	r3, r3, #7
    2336:	492e      	ldr	r1, [pc, #184]	; (23f0 <spi_select_slave+0xf0>)
    2338:	468c      	mov	ip, r1
    233a:	4463      	add	r3, ip
    233c:	211f      	movs	r1, #31
    233e:	4011      	ands	r1, r2
    2340:	2201      	movs	r2, #1
    2342:	408a      	lsls	r2, r1
    2344:	619a      	str	r2, [r3, #24]
    2346:	2305      	movs	r3, #5
    2348:	e7df      	b.n	230a <spi_select_slave+0xa>
    234a:	780a      	ldrb	r2, [r1, #0]
    234c:	09d4      	lsrs	r4, r2, #7
    234e:	2300      	movs	r3, #0
    2350:	2c00      	cmp	r4, #0
    2352:	d104      	bne.n	235e <spi_select_slave+0x5e>
    2354:	0953      	lsrs	r3, r2, #5
    2356:	01db      	lsls	r3, r3, #7
    2358:	4c25      	ldr	r4, [pc, #148]	; (23f0 <spi_select_slave+0xf0>)
    235a:	46a4      	mov	ip, r4
    235c:	4463      	add	r3, ip
    235e:	241f      	movs	r4, #31
    2360:	4014      	ands	r4, r2
    2362:	2201      	movs	r2, #1
    2364:	40a2      	lsls	r2, r4
    2366:	615a      	str	r2, [r3, #20]
    2368:	6803      	ldr	r3, [r0, #0]
    236a:	7e1a      	ldrb	r2, [r3, #24]
    236c:	07d2      	lsls	r2, r2, #31
    236e:	d501      	bpl.n	2374 <spi_select_slave+0x74>
    2370:	788a      	ldrb	r2, [r1, #2]
    2372:	629a      	str	r2, [r3, #40]	; 0x28
    2374:	79c2      	ldrb	r2, [r0, #7]
    2376:	2300      	movs	r3, #0
    2378:	2a00      	cmp	r2, #0
    237a:	d1c6      	bne.n	230a <spi_select_slave+0xa>
    237c:	6802      	ldr	r2, [r0, #0]
    237e:	2104      	movs	r1, #4
    2380:	7e13      	ldrb	r3, [r2, #24]
    2382:	420b      	tst	r3, r1
    2384:	d0fc      	beq.n	2380 <spi_select_slave+0x80>
    2386:	7e11      	ldrb	r1, [r2, #24]
    2388:	2300      	movs	r3, #0
    238a:	0749      	lsls	r1, r1, #29
    238c:	d5bd      	bpl.n	230a <spi_select_slave+0xa>
    238e:	8b53      	ldrh	r3, [r2, #26]
    2390:	075b      	lsls	r3, r3, #29
    2392:	d501      	bpl.n	2398 <spi_select_slave+0x98>
    2394:	2304      	movs	r3, #4
    2396:	8353      	strh	r3, [r2, #26]
    2398:	7983      	ldrb	r3, [r0, #6]
    239a:	2b01      	cmp	r3, #1
    239c:	d002      	beq.n	23a4 <spi_select_slave+0xa4>
    239e:	6a93      	ldr	r3, [r2, #40]	; 0x28
    23a0:	2300      	movs	r3, #0
    23a2:	e7b2      	b.n	230a <spi_select_slave+0xa>
    23a4:	6a93      	ldr	r3, [r2, #40]	; 0x28
    23a6:	2300      	movs	r3, #0
    23a8:	e7af      	b.n	230a <spi_select_slave+0xa>
    23aa:	780a      	ldrb	r2, [r1, #0]
    23ac:	09d1      	lsrs	r1, r2, #7
    23ae:	2300      	movs	r3, #0
    23b0:	2900      	cmp	r1, #0
    23b2:	d104      	bne.n	23be <spi_select_slave+0xbe>
    23b4:	0953      	lsrs	r3, r2, #5
    23b6:	01db      	lsls	r3, r3, #7
    23b8:	490d      	ldr	r1, [pc, #52]	; (23f0 <spi_select_slave+0xf0>)
    23ba:	468c      	mov	ip, r1
    23bc:	4463      	add	r3, ip
    23be:	211f      	movs	r1, #31
    23c0:	4011      	ands	r1, r2
    23c2:	2201      	movs	r2, #1
    23c4:	408a      	lsls	r2, r1
    23c6:	615a      	str	r2, [r3, #20]
    23c8:	2300      	movs	r3, #0
    23ca:	e79e      	b.n	230a <spi_select_slave+0xa>
    23cc:	780a      	ldrb	r2, [r1, #0]
    23ce:	09d1      	lsrs	r1, r2, #7
    23d0:	2300      	movs	r3, #0
    23d2:	2900      	cmp	r1, #0
    23d4:	d104      	bne.n	23e0 <spi_select_slave+0xe0>
    23d6:	0953      	lsrs	r3, r2, #5
    23d8:	01db      	lsls	r3, r3, #7
    23da:	4905      	ldr	r1, [pc, #20]	; (23f0 <spi_select_slave+0xf0>)
    23dc:	468c      	mov	ip, r1
    23de:	4463      	add	r3, ip
    23e0:	211f      	movs	r1, #31
    23e2:	4011      	ands	r1, r2
    23e4:	2201      	movs	r2, #1
    23e6:	408a      	lsls	r2, r1
    23e8:	619a      	str	r2, [r3, #24]
    23ea:	2300      	movs	r3, #0
    23ec:	e78d      	b.n	230a <spi_select_slave+0xa>
    23ee:	46c0      	nop			; (mov r8, r8)
    23f0:	41004400 	.word	0x41004400

000023f4 <spi_write_buffer_wait>:
    23f4:	b5f0      	push	{r4, r5, r6, r7, lr}
    23f6:	46de      	mov	lr, fp
    23f8:	4657      	mov	r7, sl
    23fa:	464e      	mov	r6, r9
    23fc:	4645      	mov	r5, r8
    23fe:	b5e0      	push	{r5, r6, r7, lr}
    2400:	b083      	sub	sp, #12
    2402:	468a      	mov	sl, r1
    2404:	2338      	movs	r3, #56	; 0x38
    2406:	5cc4      	ldrb	r4, [r0, r3]
    2408:	3b33      	subs	r3, #51	; 0x33
    240a:	2c05      	cmp	r4, #5
    240c:	d002      	beq.n	2414 <spi_write_buffer_wait+0x20>
    240e:	3312      	adds	r3, #18
    2410:	2a00      	cmp	r2, #0
    2412:	d14b      	bne.n	24ac <spi_write_buffer_wait+0xb8>
    2414:	0018      	movs	r0, r3
    2416:	b003      	add	sp, #12
    2418:	bc3c      	pop	{r2, r3, r4, r5}
    241a:	4690      	mov	r8, r2
    241c:	4699      	mov	r9, r3
    241e:	46a2      	mov	sl, r4
    2420:	46ab      	mov	fp, r5
    2422:	bdf0      	pop	{r4, r5, r6, r7, pc}
    2424:	3702      	adds	r7, #2
    2426:	b2bf      	uxth	r7, r7
    2428:	4641      	mov	r1, r8
    242a:	4653      	mov	r3, sl
    242c:	5c59      	ldrb	r1, [r3, r1]
    242e:	0209      	lsls	r1, r1, #8
    2430:	465b      	mov	r3, fp
    2432:	430b      	orrs	r3, r1
    2434:	e018      	b.n	2468 <spi_write_buffer_wait+0x74>
    2436:	7983      	ldrb	r3, [r0, #6]
    2438:	2b01      	cmp	r3, #1
    243a:	d02a      	beq.n	2492 <spi_write_buffer_wait+0x9e>
    243c:	6a93      	ldr	r3, [r2, #40]	; 0x28
    243e:	3e01      	subs	r6, #1
    2440:	b2b6      	uxth	r6, r6
    2442:	4566      	cmp	r6, ip
    2444:	d027      	beq.n	2496 <spi_write_buffer_wait+0xa2>
    2446:	6802      	ldr	r2, [r0, #0]
    2448:	7e13      	ldrb	r3, [r2, #24]
    244a:	4223      	tst	r3, r4
    244c:	d0fc      	beq.n	2448 <spi_write_buffer_wait+0x54>
    244e:	1c7b      	adds	r3, r7, #1
    2450:	b29b      	uxth	r3, r3
    2452:	4698      	mov	r8, r3
    2454:	4653      	mov	r3, sl
    2456:	5ddb      	ldrb	r3, [r3, r7]
    2458:	469b      	mov	fp, r3
    245a:	7981      	ldrb	r1, [r0, #6]
    245c:	2901      	cmp	r1, #1
    245e:	d0e1      	beq.n	2424 <spi_write_buffer_wait+0x30>
    2460:	4669      	mov	r1, sp
    2462:	80cb      	strh	r3, [r1, #6]
    2464:	88cb      	ldrh	r3, [r1, #6]
    2466:	4647      	mov	r7, r8
    2468:	7e11      	ldrb	r1, [r2, #24]
    246a:	4221      	tst	r1, r4
    246c:	d002      	beq.n	2474 <spi_write_buffer_wait+0x80>
    246e:	05db      	lsls	r3, r3, #23
    2470:	0ddb      	lsrs	r3, r3, #23
    2472:	6293      	str	r3, [r2, #40]	; 0x28
    2474:	79c3      	ldrb	r3, [r0, #7]
    2476:	2b00      	cmp	r3, #0
    2478:	d0e1      	beq.n	243e <spi_write_buffer_wait+0x4a>
    247a:	6802      	ldr	r2, [r0, #0]
    247c:	7e13      	ldrb	r3, [r2, #24]
    247e:	422b      	tst	r3, r5
    2480:	d0fc      	beq.n	247c <spi_write_buffer_wait+0x88>
    2482:	7e13      	ldrb	r3, [r2, #24]
    2484:	422b      	tst	r3, r5
    2486:	d0da      	beq.n	243e <spi_write_buffer_wait+0x4a>
    2488:	8b53      	ldrh	r3, [r2, #26]
    248a:	422b      	tst	r3, r5
    248c:	d0d3      	beq.n	2436 <spi_write_buffer_wait+0x42>
    248e:	8355      	strh	r5, [r2, #26]
    2490:	e7d1      	b.n	2436 <spi_write_buffer_wait+0x42>
    2492:	6a93      	ldr	r3, [r2, #40]	; 0x28
    2494:	e7d3      	b.n	243e <spi_write_buffer_wait+0x4a>
    2496:	7942      	ldrb	r2, [r0, #5]
    2498:	2300      	movs	r3, #0
    249a:	2a01      	cmp	r2, #1
    249c:	d1ba      	bne.n	2414 <spi_write_buffer_wait+0x20>
    249e:	6801      	ldr	r1, [r0, #0]
    24a0:	3201      	adds	r2, #1
    24a2:	7e0b      	ldrb	r3, [r1, #24]
    24a4:	4213      	tst	r3, r2
    24a6:	d0fc      	beq.n	24a2 <spi_write_buffer_wait+0xae>
    24a8:	2300      	movs	r3, #0
    24aa:	e7b3      	b.n	2414 <spi_write_buffer_wait+0x20>
    24ac:	3a01      	subs	r2, #1
    24ae:	b296      	uxth	r6, r2
    24b0:	2700      	movs	r7, #0
    24b2:	2401      	movs	r4, #1
    24b4:	2504      	movs	r5, #4
    24b6:	4b01      	ldr	r3, [pc, #4]	; (24bc <spi_write_buffer_wait+0xc8>)
    24b8:	469c      	mov	ip, r3
    24ba:	e7c4      	b.n	2446 <spi_write_buffer_wait+0x52>
    24bc:	0000ffff 	.word	0x0000ffff

000024c0 <_spi_interrupt_handler>:
    24c0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    24c2:	0080      	lsls	r0, r0, #2
    24c4:	4b70      	ldr	r3, [pc, #448]	; (2688 <_spi_interrupt_handler+0x1c8>)
    24c6:	58c4      	ldr	r4, [r0, r3]
    24c8:	6826      	ldr	r6, [r4, #0]
    24ca:	2337      	movs	r3, #55	; 0x37
    24cc:	5ce7      	ldrb	r7, [r4, r3]
    24ce:	2236      	movs	r2, #54	; 0x36
    24d0:	5ca2      	ldrb	r2, [r4, r2]
    24d2:	4017      	ands	r7, r2
    24d4:	7e33      	ldrb	r3, [r6, #24]
    24d6:	7db5      	ldrb	r5, [r6, #22]
    24d8:	401d      	ands	r5, r3
    24da:	07eb      	lsls	r3, r5, #31
    24dc:	d502      	bpl.n	24e4 <_spi_interrupt_handler+0x24>
    24de:	7963      	ldrb	r3, [r4, #5]
    24e0:	2b01      	cmp	r3, #1
    24e2:	d01e      	beq.n	2522 <_spi_interrupt_handler+0x62>
    24e4:	076b      	lsls	r3, r5, #29
    24e6:	d511      	bpl.n	250c <_spi_interrupt_handler+0x4c>
    24e8:	8b73      	ldrh	r3, [r6, #26]
    24ea:	075b      	lsls	r3, r3, #29
    24ec:	d55a      	bpl.n	25a4 <_spi_interrupt_handler+0xe4>
    24ee:	7a63      	ldrb	r3, [r4, #9]
    24f0:	2b01      	cmp	r3, #1
    24f2:	d008      	beq.n	2506 <_spi_interrupt_handler+0x46>
    24f4:	221e      	movs	r2, #30
    24f6:	2338      	movs	r3, #56	; 0x38
    24f8:	54e2      	strb	r2, [r4, r3]
    24fa:	3b35      	subs	r3, #53	; 0x35
    24fc:	7263      	strb	r3, [r4, #9]
    24fe:	3302      	adds	r3, #2
    2500:	7533      	strb	r3, [r6, #20]
    2502:	073b      	lsls	r3, r7, #28
    2504:	d44a      	bmi.n	259c <_spi_interrupt_handler+0xdc>
    2506:	6ab3      	ldr	r3, [r6, #40]	; 0x28
    2508:	2304      	movs	r3, #4
    250a:	8373      	strh	r3, [r6, #26]
    250c:	07ab      	lsls	r3, r5, #30
    250e:	d503      	bpl.n	2518 <_spi_interrupt_handler+0x58>
    2510:	7963      	ldrb	r3, [r4, #5]
    2512:	2b01      	cmp	r3, #1
    2514:	d100      	bne.n	2518 <_spi_interrupt_handler+0x58>
    2516:	e097      	b.n	2648 <_spi_interrupt_handler+0x188>
    2518:	b26d      	sxtb	r5, r5
    251a:	2d00      	cmp	r5, #0
    251c:	da00      	bge.n	2520 <_spi_interrupt_handler+0x60>
    251e:	e0a9      	b.n	2674 <_spi_interrupt_handler+0x1b4>
    2520:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    2522:	7a63      	ldrb	r3, [r4, #9]
    2524:	2b00      	cmp	r3, #0
    2526:	d022      	beq.n	256e <_spi_interrupt_handler+0xae>
    2528:	7a63      	ldrb	r3, [r4, #9]
    252a:	2b00      	cmp	r3, #0
    252c:	d0da      	beq.n	24e4 <_spi_interrupt_handler+0x24>
    252e:	6821      	ldr	r1, [r4, #0]
    2530:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
    2532:	7813      	ldrb	r3, [r2, #0]
    2534:	b2db      	uxtb	r3, r3
    2536:	1c50      	adds	r0, r2, #1
    2538:	62e0      	str	r0, [r4, #44]	; 0x2c
    253a:	79a0      	ldrb	r0, [r4, #6]
    253c:	2801      	cmp	r0, #1
    253e:	d027      	beq.n	2590 <_spi_interrupt_handler+0xd0>
    2540:	b29b      	uxth	r3, r3
    2542:	05db      	lsls	r3, r3, #23
    2544:	0ddb      	lsrs	r3, r3, #23
    2546:	628b      	str	r3, [r1, #40]	; 0x28
    2548:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
    254a:	3b01      	subs	r3, #1
    254c:	b29b      	uxth	r3, r3
    254e:	86a3      	strh	r3, [r4, #52]	; 0x34
    2550:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
    2552:	b29b      	uxth	r3, r3
    2554:	2b00      	cmp	r3, #0
    2556:	d1c5      	bne.n	24e4 <_spi_interrupt_handler+0x24>
    2558:	3301      	adds	r3, #1
    255a:	7533      	strb	r3, [r6, #20]
    255c:	7a63      	ldrb	r3, [r4, #9]
    255e:	2b01      	cmp	r3, #1
    2560:	d1c0      	bne.n	24e4 <_spi_interrupt_handler+0x24>
    2562:	79e3      	ldrb	r3, [r4, #7]
    2564:	2b00      	cmp	r3, #0
    2566:	d1bd      	bne.n	24e4 <_spi_interrupt_handler+0x24>
    2568:	3302      	adds	r3, #2
    256a:	75b3      	strb	r3, [r6, #22]
    256c:	e7ba      	b.n	24e4 <_spi_interrupt_handler+0x24>
    256e:	4b47      	ldr	r3, [pc, #284]	; (268c <_spi_interrupt_handler+0x1cc>)
    2570:	881b      	ldrh	r3, [r3, #0]
    2572:	62b3      	str	r3, [r6, #40]	; 0x28
    2574:	8e63      	ldrh	r3, [r4, #50]	; 0x32
    2576:	3b01      	subs	r3, #1
    2578:	b29b      	uxth	r3, r3
    257a:	8663      	strh	r3, [r4, #50]	; 0x32
    257c:	8e63      	ldrh	r3, [r4, #50]	; 0x32
    257e:	b29b      	uxth	r3, r3
    2580:	2b00      	cmp	r3, #0
    2582:	d101      	bne.n	2588 <_spi_interrupt_handler+0xc8>
    2584:	3301      	adds	r3, #1
    2586:	7533      	strb	r3, [r6, #20]
    2588:	7963      	ldrb	r3, [r4, #5]
    258a:	2b01      	cmp	r3, #1
    258c:	d0cc      	beq.n	2528 <_spi_interrupt_handler+0x68>
    258e:	e7a9      	b.n	24e4 <_spi_interrupt_handler+0x24>
    2590:	7850      	ldrb	r0, [r2, #1]
    2592:	0200      	lsls	r0, r0, #8
    2594:	4303      	orrs	r3, r0
    2596:	3202      	adds	r2, #2
    2598:	62e2      	str	r2, [r4, #44]	; 0x2c
    259a:	e7d2      	b.n	2542 <_spi_interrupt_handler+0x82>
    259c:	0020      	movs	r0, r4
    259e:	69a3      	ldr	r3, [r4, #24]
    25a0:	4798      	blx	r3
    25a2:	e7b0      	b.n	2506 <_spi_interrupt_handler+0x46>
    25a4:	7a63      	ldrb	r3, [r4, #9]
    25a6:	2b01      	cmp	r3, #1
    25a8:	d028      	beq.n	25fc <_spi_interrupt_handler+0x13c>
    25aa:	6823      	ldr	r3, [r4, #0]
    25ac:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    25ae:	05db      	lsls	r3, r3, #23
    25b0:	0ddb      	lsrs	r3, r3, #23
    25b2:	b2da      	uxtb	r2, r3
    25b4:	6aa1      	ldr	r1, [r4, #40]	; 0x28
    25b6:	700a      	strb	r2, [r1, #0]
    25b8:	6aa2      	ldr	r2, [r4, #40]	; 0x28
    25ba:	1c51      	adds	r1, r2, #1
    25bc:	62a1      	str	r1, [r4, #40]	; 0x28
    25be:	79a1      	ldrb	r1, [r4, #6]
    25c0:	2901      	cmp	r1, #1
    25c2:	d034      	beq.n	262e <_spi_interrupt_handler+0x16e>
    25c4:	8e23      	ldrh	r3, [r4, #48]	; 0x30
    25c6:	3b01      	subs	r3, #1
    25c8:	b29b      	uxth	r3, r3
    25ca:	8623      	strh	r3, [r4, #48]	; 0x30
    25cc:	8e23      	ldrh	r3, [r4, #48]	; 0x30
    25ce:	b29b      	uxth	r3, r3
    25d0:	2b00      	cmp	r3, #0
    25d2:	d000      	beq.n	25d6 <_spi_interrupt_handler+0x116>
    25d4:	e79a      	b.n	250c <_spi_interrupt_handler+0x4c>
    25d6:	2200      	movs	r2, #0
    25d8:	3338      	adds	r3, #56	; 0x38
    25da:	54e2      	strb	r2, [r4, r3]
    25dc:	3b34      	subs	r3, #52	; 0x34
    25de:	7533      	strb	r3, [r6, #20]
    25e0:	7a63      	ldrb	r3, [r4, #9]
    25e2:	2b02      	cmp	r3, #2
    25e4:	d029      	beq.n	263a <_spi_interrupt_handler+0x17a>
    25e6:	7a63      	ldrb	r3, [r4, #9]
    25e8:	2b00      	cmp	r3, #0
    25ea:	d000      	beq.n	25ee <_spi_interrupt_handler+0x12e>
    25ec:	e78e      	b.n	250c <_spi_interrupt_handler+0x4c>
    25ee:	07bb      	lsls	r3, r7, #30
    25f0:	d400      	bmi.n	25f4 <_spi_interrupt_handler+0x134>
    25f2:	e78b      	b.n	250c <_spi_interrupt_handler+0x4c>
    25f4:	0020      	movs	r0, r4
    25f6:	6923      	ldr	r3, [r4, #16]
    25f8:	4798      	blx	r3
    25fa:	e787      	b.n	250c <_spi_interrupt_handler+0x4c>
    25fc:	6823      	ldr	r3, [r4, #0]
    25fe:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    2600:	8e63      	ldrh	r3, [r4, #50]	; 0x32
    2602:	3b01      	subs	r3, #1
    2604:	b29b      	uxth	r3, r3
    2606:	8663      	strh	r3, [r4, #50]	; 0x32
    2608:	8e63      	ldrh	r3, [r4, #50]	; 0x32
    260a:	b29b      	uxth	r3, r3
    260c:	2b00      	cmp	r3, #0
    260e:	d000      	beq.n	2612 <_spi_interrupt_handler+0x152>
    2610:	e77c      	b.n	250c <_spi_interrupt_handler+0x4c>
    2612:	3304      	adds	r3, #4
    2614:	7533      	strb	r3, [r6, #20]
    2616:	2200      	movs	r2, #0
    2618:	3334      	adds	r3, #52	; 0x34
    261a:	54e2      	strb	r2, [r4, r3]
    261c:	3b35      	subs	r3, #53	; 0x35
    261e:	7263      	strb	r3, [r4, #9]
    2620:	07fb      	lsls	r3, r7, #31
    2622:	d400      	bmi.n	2626 <_spi_interrupt_handler+0x166>
    2624:	e772      	b.n	250c <_spi_interrupt_handler+0x4c>
    2626:	0020      	movs	r0, r4
    2628:	68e3      	ldr	r3, [r4, #12]
    262a:	4798      	blx	r3
    262c:	e76e      	b.n	250c <_spi_interrupt_handler+0x4c>
    262e:	0a1b      	lsrs	r3, r3, #8
    2630:	7053      	strb	r3, [r2, #1]
    2632:	6aa3      	ldr	r3, [r4, #40]	; 0x28
    2634:	3301      	adds	r3, #1
    2636:	62a3      	str	r3, [r4, #40]	; 0x28
    2638:	e7c4      	b.n	25c4 <_spi_interrupt_handler+0x104>
    263a:	077b      	lsls	r3, r7, #29
    263c:	d400      	bmi.n	2640 <_spi_interrupt_handler+0x180>
    263e:	e765      	b.n	250c <_spi_interrupt_handler+0x4c>
    2640:	0020      	movs	r0, r4
    2642:	6963      	ldr	r3, [r4, #20]
    2644:	4798      	blx	r3
    2646:	e761      	b.n	250c <_spi_interrupt_handler+0x4c>
    2648:	7a63      	ldrb	r3, [r4, #9]
    264a:	2b01      	cmp	r3, #1
    264c:	d000      	beq.n	2650 <_spi_interrupt_handler+0x190>
    264e:	e763      	b.n	2518 <_spi_interrupt_handler+0x58>
    2650:	79e3      	ldrb	r3, [r4, #7]
    2652:	2b00      	cmp	r3, #0
    2654:	d000      	beq.n	2658 <_spi_interrupt_handler+0x198>
    2656:	e75f      	b.n	2518 <_spi_interrupt_handler+0x58>
    2658:	3302      	adds	r3, #2
    265a:	7533      	strb	r3, [r6, #20]
    265c:	3301      	adds	r3, #1
    265e:	7263      	strb	r3, [r4, #9]
    2660:	2200      	movs	r2, #0
    2662:	3335      	adds	r3, #53	; 0x35
    2664:	54e2      	strb	r2, [r4, r3]
    2666:	07fb      	lsls	r3, r7, #31
    2668:	d400      	bmi.n	266c <_spi_interrupt_handler+0x1ac>
    266a:	e755      	b.n	2518 <_spi_interrupt_handler+0x58>
    266c:	0020      	movs	r0, r4
    266e:	68e3      	ldr	r3, [r4, #12]
    2670:	4798      	blx	r3
    2672:	e751      	b.n	2518 <_spi_interrupt_handler+0x58>
    2674:	2380      	movs	r3, #128	; 0x80
    2676:	7533      	strb	r3, [r6, #20]
    2678:	7633      	strb	r3, [r6, #24]
    267a:	067b      	lsls	r3, r7, #25
    267c:	d400      	bmi.n	2680 <_spi_interrupt_handler+0x1c0>
    267e:	e74f      	b.n	2520 <_spi_interrupt_handler+0x60>
    2680:	6a63      	ldr	r3, [r4, #36]	; 0x24
    2682:	0020      	movs	r0, r4
    2684:	4798      	blx	r3
    2686:	e74b      	b.n	2520 <_spi_interrupt_handler+0x60>
    2688:	200005ec 	.word	0x200005ec
    268c:	20000604 	.word	0x20000604

00002690 <usart_init>:
    2690:	b5f0      	push	{r4, r5, r6, r7, lr}
    2692:	46de      	mov	lr, fp
    2694:	4657      	mov	r7, sl
    2696:	464e      	mov	r6, r9
    2698:	4645      	mov	r5, r8
    269a:	b5e0      	push	{r5, r6, r7, lr}
    269c:	b091      	sub	sp, #68	; 0x44
    269e:	0005      	movs	r5, r0
    26a0:	000c      	movs	r4, r1
    26a2:	0016      	movs	r6, r2
    26a4:	6029      	str	r1, [r5, #0]
    26a6:	0008      	movs	r0, r1
    26a8:	4bbc      	ldr	r3, [pc, #752]	; (299c <usart_init+0x30c>)
    26aa:	4798      	blx	r3
    26ac:	0002      	movs	r2, r0
    26ae:	6823      	ldr	r3, [r4, #0]
    26b0:	2005      	movs	r0, #5
    26b2:	07db      	lsls	r3, r3, #31
    26b4:	d506      	bpl.n	26c4 <usart_init+0x34>
    26b6:	b011      	add	sp, #68	; 0x44
    26b8:	bc3c      	pop	{r2, r3, r4, r5}
    26ba:	4690      	mov	r8, r2
    26bc:	4699      	mov	r9, r3
    26be:	46a2      	mov	sl, r4
    26c0:	46ab      	mov	fp, r5
    26c2:	bdf0      	pop	{r4, r5, r6, r7, pc}
    26c4:	6823      	ldr	r3, [r4, #0]
    26c6:	3017      	adds	r0, #23
    26c8:	079b      	lsls	r3, r3, #30
    26ca:	d4f4      	bmi.n	26b6 <usart_init+0x26>
    26cc:	49b4      	ldr	r1, [pc, #720]	; (29a0 <usart_init+0x310>)
    26ce:	6a08      	ldr	r0, [r1, #32]
    26d0:	1c97      	adds	r7, r2, #2
    26d2:	2301      	movs	r3, #1
    26d4:	40bb      	lsls	r3, r7
    26d6:	4303      	orrs	r3, r0
    26d8:	620b      	str	r3, [r1, #32]
    26da:	a90f      	add	r1, sp, #60	; 0x3c
    26dc:	272d      	movs	r7, #45	; 0x2d
    26de:	5df3      	ldrb	r3, [r6, r7]
    26e0:	700b      	strb	r3, [r1, #0]
    26e2:	3214      	adds	r2, #20
    26e4:	b2d3      	uxtb	r3, r2
    26e6:	9302      	str	r3, [sp, #8]
    26e8:	0018      	movs	r0, r3
    26ea:	4bae      	ldr	r3, [pc, #696]	; (29a4 <usart_init+0x314>)
    26ec:	4798      	blx	r3
    26ee:	9802      	ldr	r0, [sp, #8]
    26f0:	4bad      	ldr	r3, [pc, #692]	; (29a8 <usart_init+0x318>)
    26f2:	4798      	blx	r3
    26f4:	5df0      	ldrb	r0, [r6, r7]
    26f6:	2100      	movs	r1, #0
    26f8:	4bac      	ldr	r3, [pc, #688]	; (29ac <usart_init+0x31c>)
    26fa:	4798      	blx	r3
    26fc:	7af3      	ldrb	r3, [r6, #11]
    26fe:	716b      	strb	r3, [r5, #5]
    2700:	2324      	movs	r3, #36	; 0x24
    2702:	5cf3      	ldrb	r3, [r6, r3]
    2704:	71ab      	strb	r3, [r5, #6]
    2706:	2325      	movs	r3, #37	; 0x25
    2708:	5cf3      	ldrb	r3, [r6, r3]
    270a:	71eb      	strb	r3, [r5, #7]
    270c:	7ef3      	ldrb	r3, [r6, #27]
    270e:	722b      	strb	r3, [r5, #8]
    2710:	7f33      	ldrb	r3, [r6, #28]
    2712:	726b      	strb	r3, [r5, #9]
    2714:	682b      	ldr	r3, [r5, #0]
    2716:	4698      	mov	r8, r3
    2718:	0018      	movs	r0, r3
    271a:	4ba0      	ldr	r3, [pc, #640]	; (299c <usart_init+0x30c>)
    271c:	4798      	blx	r3
    271e:	3014      	adds	r0, #20
    2720:	2200      	movs	r2, #0
    2722:	230e      	movs	r3, #14
    2724:	a906      	add	r1, sp, #24
    2726:	468c      	mov	ip, r1
    2728:	4463      	add	r3, ip
    272a:	801a      	strh	r2, [r3, #0]
    272c:	8a32      	ldrh	r2, [r6, #16]
    272e:	9202      	str	r2, [sp, #8]
    2730:	2380      	movs	r3, #128	; 0x80
    2732:	01db      	lsls	r3, r3, #7
    2734:	429a      	cmp	r2, r3
    2736:	d100      	bne.n	273a <usart_init+0xaa>
    2738:	e09e      	b.n	2878 <usart_init+0x1e8>
    273a:	d90f      	bls.n	275c <usart_init+0xcc>
    273c:	23c0      	movs	r3, #192	; 0xc0
    273e:	01db      	lsls	r3, r3, #7
    2740:	9a02      	ldr	r2, [sp, #8]
    2742:	429a      	cmp	r2, r3
    2744:	d100      	bne.n	2748 <usart_init+0xb8>
    2746:	e092      	b.n	286e <usart_init+0x1de>
    2748:	2380      	movs	r3, #128	; 0x80
    274a:	021b      	lsls	r3, r3, #8
    274c:	429a      	cmp	r2, r3
    274e:	d000      	beq.n	2752 <usart_init+0xc2>
    2750:	e11f      	b.n	2992 <usart_init+0x302>
    2752:	2303      	movs	r3, #3
    2754:	9306      	str	r3, [sp, #24]
    2756:	2300      	movs	r3, #0
    2758:	9307      	str	r3, [sp, #28]
    275a:	e008      	b.n	276e <usart_init+0xde>
    275c:	2380      	movs	r3, #128	; 0x80
    275e:	019b      	lsls	r3, r3, #6
    2760:	429a      	cmp	r2, r3
    2762:	d000      	beq.n	2766 <usart_init+0xd6>
    2764:	e115      	b.n	2992 <usart_init+0x302>
    2766:	2310      	movs	r3, #16
    2768:	9306      	str	r3, [sp, #24]
    276a:	3b0f      	subs	r3, #15
    276c:	9307      	str	r3, [sp, #28]
    276e:	6833      	ldr	r3, [r6, #0]
    2770:	9305      	str	r3, [sp, #20]
    2772:	68f3      	ldr	r3, [r6, #12]
    2774:	9303      	str	r3, [sp, #12]
    2776:	6973      	ldr	r3, [r6, #20]
    2778:	9304      	str	r3, [sp, #16]
    277a:	7e33      	ldrb	r3, [r6, #24]
    277c:	469b      	mov	fp, r3
    277e:	2326      	movs	r3, #38	; 0x26
    2780:	5cf3      	ldrb	r3, [r6, r3]
    2782:	469a      	mov	sl, r3
    2784:	6873      	ldr	r3, [r6, #4]
    2786:	4699      	mov	r9, r3
    2788:	2b00      	cmp	r3, #0
    278a:	d100      	bne.n	278e <usart_init+0xfe>
    278c:	e0a0      	b.n	28d0 <usart_init+0x240>
    278e:	2380      	movs	r3, #128	; 0x80
    2790:	055b      	lsls	r3, r3, #21
    2792:	4599      	cmp	r9, r3
    2794:	d100      	bne.n	2798 <usart_init+0x108>
    2796:	e084      	b.n	28a2 <usart_init+0x212>
    2798:	7e73      	ldrb	r3, [r6, #25]
    279a:	2b00      	cmp	r3, #0
    279c:	d002      	beq.n	27a4 <usart_init+0x114>
    279e:	7eb3      	ldrb	r3, [r6, #26]
    27a0:	4642      	mov	r2, r8
    27a2:	7393      	strb	r3, [r2, #14]
    27a4:	682a      	ldr	r2, [r5, #0]
    27a6:	9f02      	ldr	r7, [sp, #8]
    27a8:	69d3      	ldr	r3, [r2, #28]
    27aa:	2b00      	cmp	r3, #0
    27ac:	d1fc      	bne.n	27a8 <usart_init+0x118>
    27ae:	330e      	adds	r3, #14
    27b0:	aa06      	add	r2, sp, #24
    27b2:	4694      	mov	ip, r2
    27b4:	4463      	add	r3, ip
    27b6:	881b      	ldrh	r3, [r3, #0]
    27b8:	4642      	mov	r2, r8
    27ba:	8193      	strh	r3, [r2, #12]
    27bc:	9b05      	ldr	r3, [sp, #20]
    27be:	9a03      	ldr	r2, [sp, #12]
    27c0:	4313      	orrs	r3, r2
    27c2:	9a04      	ldr	r2, [sp, #16]
    27c4:	4313      	orrs	r3, r2
    27c6:	464a      	mov	r2, r9
    27c8:	4313      	orrs	r3, r2
    27ca:	431f      	orrs	r7, r3
    27cc:	465b      	mov	r3, fp
    27ce:	021b      	lsls	r3, r3, #8
    27d0:	431f      	orrs	r7, r3
    27d2:	4653      	mov	r3, sl
    27d4:	075b      	lsls	r3, r3, #29
    27d6:	431f      	orrs	r7, r3
    27d8:	2327      	movs	r3, #39	; 0x27
    27da:	5cf3      	ldrb	r3, [r6, r3]
    27dc:	2b00      	cmp	r3, #0
    27de:	d101      	bne.n	27e4 <usart_init+0x154>
    27e0:	3304      	adds	r3, #4
    27e2:	431f      	orrs	r7, r3
    27e4:	7e73      	ldrb	r3, [r6, #25]
    27e6:	029b      	lsls	r3, r3, #10
    27e8:	7f32      	ldrb	r2, [r6, #28]
    27ea:	0252      	lsls	r2, r2, #9
    27ec:	4313      	orrs	r3, r2
    27ee:	7f72      	ldrb	r2, [r6, #29]
    27f0:	0212      	lsls	r2, r2, #8
    27f2:	4313      	orrs	r3, r2
    27f4:	2224      	movs	r2, #36	; 0x24
    27f6:	5cb2      	ldrb	r2, [r6, r2]
    27f8:	0452      	lsls	r2, r2, #17
    27fa:	4313      	orrs	r3, r2
    27fc:	2225      	movs	r2, #37	; 0x25
    27fe:	5cb2      	ldrb	r2, [r6, r2]
    2800:	0412      	lsls	r2, r2, #16
    2802:	4313      	orrs	r3, r2
    2804:	7ab1      	ldrb	r1, [r6, #10]
    2806:	7af2      	ldrb	r2, [r6, #11]
    2808:	4311      	orrs	r1, r2
    280a:	4319      	orrs	r1, r3
    280c:	8933      	ldrh	r3, [r6, #8]
    280e:	2bff      	cmp	r3, #255	; 0xff
    2810:	d100      	bne.n	2814 <usart_init+0x184>
    2812:	e081      	b.n	2918 <usart_init+0x288>
    2814:	2280      	movs	r2, #128	; 0x80
    2816:	0452      	lsls	r2, r2, #17
    2818:	4317      	orrs	r7, r2
    281a:	4319      	orrs	r1, r3
    281c:	232c      	movs	r3, #44	; 0x2c
    281e:	5cf3      	ldrb	r3, [r6, r3]
    2820:	2b00      	cmp	r3, #0
    2822:	d103      	bne.n	282c <usart_init+0x19c>
    2824:	4b62      	ldr	r3, [pc, #392]	; (29b0 <usart_init+0x320>)
    2826:	789b      	ldrb	r3, [r3, #2]
    2828:	079b      	lsls	r3, r3, #30
    282a:	d501      	bpl.n	2830 <usart_init+0x1a0>
    282c:	2380      	movs	r3, #128	; 0x80
    282e:	431f      	orrs	r7, r3
    2830:	682a      	ldr	r2, [r5, #0]
    2832:	69d3      	ldr	r3, [r2, #28]
    2834:	2b00      	cmp	r3, #0
    2836:	d1fc      	bne.n	2832 <usart_init+0x1a2>
    2838:	4643      	mov	r3, r8
    283a:	6059      	str	r1, [r3, #4]
    283c:	682a      	ldr	r2, [r5, #0]
    283e:	69d3      	ldr	r3, [r2, #28]
    2840:	2b00      	cmp	r3, #0
    2842:	d1fc      	bne.n	283e <usart_init+0x1ae>
    2844:	4643      	mov	r3, r8
    2846:	601f      	str	r7, [r3, #0]
    2848:	ab0e      	add	r3, sp, #56	; 0x38
    284a:	2280      	movs	r2, #128	; 0x80
    284c:	701a      	strb	r2, [r3, #0]
    284e:	2200      	movs	r2, #0
    2850:	705a      	strb	r2, [r3, #1]
    2852:	70da      	strb	r2, [r3, #3]
    2854:	709a      	strb	r2, [r3, #2]
    2856:	6b33      	ldr	r3, [r6, #48]	; 0x30
    2858:	930a      	str	r3, [sp, #40]	; 0x28
    285a:	6b73      	ldr	r3, [r6, #52]	; 0x34
    285c:	930b      	str	r3, [sp, #44]	; 0x2c
    285e:	6bb3      	ldr	r3, [r6, #56]	; 0x38
    2860:	930c      	str	r3, [sp, #48]	; 0x30
    2862:	6bf3      	ldr	r3, [r6, #60]	; 0x3c
    2864:	9302      	str	r3, [sp, #8]
    2866:	930d      	str	r3, [sp, #52]	; 0x34
    2868:	2700      	movs	r7, #0
    286a:	ae0a      	add	r6, sp, #40	; 0x28
    286c:	e063      	b.n	2936 <usart_init+0x2a6>
    286e:	2308      	movs	r3, #8
    2870:	9306      	str	r3, [sp, #24]
    2872:	3b07      	subs	r3, #7
    2874:	9307      	str	r3, [sp, #28]
    2876:	e77a      	b.n	276e <usart_init+0xde>
    2878:	6833      	ldr	r3, [r6, #0]
    287a:	9305      	str	r3, [sp, #20]
    287c:	68f3      	ldr	r3, [r6, #12]
    287e:	9303      	str	r3, [sp, #12]
    2880:	6973      	ldr	r3, [r6, #20]
    2882:	9304      	str	r3, [sp, #16]
    2884:	7e33      	ldrb	r3, [r6, #24]
    2886:	469b      	mov	fp, r3
    2888:	2326      	movs	r3, #38	; 0x26
    288a:	5cf3      	ldrb	r3, [r6, r3]
    288c:	469a      	mov	sl, r3
    288e:	6873      	ldr	r3, [r6, #4]
    2890:	4699      	mov	r9, r3
    2892:	2b00      	cmp	r3, #0
    2894:	d018      	beq.n	28c8 <usart_init+0x238>
    2896:	2380      	movs	r3, #128	; 0x80
    2898:	055b      	lsls	r3, r3, #21
    289a:	4599      	cmp	r9, r3
    289c:	d001      	beq.n	28a2 <usart_init+0x212>
    289e:	2000      	movs	r0, #0
    28a0:	e025      	b.n	28ee <usart_init+0x25e>
    28a2:	2327      	movs	r3, #39	; 0x27
    28a4:	5cf3      	ldrb	r3, [r6, r3]
    28a6:	2b00      	cmp	r3, #0
    28a8:	d000      	beq.n	28ac <usart_init+0x21c>
    28aa:	e775      	b.n	2798 <usart_init+0x108>
    28ac:	6a33      	ldr	r3, [r6, #32]
    28ae:	001f      	movs	r7, r3
    28b0:	b2c0      	uxtb	r0, r0
    28b2:	4b40      	ldr	r3, [pc, #256]	; (29b4 <usart_init+0x324>)
    28b4:	4798      	blx	r3
    28b6:	0001      	movs	r1, r0
    28b8:	220e      	movs	r2, #14
    28ba:	ab06      	add	r3, sp, #24
    28bc:	469c      	mov	ip, r3
    28be:	4462      	add	r2, ip
    28c0:	0038      	movs	r0, r7
    28c2:	4b3d      	ldr	r3, [pc, #244]	; (29b8 <usart_init+0x328>)
    28c4:	4798      	blx	r3
    28c6:	e012      	b.n	28ee <usart_init+0x25e>
    28c8:	2308      	movs	r3, #8
    28ca:	9306      	str	r3, [sp, #24]
    28cc:	2300      	movs	r3, #0
    28ce:	9307      	str	r3, [sp, #28]
    28d0:	2327      	movs	r3, #39	; 0x27
    28d2:	5cf3      	ldrb	r3, [r6, r3]
    28d4:	2b00      	cmp	r3, #0
    28d6:	d00e      	beq.n	28f6 <usart_init+0x266>
    28d8:	9b06      	ldr	r3, [sp, #24]
    28da:	9300      	str	r3, [sp, #0]
    28dc:	9b07      	ldr	r3, [sp, #28]
    28de:	220e      	movs	r2, #14
    28e0:	a906      	add	r1, sp, #24
    28e2:	468c      	mov	ip, r1
    28e4:	4462      	add	r2, ip
    28e6:	6ab1      	ldr	r1, [r6, #40]	; 0x28
    28e8:	6a30      	ldr	r0, [r6, #32]
    28ea:	4f34      	ldr	r7, [pc, #208]	; (29bc <usart_init+0x32c>)
    28ec:	47b8      	blx	r7
    28ee:	2800      	cmp	r0, #0
    28f0:	d000      	beq.n	28f4 <usart_init+0x264>
    28f2:	e6e0      	b.n	26b6 <usart_init+0x26>
    28f4:	e750      	b.n	2798 <usart_init+0x108>
    28f6:	6a33      	ldr	r3, [r6, #32]
    28f8:	001f      	movs	r7, r3
    28fa:	b2c0      	uxtb	r0, r0
    28fc:	4b2d      	ldr	r3, [pc, #180]	; (29b4 <usart_init+0x324>)
    28fe:	4798      	blx	r3
    2900:	0001      	movs	r1, r0
    2902:	9b06      	ldr	r3, [sp, #24]
    2904:	9300      	str	r3, [sp, #0]
    2906:	9b07      	ldr	r3, [sp, #28]
    2908:	220e      	movs	r2, #14
    290a:	a806      	add	r0, sp, #24
    290c:	4684      	mov	ip, r0
    290e:	4462      	add	r2, ip
    2910:	0038      	movs	r0, r7
    2912:	4f2a      	ldr	r7, [pc, #168]	; (29bc <usart_init+0x32c>)
    2914:	47b8      	blx	r7
    2916:	e7ea      	b.n	28ee <usart_init+0x25e>
    2918:	7ef3      	ldrb	r3, [r6, #27]
    291a:	2b00      	cmp	r3, #0
    291c:	d100      	bne.n	2920 <usart_init+0x290>
    291e:	e77d      	b.n	281c <usart_init+0x18c>
    2920:	2380      	movs	r3, #128	; 0x80
    2922:	04db      	lsls	r3, r3, #19
    2924:	431f      	orrs	r7, r3
    2926:	e779      	b.n	281c <usart_init+0x18c>
    2928:	0020      	movs	r0, r4
    292a:	4b25      	ldr	r3, [pc, #148]	; (29c0 <usart_init+0x330>)
    292c:	4798      	blx	r3
    292e:	e007      	b.n	2940 <usart_init+0x2b0>
    2930:	3701      	adds	r7, #1
    2932:	2f04      	cmp	r7, #4
    2934:	d00d      	beq.n	2952 <usart_init+0x2c2>
    2936:	b2f9      	uxtb	r1, r7
    2938:	00bb      	lsls	r3, r7, #2
    293a:	5998      	ldr	r0, [r3, r6]
    293c:	2800      	cmp	r0, #0
    293e:	d0f3      	beq.n	2928 <usart_init+0x298>
    2940:	1c43      	adds	r3, r0, #1
    2942:	d0f5      	beq.n	2930 <usart_init+0x2a0>
    2944:	a90e      	add	r1, sp, #56	; 0x38
    2946:	7008      	strb	r0, [r1, #0]
    2948:	0c00      	lsrs	r0, r0, #16
    294a:	b2c0      	uxtb	r0, r0
    294c:	4b1d      	ldr	r3, [pc, #116]	; (29c4 <usart_init+0x334>)
    294e:	4798      	blx	r3
    2950:	e7ee      	b.n	2930 <usart_init+0x2a0>
    2952:	2300      	movs	r3, #0
    2954:	60eb      	str	r3, [r5, #12]
    2956:	612b      	str	r3, [r5, #16]
    2958:	616b      	str	r3, [r5, #20]
    295a:	61ab      	str	r3, [r5, #24]
    295c:	61eb      	str	r3, [r5, #28]
    295e:	622b      	str	r3, [r5, #32]
    2960:	62ab      	str	r3, [r5, #40]	; 0x28
    2962:	626b      	str	r3, [r5, #36]	; 0x24
    2964:	2200      	movs	r2, #0
    2966:	85eb      	strh	r3, [r5, #46]	; 0x2e
    2968:	85ab      	strh	r3, [r5, #44]	; 0x2c
    296a:	3330      	adds	r3, #48	; 0x30
    296c:	54ea      	strb	r2, [r5, r3]
    296e:	3301      	adds	r3, #1
    2970:	54ea      	strb	r2, [r5, r3]
    2972:	3301      	adds	r3, #1
    2974:	54ea      	strb	r2, [r5, r3]
    2976:	3301      	adds	r3, #1
    2978:	54ea      	strb	r2, [r5, r3]
    297a:	6828      	ldr	r0, [r5, #0]
    297c:	4b07      	ldr	r3, [pc, #28]	; (299c <usart_init+0x30c>)
    297e:	4798      	blx	r3
    2980:	0004      	movs	r4, r0
    2982:	4911      	ldr	r1, [pc, #68]	; (29c8 <usart_init+0x338>)
    2984:	4b11      	ldr	r3, [pc, #68]	; (29cc <usart_init+0x33c>)
    2986:	4798      	blx	r3
    2988:	00a4      	lsls	r4, r4, #2
    298a:	4b11      	ldr	r3, [pc, #68]	; (29d0 <usart_init+0x340>)
    298c:	50e5      	str	r5, [r4, r3]
    298e:	2000      	movs	r0, #0
    2990:	e691      	b.n	26b6 <usart_init+0x26>
    2992:	2310      	movs	r3, #16
    2994:	9306      	str	r3, [sp, #24]
    2996:	2300      	movs	r3, #0
    2998:	9307      	str	r3, [sp, #28]
    299a:	e6e8      	b.n	276e <usart_init+0xde>
    299c:	00001e49 	.word	0x00001e49
    29a0:	40000400 	.word	0x40000400
    29a4:	0000324d 	.word	0x0000324d
    29a8:	000031c1 	.word	0x000031c1
    29ac:	00001c85 	.word	0x00001c85
    29b0:	41002000 	.word	0x41002000
    29b4:	00003269 	.word	0x00003269
    29b8:	00001bc7 	.word	0x00001bc7
    29bc:	00001bf1 	.word	0x00001bf1
    29c0:	00001cd1 	.word	0x00001cd1
    29c4:	00003345 	.word	0x00003345
    29c8:	00002a71 	.word	0x00002a71
    29cc:	00001e85 	.word	0x00001e85
    29d0:	200005ec 	.word	0x200005ec

000029d4 <usart_write_wait>:
    29d4:	79c2      	ldrb	r2, [r0, #7]
    29d6:	231c      	movs	r3, #28
    29d8:	2a00      	cmp	r2, #0
    29da:	d101      	bne.n	29e0 <usart_write_wait+0xc>
    29dc:	0018      	movs	r0, r3
    29de:	4770      	bx	lr
    29e0:	8dc2      	ldrh	r2, [r0, #46]	; 0x2e
    29e2:	b292      	uxth	r2, r2
    29e4:	3b17      	subs	r3, #23
    29e6:	2a00      	cmp	r2, #0
    29e8:	d1f8      	bne.n	29dc <usart_write_wait+0x8>
    29ea:	6803      	ldr	r3, [r0, #0]
    29ec:	69da      	ldr	r2, [r3, #28]
    29ee:	2a00      	cmp	r2, #0
    29f0:	d1fc      	bne.n	29ec <usart_write_wait+0x18>
    29f2:	8519      	strh	r1, [r3, #40]	; 0x28
    29f4:	2102      	movs	r1, #2
    29f6:	7e1a      	ldrb	r2, [r3, #24]
    29f8:	420a      	tst	r2, r1
    29fa:	d0fc      	beq.n	29f6 <usart_write_wait+0x22>
    29fc:	2300      	movs	r3, #0
    29fe:	e7ed      	b.n	29dc <usart_write_wait+0x8>

00002a00 <usart_read_wait>:
    2a00:	7982      	ldrb	r2, [r0, #6]
    2a02:	231c      	movs	r3, #28
    2a04:	2a00      	cmp	r2, #0
    2a06:	d101      	bne.n	2a0c <usart_read_wait+0xc>
    2a08:	0018      	movs	r0, r3
    2a0a:	4770      	bx	lr
    2a0c:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
    2a0e:	b292      	uxth	r2, r2
    2a10:	3b17      	subs	r3, #23
    2a12:	2a00      	cmp	r2, #0
    2a14:	d1f8      	bne.n	2a08 <usart_read_wait+0x8>
    2a16:	6802      	ldr	r2, [r0, #0]
    2a18:	7e10      	ldrb	r0, [r2, #24]
    2a1a:	0740      	lsls	r0, r0, #29
    2a1c:	d5f4      	bpl.n	2a08 <usart_read_wait+0x8>
    2a1e:	69d3      	ldr	r3, [r2, #28]
    2a20:	2b00      	cmp	r3, #0
    2a22:	d1fc      	bne.n	2a1e <usart_read_wait+0x1e>
    2a24:	8b53      	ldrh	r3, [r2, #26]
    2a26:	b2db      	uxtb	r3, r3
    2a28:	0698      	lsls	r0, r3, #26
    2a2a:	d01d      	beq.n	2a68 <usart_read_wait+0x68>
    2a2c:	0798      	lsls	r0, r3, #30
    2a2e:	d503      	bpl.n	2a38 <usart_read_wait+0x38>
    2a30:	2302      	movs	r3, #2
    2a32:	8353      	strh	r3, [r2, #26]
    2a34:	3318      	adds	r3, #24
    2a36:	e7e7      	b.n	2a08 <usart_read_wait+0x8>
    2a38:	0758      	lsls	r0, r3, #29
    2a3a:	d503      	bpl.n	2a44 <usart_read_wait+0x44>
    2a3c:	2304      	movs	r3, #4
    2a3e:	8353      	strh	r3, [r2, #26]
    2a40:	331a      	adds	r3, #26
    2a42:	e7e1      	b.n	2a08 <usart_read_wait+0x8>
    2a44:	07d8      	lsls	r0, r3, #31
    2a46:	d503      	bpl.n	2a50 <usart_read_wait+0x50>
    2a48:	2301      	movs	r3, #1
    2a4a:	8353      	strh	r3, [r2, #26]
    2a4c:	3312      	adds	r3, #18
    2a4e:	e7db      	b.n	2a08 <usart_read_wait+0x8>
    2a50:	06d8      	lsls	r0, r3, #27
    2a52:	d503      	bpl.n	2a5c <usart_read_wait+0x5c>
    2a54:	2310      	movs	r3, #16
    2a56:	8353      	strh	r3, [r2, #26]
    2a58:	3332      	adds	r3, #50	; 0x32
    2a5a:	e7d5      	b.n	2a08 <usart_read_wait+0x8>
    2a5c:	069b      	lsls	r3, r3, #26
    2a5e:	d503      	bpl.n	2a68 <usart_read_wait+0x68>
    2a60:	2320      	movs	r3, #32
    2a62:	8353      	strh	r3, [r2, #26]
    2a64:	3321      	adds	r3, #33	; 0x21
    2a66:	e7cf      	b.n	2a08 <usart_read_wait+0x8>
    2a68:	8d13      	ldrh	r3, [r2, #40]	; 0x28
    2a6a:	800b      	strh	r3, [r1, #0]
    2a6c:	2300      	movs	r3, #0
    2a6e:	e7cb      	b.n	2a08 <usart_read_wait+0x8>

00002a70 <_usart_interrupt_handler>:
    2a70:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    2a72:	0080      	lsls	r0, r0, #2
    2a74:	4b62      	ldr	r3, [pc, #392]	; (2c00 <_usart_interrupt_handler+0x190>)
    2a76:	58c5      	ldr	r5, [r0, r3]
    2a78:	682c      	ldr	r4, [r5, #0]
    2a7a:	69e3      	ldr	r3, [r4, #28]
    2a7c:	2b00      	cmp	r3, #0
    2a7e:	d1fc      	bne.n	2a7a <_usart_interrupt_handler+0xa>
    2a80:	7e23      	ldrb	r3, [r4, #24]
    2a82:	7da6      	ldrb	r6, [r4, #22]
    2a84:	401e      	ands	r6, r3
    2a86:	2330      	movs	r3, #48	; 0x30
    2a88:	5ceb      	ldrb	r3, [r5, r3]
    2a8a:	2231      	movs	r2, #49	; 0x31
    2a8c:	5caf      	ldrb	r7, [r5, r2]
    2a8e:	401f      	ands	r7, r3
    2a90:	07f3      	lsls	r3, r6, #31
    2a92:	d522      	bpl.n	2ada <_usart_interrupt_handler+0x6a>
    2a94:	8deb      	ldrh	r3, [r5, #46]	; 0x2e
    2a96:	b29b      	uxth	r3, r3
    2a98:	2b00      	cmp	r3, #0
    2a9a:	d01c      	beq.n	2ad6 <_usart_interrupt_handler+0x66>
    2a9c:	6aaa      	ldr	r2, [r5, #40]	; 0x28
    2a9e:	7813      	ldrb	r3, [r2, #0]
    2aa0:	b2db      	uxtb	r3, r3
    2aa2:	1c51      	adds	r1, r2, #1
    2aa4:	62a9      	str	r1, [r5, #40]	; 0x28
    2aa6:	7969      	ldrb	r1, [r5, #5]
    2aa8:	2901      	cmp	r1, #1
    2aaa:	d00e      	beq.n	2aca <_usart_interrupt_handler+0x5a>
    2aac:	b29b      	uxth	r3, r3
    2aae:	05db      	lsls	r3, r3, #23
    2ab0:	0ddb      	lsrs	r3, r3, #23
    2ab2:	8523      	strh	r3, [r4, #40]	; 0x28
    2ab4:	8deb      	ldrh	r3, [r5, #46]	; 0x2e
    2ab6:	3b01      	subs	r3, #1
    2ab8:	b29b      	uxth	r3, r3
    2aba:	85eb      	strh	r3, [r5, #46]	; 0x2e
    2abc:	2b00      	cmp	r3, #0
    2abe:	d10c      	bne.n	2ada <_usart_interrupt_handler+0x6a>
    2ac0:	3301      	adds	r3, #1
    2ac2:	7523      	strb	r3, [r4, #20]
    2ac4:	3301      	adds	r3, #1
    2ac6:	75a3      	strb	r3, [r4, #22]
    2ac8:	e007      	b.n	2ada <_usart_interrupt_handler+0x6a>
    2aca:	7851      	ldrb	r1, [r2, #1]
    2acc:	0209      	lsls	r1, r1, #8
    2ace:	430b      	orrs	r3, r1
    2ad0:	3202      	adds	r2, #2
    2ad2:	62aa      	str	r2, [r5, #40]	; 0x28
    2ad4:	e7eb      	b.n	2aae <_usart_interrupt_handler+0x3e>
    2ad6:	2301      	movs	r3, #1
    2ad8:	7523      	strb	r3, [r4, #20]
    2ada:	07b3      	lsls	r3, r6, #30
    2adc:	d506      	bpl.n	2aec <_usart_interrupt_handler+0x7c>
    2ade:	2302      	movs	r3, #2
    2ae0:	7523      	strb	r3, [r4, #20]
    2ae2:	2200      	movs	r2, #0
    2ae4:	3331      	adds	r3, #49	; 0x31
    2ae6:	54ea      	strb	r2, [r5, r3]
    2ae8:	07fb      	lsls	r3, r7, #31
    2aea:	d41a      	bmi.n	2b22 <_usart_interrupt_handler+0xb2>
    2aec:	0773      	lsls	r3, r6, #29
    2aee:	d565      	bpl.n	2bbc <_usart_interrupt_handler+0x14c>
    2af0:	8dab      	ldrh	r3, [r5, #44]	; 0x2c
    2af2:	b29b      	uxth	r3, r3
    2af4:	2b00      	cmp	r3, #0
    2af6:	d05f      	beq.n	2bb8 <_usart_interrupt_handler+0x148>
    2af8:	8b63      	ldrh	r3, [r4, #26]
    2afa:	b2db      	uxtb	r3, r3
    2afc:	071a      	lsls	r2, r3, #28
    2afe:	d414      	bmi.n	2b2a <_usart_interrupt_handler+0xba>
    2b00:	223f      	movs	r2, #63	; 0x3f
    2b02:	4013      	ands	r3, r2
    2b04:	2b00      	cmp	r3, #0
    2b06:	d034      	beq.n	2b72 <_usart_interrupt_handler+0x102>
    2b08:	079a      	lsls	r2, r3, #30
    2b0a:	d511      	bpl.n	2b30 <_usart_interrupt_handler+0xc0>
    2b0c:	221a      	movs	r2, #26
    2b0e:	2332      	movs	r3, #50	; 0x32
    2b10:	54ea      	strb	r2, [r5, r3]
    2b12:	3b30      	subs	r3, #48	; 0x30
    2b14:	8363      	strh	r3, [r4, #26]
    2b16:	077b      	lsls	r3, r7, #29
    2b18:	d550      	bpl.n	2bbc <_usart_interrupt_handler+0x14c>
    2b1a:	0028      	movs	r0, r5
    2b1c:	696b      	ldr	r3, [r5, #20]
    2b1e:	4798      	blx	r3
    2b20:	e04c      	b.n	2bbc <_usart_interrupt_handler+0x14c>
    2b22:	0028      	movs	r0, r5
    2b24:	68eb      	ldr	r3, [r5, #12]
    2b26:	4798      	blx	r3
    2b28:	e7e0      	b.n	2aec <_usart_interrupt_handler+0x7c>
    2b2a:	2237      	movs	r2, #55	; 0x37
    2b2c:	4013      	ands	r3, r2
    2b2e:	e7e9      	b.n	2b04 <_usart_interrupt_handler+0x94>
    2b30:	075a      	lsls	r2, r3, #29
    2b32:	d505      	bpl.n	2b40 <_usart_interrupt_handler+0xd0>
    2b34:	221e      	movs	r2, #30
    2b36:	2332      	movs	r3, #50	; 0x32
    2b38:	54ea      	strb	r2, [r5, r3]
    2b3a:	3b2e      	subs	r3, #46	; 0x2e
    2b3c:	8363      	strh	r3, [r4, #26]
    2b3e:	e7ea      	b.n	2b16 <_usart_interrupt_handler+0xa6>
    2b40:	07da      	lsls	r2, r3, #31
    2b42:	d505      	bpl.n	2b50 <_usart_interrupt_handler+0xe0>
    2b44:	2213      	movs	r2, #19
    2b46:	2332      	movs	r3, #50	; 0x32
    2b48:	54ea      	strb	r2, [r5, r3]
    2b4a:	3b31      	subs	r3, #49	; 0x31
    2b4c:	8363      	strh	r3, [r4, #26]
    2b4e:	e7e2      	b.n	2b16 <_usart_interrupt_handler+0xa6>
    2b50:	06da      	lsls	r2, r3, #27
    2b52:	d505      	bpl.n	2b60 <_usart_interrupt_handler+0xf0>
    2b54:	2242      	movs	r2, #66	; 0x42
    2b56:	2332      	movs	r3, #50	; 0x32
    2b58:	54ea      	strb	r2, [r5, r3]
    2b5a:	3b22      	subs	r3, #34	; 0x22
    2b5c:	8363      	strh	r3, [r4, #26]
    2b5e:	e7da      	b.n	2b16 <_usart_interrupt_handler+0xa6>
    2b60:	2220      	movs	r2, #32
    2b62:	421a      	tst	r2, r3
    2b64:	d0d7      	beq.n	2b16 <_usart_interrupt_handler+0xa6>
    2b66:	3221      	adds	r2, #33	; 0x21
    2b68:	2332      	movs	r3, #50	; 0x32
    2b6a:	54ea      	strb	r2, [r5, r3]
    2b6c:	3b12      	subs	r3, #18
    2b6e:	8363      	strh	r3, [r4, #26]
    2b70:	e7d1      	b.n	2b16 <_usart_interrupt_handler+0xa6>
    2b72:	8d23      	ldrh	r3, [r4, #40]	; 0x28
    2b74:	05db      	lsls	r3, r3, #23
    2b76:	0ddb      	lsrs	r3, r3, #23
    2b78:	b2da      	uxtb	r2, r3
    2b7a:	6a69      	ldr	r1, [r5, #36]	; 0x24
    2b7c:	700a      	strb	r2, [r1, #0]
    2b7e:	6a6a      	ldr	r2, [r5, #36]	; 0x24
    2b80:	1c51      	adds	r1, r2, #1
    2b82:	6269      	str	r1, [r5, #36]	; 0x24
    2b84:	7969      	ldrb	r1, [r5, #5]
    2b86:	2901      	cmp	r1, #1
    2b88:	d010      	beq.n	2bac <_usart_interrupt_handler+0x13c>
    2b8a:	8dab      	ldrh	r3, [r5, #44]	; 0x2c
    2b8c:	3b01      	subs	r3, #1
    2b8e:	b29b      	uxth	r3, r3
    2b90:	85ab      	strh	r3, [r5, #44]	; 0x2c
    2b92:	2b00      	cmp	r3, #0
    2b94:	d112      	bne.n	2bbc <_usart_interrupt_handler+0x14c>
    2b96:	3304      	adds	r3, #4
    2b98:	7523      	strb	r3, [r4, #20]
    2b9a:	2200      	movs	r2, #0
    2b9c:	332e      	adds	r3, #46	; 0x2e
    2b9e:	54ea      	strb	r2, [r5, r3]
    2ba0:	07bb      	lsls	r3, r7, #30
    2ba2:	d50b      	bpl.n	2bbc <_usart_interrupt_handler+0x14c>
    2ba4:	0028      	movs	r0, r5
    2ba6:	692b      	ldr	r3, [r5, #16]
    2ba8:	4798      	blx	r3
    2baa:	e007      	b.n	2bbc <_usart_interrupt_handler+0x14c>
    2bac:	0a1b      	lsrs	r3, r3, #8
    2bae:	7053      	strb	r3, [r2, #1]
    2bb0:	6a6b      	ldr	r3, [r5, #36]	; 0x24
    2bb2:	3301      	adds	r3, #1
    2bb4:	626b      	str	r3, [r5, #36]	; 0x24
    2bb6:	e7e8      	b.n	2b8a <_usart_interrupt_handler+0x11a>
    2bb8:	2304      	movs	r3, #4
    2bba:	7523      	strb	r3, [r4, #20]
    2bbc:	06f3      	lsls	r3, r6, #27
    2bbe:	d504      	bpl.n	2bca <_usart_interrupt_handler+0x15a>
    2bc0:	2310      	movs	r3, #16
    2bc2:	7523      	strb	r3, [r4, #20]
    2bc4:	7623      	strb	r3, [r4, #24]
    2bc6:	06fb      	lsls	r3, r7, #27
    2bc8:	d40e      	bmi.n	2be8 <_usart_interrupt_handler+0x178>
    2bca:	06b3      	lsls	r3, r6, #26
    2bcc:	d504      	bpl.n	2bd8 <_usart_interrupt_handler+0x168>
    2bce:	2320      	movs	r3, #32
    2bd0:	7523      	strb	r3, [r4, #20]
    2bd2:	7623      	strb	r3, [r4, #24]
    2bd4:	073b      	lsls	r3, r7, #28
    2bd6:	d40b      	bmi.n	2bf0 <_usart_interrupt_handler+0x180>
    2bd8:	0733      	lsls	r3, r6, #28
    2bda:	d504      	bpl.n	2be6 <_usart_interrupt_handler+0x176>
    2bdc:	2308      	movs	r3, #8
    2bde:	7523      	strb	r3, [r4, #20]
    2be0:	7623      	strb	r3, [r4, #24]
    2be2:	06bb      	lsls	r3, r7, #26
    2be4:	d408      	bmi.n	2bf8 <_usart_interrupt_handler+0x188>
    2be6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    2be8:	0028      	movs	r0, r5
    2bea:	69eb      	ldr	r3, [r5, #28]
    2bec:	4798      	blx	r3
    2bee:	e7ec      	b.n	2bca <_usart_interrupt_handler+0x15a>
    2bf0:	0028      	movs	r0, r5
    2bf2:	69ab      	ldr	r3, [r5, #24]
    2bf4:	4798      	blx	r3
    2bf6:	e7ef      	b.n	2bd8 <_usart_interrupt_handler+0x168>
    2bf8:	6a2b      	ldr	r3, [r5, #32]
    2bfa:	0028      	movs	r0, r5
    2bfc:	4798      	blx	r3
    2bfe:	e7f2      	b.n	2be6 <_usart_interrupt_handler+0x176>
    2c00:	200005ec 	.word	0x200005ec

00002c04 <system_clock_source_get_hz>:
    2c04:	b510      	push	{r4, lr}
    2c06:	2808      	cmp	r0, #8
    2c08:	d803      	bhi.n	2c12 <system_clock_source_get_hz+0xe>
    2c0a:	0080      	lsls	r0, r0, #2
    2c0c:	4b1c      	ldr	r3, [pc, #112]	; (2c80 <system_clock_source_get_hz+0x7c>)
    2c0e:	581b      	ldr	r3, [r3, r0]
    2c10:	469f      	mov	pc, r3
    2c12:	2000      	movs	r0, #0
    2c14:	e032      	b.n	2c7c <system_clock_source_get_hz+0x78>
    2c16:	4b1b      	ldr	r3, [pc, #108]	; (2c84 <system_clock_source_get_hz+0x80>)
    2c18:	6918      	ldr	r0, [r3, #16]
    2c1a:	e02f      	b.n	2c7c <system_clock_source_get_hz+0x78>
    2c1c:	4b1a      	ldr	r3, [pc, #104]	; (2c88 <system_clock_source_get_hz+0x84>)
    2c1e:	6a1b      	ldr	r3, [r3, #32]
    2c20:	059b      	lsls	r3, r3, #22
    2c22:	0f9b      	lsrs	r3, r3, #30
    2c24:	4819      	ldr	r0, [pc, #100]	; (2c8c <system_clock_source_get_hz+0x88>)
    2c26:	40d8      	lsrs	r0, r3
    2c28:	e028      	b.n	2c7c <system_clock_source_get_hz+0x78>
    2c2a:	4b16      	ldr	r3, [pc, #88]	; (2c84 <system_clock_source_get_hz+0x80>)
    2c2c:	6958      	ldr	r0, [r3, #20]
    2c2e:	e025      	b.n	2c7c <system_clock_source_get_hz+0x78>
    2c30:	4b14      	ldr	r3, [pc, #80]	; (2c84 <system_clock_source_get_hz+0x80>)
    2c32:	681b      	ldr	r3, [r3, #0]
    2c34:	2000      	movs	r0, #0
    2c36:	079b      	lsls	r3, r3, #30
    2c38:	d520      	bpl.n	2c7c <system_clock_source_get_hz+0x78>
    2c3a:	4913      	ldr	r1, [pc, #76]	; (2c88 <system_clock_source_get_hz+0x84>)
    2c3c:	2210      	movs	r2, #16
    2c3e:	68cb      	ldr	r3, [r1, #12]
    2c40:	421a      	tst	r2, r3
    2c42:	d0fc      	beq.n	2c3e <system_clock_source_get_hz+0x3a>
    2c44:	4b0f      	ldr	r3, [pc, #60]	; (2c84 <system_clock_source_get_hz+0x80>)
    2c46:	681a      	ldr	r2, [r3, #0]
    2c48:	2324      	movs	r3, #36	; 0x24
    2c4a:	4013      	ands	r3, r2
    2c4c:	2b04      	cmp	r3, #4
    2c4e:	d001      	beq.n	2c54 <system_clock_source_get_hz+0x50>
    2c50:	480f      	ldr	r0, [pc, #60]	; (2c90 <system_clock_source_get_hz+0x8c>)
    2c52:	e013      	b.n	2c7c <system_clock_source_get_hz+0x78>
    2c54:	2000      	movs	r0, #0
    2c56:	4b0f      	ldr	r3, [pc, #60]	; (2c94 <system_clock_source_get_hz+0x90>)
    2c58:	4798      	blx	r3
    2c5a:	4b0a      	ldr	r3, [pc, #40]	; (2c84 <system_clock_source_get_hz+0x80>)
    2c5c:	689b      	ldr	r3, [r3, #8]
    2c5e:	041b      	lsls	r3, r3, #16
    2c60:	0c1b      	lsrs	r3, r3, #16
    2c62:	4358      	muls	r0, r3
    2c64:	e00a      	b.n	2c7c <system_clock_source_get_hz+0x78>
    2c66:	2350      	movs	r3, #80	; 0x50
    2c68:	4a07      	ldr	r2, [pc, #28]	; (2c88 <system_clock_source_get_hz+0x84>)
    2c6a:	5cd3      	ldrb	r3, [r2, r3]
    2c6c:	2000      	movs	r0, #0
    2c6e:	075b      	lsls	r3, r3, #29
    2c70:	d504      	bpl.n	2c7c <system_clock_source_get_hz+0x78>
    2c72:	4b04      	ldr	r3, [pc, #16]	; (2c84 <system_clock_source_get_hz+0x80>)
    2c74:	68d8      	ldr	r0, [r3, #12]
    2c76:	e001      	b.n	2c7c <system_clock_source_get_hz+0x78>
    2c78:	2080      	movs	r0, #128	; 0x80
    2c7a:	0200      	lsls	r0, r0, #8
    2c7c:	bd10      	pop	{r4, pc}
    2c7e:	46c0      	nop			; (mov r8, r8)
    2c80:	00006ee8 	.word	0x00006ee8
    2c84:	200002cc 	.word	0x200002cc
    2c88:	40000800 	.word	0x40000800
    2c8c:	007a1200 	.word	0x007a1200
    2c90:	02dc6c00 	.word	0x02dc6c00
    2c94:	00003269 	.word	0x00003269

00002c98 <system_clock_source_osc8m_set_config>:
    2c98:	b570      	push	{r4, r5, r6, lr}
    2c9a:	490c      	ldr	r1, [pc, #48]	; (2ccc <system_clock_source_osc8m_set_config+0x34>)
    2c9c:	6a0b      	ldr	r3, [r1, #32]
    2c9e:	7804      	ldrb	r4, [r0, #0]
    2ca0:	7885      	ldrb	r5, [r0, #2]
    2ca2:	7840      	ldrb	r0, [r0, #1]
    2ca4:	2201      	movs	r2, #1
    2ca6:	4010      	ands	r0, r2
    2ca8:	0180      	lsls	r0, r0, #6
    2caa:	2640      	movs	r6, #64	; 0x40
    2cac:	43b3      	bics	r3, r6
    2cae:	4303      	orrs	r3, r0
    2cb0:	402a      	ands	r2, r5
    2cb2:	01d2      	lsls	r2, r2, #7
    2cb4:	2080      	movs	r0, #128	; 0x80
    2cb6:	4383      	bics	r3, r0
    2cb8:	4313      	orrs	r3, r2
    2cba:	2203      	movs	r2, #3
    2cbc:	4022      	ands	r2, r4
    2cbe:	0212      	lsls	r2, r2, #8
    2cc0:	4803      	ldr	r0, [pc, #12]	; (2cd0 <system_clock_source_osc8m_set_config+0x38>)
    2cc2:	4003      	ands	r3, r0
    2cc4:	4313      	orrs	r3, r2
    2cc6:	620b      	str	r3, [r1, #32]
    2cc8:	bd70      	pop	{r4, r5, r6, pc}
    2cca:	46c0      	nop			; (mov r8, r8)
    2ccc:	40000800 	.word	0x40000800
    2cd0:	fffffcff 	.word	0xfffffcff

00002cd4 <system_clock_source_xosc32k_set_config>:
    2cd4:	b5f0      	push	{r4, r5, r6, r7, lr}
    2cd6:	46de      	mov	lr, fp
    2cd8:	4657      	mov	r7, sl
    2cda:	464e      	mov	r6, r9
    2cdc:	4645      	mov	r5, r8
    2cde:	b5e0      	push	{r5, r6, r7, lr}
    2ce0:	0001      	movs	r1, r0
    2ce2:	4b26      	ldr	r3, [pc, #152]	; (2d7c <system_clock_source_xosc32k_set_config+0xa8>)
    2ce4:	469b      	mov	fp, r3
    2ce6:	8a9b      	ldrh	r3, [r3, #20]
    2ce8:	7845      	ldrb	r5, [r0, #1]
    2cea:	7800      	ldrb	r0, [r0, #0]
    2cec:	4242      	negs	r2, r0
    2cee:	4142      	adcs	r2, r0
    2cf0:	4691      	mov	r9, r2
    2cf2:	7888      	ldrb	r0, [r1, #2]
    2cf4:	78ca      	ldrb	r2, [r1, #3]
    2cf6:	4694      	mov	ip, r2
    2cf8:	790a      	ldrb	r2, [r1, #4]
    2cfa:	4690      	mov	r8, r2
    2cfc:	7b4e      	ldrb	r6, [r1, #13]
    2cfe:	7b0f      	ldrb	r7, [r1, #12]
    2d00:	7b8c      	ldrb	r4, [r1, #14]
    2d02:	688a      	ldr	r2, [r1, #8]
    2d04:	491e      	ldr	r1, [pc, #120]	; (2d80 <system_clock_source_xosc32k_set_config+0xac>)
    2d06:	614a      	str	r2, [r1, #20]
    2d08:	2101      	movs	r1, #1
    2d0a:	464a      	mov	r2, r9
    2d0c:	0092      	lsls	r2, r2, #2
    2d0e:	4691      	mov	r9, r2
    2d10:	2204      	movs	r2, #4
    2d12:	4393      	bics	r3, r2
    2d14:	464a      	mov	r2, r9
    2d16:	4313      	orrs	r3, r2
    2d18:	4642      	mov	r2, r8
    2d1a:	400a      	ands	r2, r1
    2d1c:	00d2      	lsls	r2, r2, #3
    2d1e:	4690      	mov	r8, r2
    2d20:	2208      	movs	r2, #8
    2d22:	4393      	bics	r3, r2
    2d24:	4642      	mov	r2, r8
    2d26:	4313      	orrs	r3, r2
    2d28:	4662      	mov	r2, ip
    2d2a:	400a      	ands	r2, r1
    2d2c:	0112      	lsls	r2, r2, #4
    2d2e:	4694      	mov	ip, r2
    2d30:	2210      	movs	r2, #16
    2d32:	4393      	bics	r3, r2
    2d34:	4662      	mov	r2, ip
    2d36:	4313      	orrs	r3, r2
    2d38:	4008      	ands	r0, r1
    2d3a:	0140      	lsls	r0, r0, #5
    2d3c:	2220      	movs	r2, #32
    2d3e:	4393      	bics	r3, r2
    2d40:	4303      	orrs	r3, r0
    2d42:	400f      	ands	r7, r1
    2d44:	01bf      	lsls	r7, r7, #6
    2d46:	2040      	movs	r0, #64	; 0x40
    2d48:	4383      	bics	r3, r0
    2d4a:	433b      	orrs	r3, r7
    2d4c:	400e      	ands	r6, r1
    2d4e:	01f6      	lsls	r6, r6, #7
    2d50:	3040      	adds	r0, #64	; 0x40
    2d52:	4383      	bics	r3, r0
    2d54:	4333      	orrs	r3, r6
    2d56:	3879      	subs	r0, #121	; 0x79
    2d58:	4005      	ands	r5, r0
    2d5a:	022d      	lsls	r5, r5, #8
    2d5c:	4809      	ldr	r0, [pc, #36]	; (2d84 <system_clock_source_xosc32k_set_config+0xb0>)
    2d5e:	4003      	ands	r3, r0
    2d60:	432b      	orrs	r3, r5
    2d62:	4021      	ands	r1, r4
    2d64:	0309      	lsls	r1, r1, #12
    2d66:	4808      	ldr	r0, [pc, #32]	; (2d88 <system_clock_source_xosc32k_set_config+0xb4>)
    2d68:	4003      	ands	r3, r0
    2d6a:	430b      	orrs	r3, r1
    2d6c:	465a      	mov	r2, fp
    2d6e:	8293      	strh	r3, [r2, #20]
    2d70:	bc3c      	pop	{r2, r3, r4, r5}
    2d72:	4690      	mov	r8, r2
    2d74:	4699      	mov	r9, r3
    2d76:	46a2      	mov	sl, r4
    2d78:	46ab      	mov	fp, r5
    2d7a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    2d7c:	40000800 	.word	0x40000800
    2d80:	200002cc 	.word	0x200002cc
    2d84:	fffff8ff 	.word	0xfffff8ff
    2d88:	ffffefff 	.word	0xffffefff

00002d8c <system_clock_source_dfll_set_config>:
    2d8c:	b510      	push	{r4, lr}
    2d8e:	7a03      	ldrb	r3, [r0, #8]
    2d90:	069b      	lsls	r3, r3, #26
    2d92:	0c1b      	lsrs	r3, r3, #16
    2d94:	8942      	ldrh	r2, [r0, #10]
    2d96:	0592      	lsls	r2, r2, #22
    2d98:	0d92      	lsrs	r2, r2, #22
    2d9a:	4313      	orrs	r3, r2
    2d9c:	4918      	ldr	r1, [pc, #96]	; (2e00 <system_clock_source_dfll_set_config+0x74>)
    2d9e:	604b      	str	r3, [r1, #4]
    2da0:	7983      	ldrb	r3, [r0, #6]
    2da2:	79c2      	ldrb	r2, [r0, #7]
    2da4:	4313      	orrs	r3, r2
    2da6:	8842      	ldrh	r2, [r0, #2]
    2da8:	8884      	ldrh	r4, [r0, #4]
    2daa:	4322      	orrs	r2, r4
    2dac:	4313      	orrs	r3, r2
    2dae:	7842      	ldrb	r2, [r0, #1]
    2db0:	01d2      	lsls	r2, r2, #7
    2db2:	4313      	orrs	r3, r2
    2db4:	600b      	str	r3, [r1, #0]
    2db6:	7803      	ldrb	r3, [r0, #0]
    2db8:	2b04      	cmp	r3, #4
    2dba:	d011      	beq.n	2de0 <system_clock_source_dfll_set_config+0x54>
    2dbc:	2b20      	cmp	r3, #32
    2dbe:	d10e      	bne.n	2dde <system_clock_source_dfll_set_config+0x52>
    2dc0:	7b03      	ldrb	r3, [r0, #12]
    2dc2:	069b      	lsls	r3, r3, #26
    2dc4:	8a02      	ldrh	r2, [r0, #16]
    2dc6:	4313      	orrs	r3, r2
    2dc8:	89c2      	ldrh	r2, [r0, #14]
    2dca:	0412      	lsls	r2, r2, #16
    2dcc:	490d      	ldr	r1, [pc, #52]	; (2e04 <system_clock_source_dfll_set_config+0x78>)
    2dce:	400a      	ands	r2, r1
    2dd0:	4313      	orrs	r3, r2
    2dd2:	4a0b      	ldr	r2, [pc, #44]	; (2e00 <system_clock_source_dfll_set_config+0x74>)
    2dd4:	6093      	str	r3, [r2, #8]
    2dd6:	6811      	ldr	r1, [r2, #0]
    2dd8:	4b0b      	ldr	r3, [pc, #44]	; (2e08 <system_clock_source_dfll_set_config+0x7c>)
    2dda:	430b      	orrs	r3, r1
    2ddc:	6013      	str	r3, [r2, #0]
    2dde:	bd10      	pop	{r4, pc}
    2de0:	7b03      	ldrb	r3, [r0, #12]
    2de2:	069b      	lsls	r3, r3, #26
    2de4:	8a02      	ldrh	r2, [r0, #16]
    2de6:	4313      	orrs	r3, r2
    2de8:	89c2      	ldrh	r2, [r0, #14]
    2dea:	0412      	lsls	r2, r2, #16
    2dec:	4905      	ldr	r1, [pc, #20]	; (2e04 <system_clock_source_dfll_set_config+0x78>)
    2dee:	400a      	ands	r2, r1
    2df0:	4313      	orrs	r3, r2
    2df2:	4a03      	ldr	r2, [pc, #12]	; (2e00 <system_clock_source_dfll_set_config+0x74>)
    2df4:	6093      	str	r3, [r2, #8]
    2df6:	6813      	ldr	r3, [r2, #0]
    2df8:	2104      	movs	r1, #4
    2dfa:	430b      	orrs	r3, r1
    2dfc:	6013      	str	r3, [r2, #0]
    2dfe:	e7ee      	b.n	2dde <system_clock_source_dfll_set_config+0x52>
    2e00:	200002cc 	.word	0x200002cc
    2e04:	03ff0000 	.word	0x03ff0000
    2e08:	00000424 	.word	0x00000424

00002e0c <system_clock_source_enable>:
    2e0c:	2808      	cmp	r0, #8
    2e0e:	d803      	bhi.n	2e18 <system_clock_source_enable+0xc>
    2e10:	0080      	lsls	r0, r0, #2
    2e12:	4b25      	ldr	r3, [pc, #148]	; (2ea8 <system_clock_source_enable+0x9c>)
    2e14:	581b      	ldr	r3, [r3, r0]
    2e16:	469f      	mov	pc, r3
    2e18:	2017      	movs	r0, #23
    2e1a:	e044      	b.n	2ea6 <system_clock_source_enable+0x9a>
    2e1c:	4a23      	ldr	r2, [pc, #140]	; (2eac <system_clock_source_enable+0xa0>)
    2e1e:	6a13      	ldr	r3, [r2, #32]
    2e20:	2102      	movs	r1, #2
    2e22:	430b      	orrs	r3, r1
    2e24:	6213      	str	r3, [r2, #32]
    2e26:	2000      	movs	r0, #0
    2e28:	e03d      	b.n	2ea6 <system_clock_source_enable+0x9a>
    2e2a:	4a20      	ldr	r2, [pc, #128]	; (2eac <system_clock_source_enable+0xa0>)
    2e2c:	6993      	ldr	r3, [r2, #24]
    2e2e:	2102      	movs	r1, #2
    2e30:	430b      	orrs	r3, r1
    2e32:	6193      	str	r3, [r2, #24]
    2e34:	2000      	movs	r0, #0
    2e36:	e036      	b.n	2ea6 <system_clock_source_enable+0x9a>
    2e38:	4a1c      	ldr	r2, [pc, #112]	; (2eac <system_clock_source_enable+0xa0>)
    2e3a:	8a13      	ldrh	r3, [r2, #16]
    2e3c:	2102      	movs	r1, #2
    2e3e:	430b      	orrs	r3, r1
    2e40:	8213      	strh	r3, [r2, #16]
    2e42:	2000      	movs	r0, #0
    2e44:	e02f      	b.n	2ea6 <system_clock_source_enable+0x9a>
    2e46:	4a19      	ldr	r2, [pc, #100]	; (2eac <system_clock_source_enable+0xa0>)
    2e48:	8a93      	ldrh	r3, [r2, #20]
    2e4a:	2102      	movs	r1, #2
    2e4c:	430b      	orrs	r3, r1
    2e4e:	8293      	strh	r3, [r2, #20]
    2e50:	2000      	movs	r0, #0
    2e52:	e028      	b.n	2ea6 <system_clock_source_enable+0x9a>
    2e54:	4916      	ldr	r1, [pc, #88]	; (2eb0 <system_clock_source_enable+0xa4>)
    2e56:	680b      	ldr	r3, [r1, #0]
    2e58:	2202      	movs	r2, #2
    2e5a:	4313      	orrs	r3, r2
    2e5c:	600b      	str	r3, [r1, #0]
    2e5e:	4b13      	ldr	r3, [pc, #76]	; (2eac <system_clock_source_enable+0xa0>)
    2e60:	849a      	strh	r2, [r3, #36]	; 0x24
    2e62:	0019      	movs	r1, r3
    2e64:	320e      	adds	r2, #14
    2e66:	68cb      	ldr	r3, [r1, #12]
    2e68:	421a      	tst	r2, r3
    2e6a:	d0fc      	beq.n	2e66 <system_clock_source_enable+0x5a>
    2e6c:	4a10      	ldr	r2, [pc, #64]	; (2eb0 <system_clock_source_enable+0xa4>)
    2e6e:	6891      	ldr	r1, [r2, #8]
    2e70:	4b0e      	ldr	r3, [pc, #56]	; (2eac <system_clock_source_enable+0xa0>)
    2e72:	62d9      	str	r1, [r3, #44]	; 0x2c
    2e74:	6852      	ldr	r2, [r2, #4]
    2e76:	629a      	str	r2, [r3, #40]	; 0x28
    2e78:	2200      	movs	r2, #0
    2e7a:	849a      	strh	r2, [r3, #36]	; 0x24
    2e7c:	0019      	movs	r1, r3
    2e7e:	3210      	adds	r2, #16
    2e80:	68cb      	ldr	r3, [r1, #12]
    2e82:	421a      	tst	r2, r3
    2e84:	d0fc      	beq.n	2e80 <system_clock_source_enable+0x74>
    2e86:	4b0a      	ldr	r3, [pc, #40]	; (2eb0 <system_clock_source_enable+0xa4>)
    2e88:	681b      	ldr	r3, [r3, #0]
    2e8a:	b29b      	uxth	r3, r3
    2e8c:	4a07      	ldr	r2, [pc, #28]	; (2eac <system_clock_source_enable+0xa0>)
    2e8e:	8493      	strh	r3, [r2, #36]	; 0x24
    2e90:	2000      	movs	r0, #0
    2e92:	e008      	b.n	2ea6 <system_clock_source_enable+0x9a>
    2e94:	4905      	ldr	r1, [pc, #20]	; (2eac <system_clock_source_enable+0xa0>)
    2e96:	2244      	movs	r2, #68	; 0x44
    2e98:	5c8b      	ldrb	r3, [r1, r2]
    2e9a:	2002      	movs	r0, #2
    2e9c:	4303      	orrs	r3, r0
    2e9e:	548b      	strb	r3, [r1, r2]
    2ea0:	2000      	movs	r0, #0
    2ea2:	e000      	b.n	2ea6 <system_clock_source_enable+0x9a>
    2ea4:	2000      	movs	r0, #0
    2ea6:	4770      	bx	lr
    2ea8:	00006f0c 	.word	0x00006f0c
    2eac:	40000800 	.word	0x40000800
    2eb0:	200002cc 	.word	0x200002cc

00002eb4 <system_clock_init>:
    2eb4:	b5f0      	push	{r4, r5, r6, r7, lr}
    2eb6:	b08f      	sub	sp, #60	; 0x3c
    2eb8:	22c2      	movs	r2, #194	; 0xc2
    2eba:	00d2      	lsls	r2, r2, #3
    2ebc:	4b47      	ldr	r3, [pc, #284]	; (2fdc <system_clock_init+0x128>)
    2ebe:	609a      	str	r2, [r3, #8]
    2ec0:	4a47      	ldr	r2, [pc, #284]	; (2fe0 <system_clock_init+0x12c>)
    2ec2:	6853      	ldr	r3, [r2, #4]
    2ec4:	211e      	movs	r1, #30
    2ec6:	438b      	bics	r3, r1
    2ec8:	391a      	subs	r1, #26
    2eca:	430b      	orrs	r3, r1
    2ecc:	6053      	str	r3, [r2, #4]
    2ece:	2202      	movs	r2, #2
    2ed0:	ab01      	add	r3, sp, #4
    2ed2:	701a      	strb	r2, [r3, #0]
    2ed4:	2400      	movs	r4, #0
    2ed6:	4d43      	ldr	r5, [pc, #268]	; (2fe4 <system_clock_init+0x130>)
    2ed8:	b2e0      	uxtb	r0, r4
    2eda:	a901      	add	r1, sp, #4
    2edc:	47a8      	blx	r5
    2ede:	3401      	adds	r4, #1
    2ee0:	2c25      	cmp	r4, #37	; 0x25
    2ee2:	d1f9      	bne.n	2ed8 <system_clock_init+0x24>
    2ee4:	a80a      	add	r0, sp, #40	; 0x28
    2ee6:	2300      	movs	r3, #0
    2ee8:	7003      	strb	r3, [r0, #0]
    2eea:	7083      	strb	r3, [r0, #2]
    2eec:	2280      	movs	r2, #128	; 0x80
    2eee:	0212      	lsls	r2, r2, #8
    2ef0:	6082      	str	r2, [r0, #8]
    2ef2:	70c3      	strb	r3, [r0, #3]
    2ef4:	2201      	movs	r2, #1
    2ef6:	7102      	strb	r2, [r0, #4]
    2ef8:	7303      	strb	r3, [r0, #12]
    2efa:	7383      	strb	r3, [r0, #14]
    2efc:	3202      	adds	r2, #2
    2efe:	7042      	strb	r2, [r0, #1]
    2f00:	7343      	strb	r3, [r0, #13]
    2f02:	4b39      	ldr	r3, [pc, #228]	; (2fe8 <system_clock_init+0x134>)
    2f04:	4798      	blx	r3
    2f06:	2005      	movs	r0, #5
    2f08:	4b38      	ldr	r3, [pc, #224]	; (2fec <system_clock_init+0x138>)
    2f0a:	4798      	blx	r3
    2f0c:	4933      	ldr	r1, [pc, #204]	; (2fdc <system_clock_init+0x128>)
    2f0e:	2202      	movs	r2, #2
    2f10:	68cb      	ldr	r3, [r1, #12]
    2f12:	421a      	tst	r2, r3
    2f14:	d0fc      	beq.n	2f10 <system_clock_init+0x5c>
    2f16:	4a31      	ldr	r2, [pc, #196]	; (2fdc <system_clock_init+0x128>)
    2f18:	8a93      	ldrh	r3, [r2, #20]
    2f1a:	2180      	movs	r1, #128	; 0x80
    2f1c:	430b      	orrs	r3, r1
    2f1e:	8293      	strh	r3, [r2, #20]
    2f20:	ab05      	add	r3, sp, #20
    2f22:	2100      	movs	r1, #0
    2f24:	2200      	movs	r2, #0
    2f26:	8059      	strh	r1, [r3, #2]
    2f28:	8099      	strh	r1, [r3, #4]
    2f2a:	719a      	strb	r2, [r3, #6]
    2f2c:	71da      	strb	r2, [r3, #7]
    2f2e:	313f      	adds	r1, #63	; 0x3f
    2f30:	8159      	strh	r1, [r3, #10]
    2f32:	393b      	subs	r1, #59	; 0x3b
    2f34:	7019      	strb	r1, [r3, #0]
    2f36:	705a      	strb	r2, [r3, #1]
    2f38:	4b2d      	ldr	r3, [pc, #180]	; (2ff0 <system_clock_init+0x13c>)
    2f3a:	681b      	ldr	r3, [r3, #0]
    2f3c:	0e9b      	lsrs	r3, r3, #26
    2f3e:	2b3f      	cmp	r3, #63	; 0x3f
    2f40:	d04a      	beq.n	2fd8 <system_clock_init+0x124>
    2f42:	a805      	add	r0, sp, #20
    2f44:	7203      	strb	r3, [r0, #8]
    2f46:	4b2b      	ldr	r3, [pc, #172]	; (2ff4 <system_clock_init+0x140>)
    2f48:	8203      	strh	r3, [r0, #16]
    2f4a:	2307      	movs	r3, #7
    2f4c:	7303      	strb	r3, [r0, #12]
    2f4e:	3338      	adds	r3, #56	; 0x38
    2f50:	81c3      	strh	r3, [r0, #14]
    2f52:	4b29      	ldr	r3, [pc, #164]	; (2ff8 <system_clock_init+0x144>)
    2f54:	4798      	blx	r3
    2f56:	a804      	add	r0, sp, #16
    2f58:	2500      	movs	r5, #0
    2f5a:	7045      	strb	r5, [r0, #1]
    2f5c:	2601      	movs	r6, #1
    2f5e:	7086      	strb	r6, [r0, #2]
    2f60:	7005      	strb	r5, [r0, #0]
    2f62:	4b26      	ldr	r3, [pc, #152]	; (2ffc <system_clock_init+0x148>)
    2f64:	4798      	blx	r3
    2f66:	2006      	movs	r0, #6
    2f68:	4f20      	ldr	r7, [pc, #128]	; (2fec <system_clock_init+0x138>)
    2f6a:	47b8      	blx	r7
    2f6c:	4b24      	ldr	r3, [pc, #144]	; (3000 <system_clock_init+0x14c>)
    2f6e:	4798      	blx	r3
    2f70:	ac01      	add	r4, sp, #4
    2f72:	9602      	str	r6, [sp, #8]
    2f74:	7065      	strb	r5, [r4, #1]
    2f76:	7225      	strb	r5, [r4, #8]
    2f78:	7265      	strb	r5, [r4, #9]
    2f7a:	2305      	movs	r3, #5
    2f7c:	7023      	strb	r3, [r4, #0]
    2f7e:	0021      	movs	r1, r4
    2f80:	2001      	movs	r0, #1
    2f82:	4b20      	ldr	r3, [pc, #128]	; (3004 <system_clock_init+0x150>)
    2f84:	4798      	blx	r3
    2f86:	2001      	movs	r0, #1
    2f88:	4b1f      	ldr	r3, [pc, #124]	; (3008 <system_clock_init+0x154>)
    2f8a:	4798      	blx	r3
    2f8c:	7026      	strb	r6, [r4, #0]
    2f8e:	0021      	movs	r1, r4
    2f90:	2000      	movs	r0, #0
    2f92:	4b14      	ldr	r3, [pc, #80]	; (2fe4 <system_clock_init+0x130>)
    2f94:	4798      	blx	r3
    2f96:	2000      	movs	r0, #0
    2f98:	4b1c      	ldr	r3, [pc, #112]	; (300c <system_clock_init+0x158>)
    2f9a:	4798      	blx	r3
    2f9c:	2007      	movs	r0, #7
    2f9e:	47b8      	blx	r7
    2fa0:	490e      	ldr	r1, [pc, #56]	; (2fdc <system_clock_init+0x128>)
    2fa2:	22d0      	movs	r2, #208	; 0xd0
    2fa4:	68cb      	ldr	r3, [r1, #12]
    2fa6:	4013      	ands	r3, r2
    2fa8:	2bd0      	cmp	r3, #208	; 0xd0
    2faa:	d1fb      	bne.n	2fa4 <system_clock_init+0xf0>
    2fac:	4a18      	ldr	r2, [pc, #96]	; (3010 <system_clock_init+0x15c>)
    2fae:	2300      	movs	r3, #0
    2fb0:	7213      	strb	r3, [r2, #8]
    2fb2:	7253      	strb	r3, [r2, #9]
    2fb4:	7293      	strb	r3, [r2, #10]
    2fb6:	72d3      	strb	r3, [r2, #11]
    2fb8:	a901      	add	r1, sp, #4
    2fba:	2201      	movs	r2, #1
    2fbc:	604a      	str	r2, [r1, #4]
    2fbe:	704b      	strb	r3, [r1, #1]
    2fc0:	720b      	strb	r3, [r1, #8]
    2fc2:	724b      	strb	r3, [r1, #9]
    2fc4:	3307      	adds	r3, #7
    2fc6:	700b      	strb	r3, [r1, #0]
    2fc8:	2000      	movs	r0, #0
    2fca:	4b0e      	ldr	r3, [pc, #56]	; (3004 <system_clock_init+0x150>)
    2fcc:	4798      	blx	r3
    2fce:	2000      	movs	r0, #0
    2fd0:	4b0d      	ldr	r3, [pc, #52]	; (3008 <system_clock_init+0x154>)
    2fd2:	4798      	blx	r3
    2fd4:	b00f      	add	sp, #60	; 0x3c
    2fd6:	bdf0      	pop	{r4, r5, r6, r7, pc}
    2fd8:	3b20      	subs	r3, #32
    2fda:	e7b2      	b.n	2f42 <system_clock_init+0x8e>
    2fdc:	40000800 	.word	0x40000800
    2fe0:	41004000 	.word	0x41004000
    2fe4:	0000324d 	.word	0x0000324d
    2fe8:	00002cd5 	.word	0x00002cd5
    2fec:	00002e0d 	.word	0x00002e0d
    2ff0:	00806024 	.word	0x00806024
    2ff4:	000005b9 	.word	0x000005b9
    2ff8:	00002d8d 	.word	0x00002d8d
    2ffc:	00002c99 	.word	0x00002c99
    3000:	00003015 	.word	0x00003015
    3004:	00003039 	.word	0x00003039
    3008:	000030f1 	.word	0x000030f1
    300c:	000031c1 	.word	0x000031c1
    3010:	40000400 	.word	0x40000400

00003014 <system_gclk_init>:
    3014:	4a06      	ldr	r2, [pc, #24]	; (3030 <system_gclk_init+0x1c>)
    3016:	6993      	ldr	r3, [r2, #24]
    3018:	2108      	movs	r1, #8
    301a:	430b      	orrs	r3, r1
    301c:	6193      	str	r3, [r2, #24]
    301e:	2201      	movs	r2, #1
    3020:	4b04      	ldr	r3, [pc, #16]	; (3034 <system_gclk_init+0x20>)
    3022:	701a      	strb	r2, [r3, #0]
    3024:	0019      	movs	r1, r3
    3026:	780b      	ldrb	r3, [r1, #0]
    3028:	4213      	tst	r3, r2
    302a:	d1fc      	bne.n	3026 <system_gclk_init+0x12>
    302c:	4770      	bx	lr
    302e:	46c0      	nop			; (mov r8, r8)
    3030:	40000400 	.word	0x40000400
    3034:	40000c00 	.word	0x40000c00

00003038 <system_gclk_gen_set_config>:
    3038:	b570      	push	{r4, r5, r6, lr}
    303a:	0006      	movs	r6, r0
    303c:	0004      	movs	r4, r0
    303e:	780d      	ldrb	r5, [r1, #0]
    3040:	022d      	lsls	r5, r5, #8
    3042:	4305      	orrs	r5, r0
    3044:	784b      	ldrb	r3, [r1, #1]
    3046:	2b00      	cmp	r3, #0
    3048:	d002      	beq.n	3050 <system_gclk_gen_set_config+0x18>
    304a:	2380      	movs	r3, #128	; 0x80
    304c:	02db      	lsls	r3, r3, #11
    304e:	431d      	orrs	r5, r3
    3050:	7a4b      	ldrb	r3, [r1, #9]
    3052:	2b00      	cmp	r3, #0
    3054:	d002      	beq.n	305c <system_gclk_gen_set_config+0x24>
    3056:	2380      	movs	r3, #128	; 0x80
    3058:	031b      	lsls	r3, r3, #12
    305a:	431d      	orrs	r5, r3
    305c:	6848      	ldr	r0, [r1, #4]
    305e:	2801      	cmp	r0, #1
    3060:	d910      	bls.n	3084 <system_gclk_gen_set_config+0x4c>
    3062:	1e43      	subs	r3, r0, #1
    3064:	4218      	tst	r0, r3
    3066:	d134      	bne.n	30d2 <system_gclk_gen_set_config+0x9a>
    3068:	2802      	cmp	r0, #2
    306a:	d930      	bls.n	30ce <system_gclk_gen_set_config+0x96>
    306c:	2302      	movs	r3, #2
    306e:	2200      	movs	r2, #0
    3070:	3201      	adds	r2, #1
    3072:	005b      	lsls	r3, r3, #1
    3074:	4298      	cmp	r0, r3
    3076:	d8fb      	bhi.n	3070 <system_gclk_gen_set_config+0x38>
    3078:	0212      	lsls	r2, r2, #8
    307a:	4332      	orrs	r2, r6
    307c:	0014      	movs	r4, r2
    307e:	2380      	movs	r3, #128	; 0x80
    3080:	035b      	lsls	r3, r3, #13
    3082:	431d      	orrs	r5, r3
    3084:	7a0b      	ldrb	r3, [r1, #8]
    3086:	2b00      	cmp	r3, #0
    3088:	d002      	beq.n	3090 <system_gclk_gen_set_config+0x58>
    308a:	2380      	movs	r3, #128	; 0x80
    308c:	039b      	lsls	r3, r3, #14
    308e:	431d      	orrs	r5, r3
    3090:	4a13      	ldr	r2, [pc, #76]	; (30e0 <system_gclk_gen_set_config+0xa8>)
    3092:	7853      	ldrb	r3, [r2, #1]
    3094:	b25b      	sxtb	r3, r3
    3096:	2b00      	cmp	r3, #0
    3098:	dbfb      	blt.n	3092 <system_gclk_gen_set_config+0x5a>
    309a:	4b12      	ldr	r3, [pc, #72]	; (30e4 <system_gclk_gen_set_config+0xac>)
    309c:	4798      	blx	r3
    309e:	4b12      	ldr	r3, [pc, #72]	; (30e8 <system_gclk_gen_set_config+0xb0>)
    30a0:	701e      	strb	r6, [r3, #0]
    30a2:	4a0f      	ldr	r2, [pc, #60]	; (30e0 <system_gclk_gen_set_config+0xa8>)
    30a4:	7853      	ldrb	r3, [r2, #1]
    30a6:	b25b      	sxtb	r3, r3
    30a8:	2b00      	cmp	r3, #0
    30aa:	dbfb      	blt.n	30a4 <system_gclk_gen_set_config+0x6c>
    30ac:	4b0c      	ldr	r3, [pc, #48]	; (30e0 <system_gclk_gen_set_config+0xa8>)
    30ae:	609c      	str	r4, [r3, #8]
    30b0:	001a      	movs	r2, r3
    30b2:	7853      	ldrb	r3, [r2, #1]
    30b4:	b25b      	sxtb	r3, r3
    30b6:	2b00      	cmp	r3, #0
    30b8:	dbfb      	blt.n	30b2 <system_gclk_gen_set_config+0x7a>
    30ba:	4a09      	ldr	r2, [pc, #36]	; (30e0 <system_gclk_gen_set_config+0xa8>)
    30bc:	6853      	ldr	r3, [r2, #4]
    30be:	2180      	movs	r1, #128	; 0x80
    30c0:	0249      	lsls	r1, r1, #9
    30c2:	400b      	ands	r3, r1
    30c4:	431d      	orrs	r5, r3
    30c6:	6055      	str	r5, [r2, #4]
    30c8:	4b08      	ldr	r3, [pc, #32]	; (30ec <system_gclk_gen_set_config+0xb4>)
    30ca:	4798      	blx	r3
    30cc:	bd70      	pop	{r4, r5, r6, pc}
    30ce:	2200      	movs	r2, #0
    30d0:	e7d2      	b.n	3078 <system_gclk_gen_set_config+0x40>
    30d2:	0204      	lsls	r4, r0, #8
    30d4:	4334      	orrs	r4, r6
    30d6:	2380      	movs	r3, #128	; 0x80
    30d8:	029b      	lsls	r3, r3, #10
    30da:	431d      	orrs	r5, r3
    30dc:	e7d2      	b.n	3084 <system_gclk_gen_set_config+0x4c>
    30de:	46c0      	nop			; (mov r8, r8)
    30e0:	40000c00 	.word	0x40000c00
    30e4:	000013bd 	.word	0x000013bd
    30e8:	40000c08 	.word	0x40000c08
    30ec:	000013fd 	.word	0x000013fd

000030f0 <system_gclk_gen_enable>:
    30f0:	b510      	push	{r4, lr}
    30f2:	0004      	movs	r4, r0
    30f4:	4a0b      	ldr	r2, [pc, #44]	; (3124 <system_gclk_gen_enable+0x34>)
    30f6:	7853      	ldrb	r3, [r2, #1]
    30f8:	b25b      	sxtb	r3, r3
    30fa:	2b00      	cmp	r3, #0
    30fc:	dbfb      	blt.n	30f6 <system_gclk_gen_enable+0x6>
    30fe:	4b0a      	ldr	r3, [pc, #40]	; (3128 <system_gclk_gen_enable+0x38>)
    3100:	4798      	blx	r3
    3102:	4b0a      	ldr	r3, [pc, #40]	; (312c <system_gclk_gen_enable+0x3c>)
    3104:	701c      	strb	r4, [r3, #0]
    3106:	4a07      	ldr	r2, [pc, #28]	; (3124 <system_gclk_gen_enable+0x34>)
    3108:	7853      	ldrb	r3, [r2, #1]
    310a:	b25b      	sxtb	r3, r3
    310c:	2b00      	cmp	r3, #0
    310e:	dbfb      	blt.n	3108 <system_gclk_gen_enable+0x18>
    3110:	4a04      	ldr	r2, [pc, #16]	; (3124 <system_gclk_gen_enable+0x34>)
    3112:	6851      	ldr	r1, [r2, #4]
    3114:	2380      	movs	r3, #128	; 0x80
    3116:	025b      	lsls	r3, r3, #9
    3118:	430b      	orrs	r3, r1
    311a:	6053      	str	r3, [r2, #4]
    311c:	4b04      	ldr	r3, [pc, #16]	; (3130 <system_gclk_gen_enable+0x40>)
    311e:	4798      	blx	r3
    3120:	bd10      	pop	{r4, pc}
    3122:	46c0      	nop			; (mov r8, r8)
    3124:	40000c00 	.word	0x40000c00
    3128:	000013bd 	.word	0x000013bd
    312c:	40000c04 	.word	0x40000c04
    3130:	000013fd 	.word	0x000013fd

00003134 <system_gclk_gen_get_hz>:
    3134:	b570      	push	{r4, r5, r6, lr}
    3136:	0004      	movs	r4, r0
    3138:	4a1a      	ldr	r2, [pc, #104]	; (31a4 <system_gclk_gen_get_hz+0x70>)
    313a:	7853      	ldrb	r3, [r2, #1]
    313c:	b25b      	sxtb	r3, r3
    313e:	2b00      	cmp	r3, #0
    3140:	dbfb      	blt.n	313a <system_gclk_gen_get_hz+0x6>
    3142:	4b19      	ldr	r3, [pc, #100]	; (31a8 <system_gclk_gen_get_hz+0x74>)
    3144:	4798      	blx	r3
    3146:	4b19      	ldr	r3, [pc, #100]	; (31ac <system_gclk_gen_get_hz+0x78>)
    3148:	701c      	strb	r4, [r3, #0]
    314a:	4a16      	ldr	r2, [pc, #88]	; (31a4 <system_gclk_gen_get_hz+0x70>)
    314c:	7853      	ldrb	r3, [r2, #1]
    314e:	b25b      	sxtb	r3, r3
    3150:	2b00      	cmp	r3, #0
    3152:	dbfb      	blt.n	314c <system_gclk_gen_get_hz+0x18>
    3154:	4e13      	ldr	r6, [pc, #76]	; (31a4 <system_gclk_gen_get_hz+0x70>)
    3156:	6870      	ldr	r0, [r6, #4]
    3158:	04c0      	lsls	r0, r0, #19
    315a:	0ec0      	lsrs	r0, r0, #27
    315c:	4b14      	ldr	r3, [pc, #80]	; (31b0 <system_gclk_gen_get_hz+0x7c>)
    315e:	4798      	blx	r3
    3160:	0005      	movs	r5, r0
    3162:	4b12      	ldr	r3, [pc, #72]	; (31ac <system_gclk_gen_get_hz+0x78>)
    3164:	701c      	strb	r4, [r3, #0]
    3166:	6876      	ldr	r6, [r6, #4]
    3168:	02f6      	lsls	r6, r6, #11
    316a:	0ff6      	lsrs	r6, r6, #31
    316c:	4b11      	ldr	r3, [pc, #68]	; (31b4 <system_gclk_gen_get_hz+0x80>)
    316e:	701c      	strb	r4, [r3, #0]
    3170:	4a0c      	ldr	r2, [pc, #48]	; (31a4 <system_gclk_gen_get_hz+0x70>)
    3172:	7853      	ldrb	r3, [r2, #1]
    3174:	b25b      	sxtb	r3, r3
    3176:	2b00      	cmp	r3, #0
    3178:	dbfb      	blt.n	3172 <system_gclk_gen_get_hz+0x3e>
    317a:	4b0a      	ldr	r3, [pc, #40]	; (31a4 <system_gclk_gen_get_hz+0x70>)
    317c:	689c      	ldr	r4, [r3, #8]
    317e:	0224      	lsls	r4, r4, #8
    3180:	0c24      	lsrs	r4, r4, #16
    3182:	4b0d      	ldr	r3, [pc, #52]	; (31b8 <system_gclk_gen_get_hz+0x84>)
    3184:	4798      	blx	r3
    3186:	2e00      	cmp	r6, #0
    3188:	d107      	bne.n	319a <system_gclk_gen_get_hz+0x66>
    318a:	2c01      	cmp	r4, #1
    318c:	d907      	bls.n	319e <system_gclk_gen_get_hz+0x6a>
    318e:	0021      	movs	r1, r4
    3190:	0028      	movs	r0, r5
    3192:	4b0a      	ldr	r3, [pc, #40]	; (31bc <system_gclk_gen_get_hz+0x88>)
    3194:	4798      	blx	r3
    3196:	0005      	movs	r5, r0
    3198:	e001      	b.n	319e <system_gclk_gen_get_hz+0x6a>
    319a:	3401      	adds	r4, #1
    319c:	40e5      	lsrs	r5, r4
    319e:	0028      	movs	r0, r5
    31a0:	bd70      	pop	{r4, r5, r6, pc}
    31a2:	46c0      	nop			; (mov r8, r8)
    31a4:	40000c00 	.word	0x40000c00
    31a8:	000013bd 	.word	0x000013bd
    31ac:	40000c04 	.word	0x40000c04
    31b0:	00002c05 	.word	0x00002c05
    31b4:	40000c08 	.word	0x40000c08
    31b8:	000013fd 	.word	0x000013fd
    31bc:	0000574d 	.word	0x0000574d

000031c0 <system_gclk_chan_enable>:
    31c0:	b510      	push	{r4, lr}
    31c2:	0004      	movs	r4, r0
    31c4:	4b06      	ldr	r3, [pc, #24]	; (31e0 <system_gclk_chan_enable+0x20>)
    31c6:	4798      	blx	r3
    31c8:	4b06      	ldr	r3, [pc, #24]	; (31e4 <system_gclk_chan_enable+0x24>)
    31ca:	701c      	strb	r4, [r3, #0]
    31cc:	4a06      	ldr	r2, [pc, #24]	; (31e8 <system_gclk_chan_enable+0x28>)
    31ce:	8853      	ldrh	r3, [r2, #2]
    31d0:	2180      	movs	r1, #128	; 0x80
    31d2:	01c9      	lsls	r1, r1, #7
    31d4:	430b      	orrs	r3, r1
    31d6:	8053      	strh	r3, [r2, #2]
    31d8:	4b04      	ldr	r3, [pc, #16]	; (31ec <system_gclk_chan_enable+0x2c>)
    31da:	4798      	blx	r3
    31dc:	bd10      	pop	{r4, pc}
    31de:	46c0      	nop			; (mov r8, r8)
    31e0:	000013bd 	.word	0x000013bd
    31e4:	40000c02 	.word	0x40000c02
    31e8:	40000c00 	.word	0x40000c00
    31ec:	000013fd 	.word	0x000013fd

000031f0 <system_gclk_chan_disable>:
    31f0:	b510      	push	{r4, lr}
    31f2:	0004      	movs	r4, r0
    31f4:	4b0f      	ldr	r3, [pc, #60]	; (3234 <system_gclk_chan_disable+0x44>)
    31f6:	4798      	blx	r3
    31f8:	4b0f      	ldr	r3, [pc, #60]	; (3238 <system_gclk_chan_disable+0x48>)
    31fa:	701c      	strb	r4, [r3, #0]
    31fc:	4a0f      	ldr	r2, [pc, #60]	; (323c <system_gclk_chan_disable+0x4c>)
    31fe:	8853      	ldrh	r3, [r2, #2]
    3200:	051b      	lsls	r3, r3, #20
    3202:	0f18      	lsrs	r0, r3, #28
    3204:	8853      	ldrh	r3, [r2, #2]
    3206:	490e      	ldr	r1, [pc, #56]	; (3240 <system_gclk_chan_disable+0x50>)
    3208:	400b      	ands	r3, r1
    320a:	8053      	strh	r3, [r2, #2]
    320c:	8853      	ldrh	r3, [r2, #2]
    320e:	490d      	ldr	r1, [pc, #52]	; (3244 <system_gclk_chan_disable+0x54>)
    3210:	400b      	ands	r3, r1
    3212:	8053      	strh	r3, [r2, #2]
    3214:	0011      	movs	r1, r2
    3216:	2280      	movs	r2, #128	; 0x80
    3218:	01d2      	lsls	r2, r2, #7
    321a:	884b      	ldrh	r3, [r1, #2]
    321c:	4213      	tst	r3, r2
    321e:	d1fc      	bne.n	321a <system_gclk_chan_disable+0x2a>
    3220:	4906      	ldr	r1, [pc, #24]	; (323c <system_gclk_chan_disable+0x4c>)
    3222:	884a      	ldrh	r2, [r1, #2]
    3224:	0203      	lsls	r3, r0, #8
    3226:	4806      	ldr	r0, [pc, #24]	; (3240 <system_gclk_chan_disable+0x50>)
    3228:	4002      	ands	r2, r0
    322a:	4313      	orrs	r3, r2
    322c:	804b      	strh	r3, [r1, #2]
    322e:	4b06      	ldr	r3, [pc, #24]	; (3248 <system_gclk_chan_disable+0x58>)
    3230:	4798      	blx	r3
    3232:	bd10      	pop	{r4, pc}
    3234:	000013bd 	.word	0x000013bd
    3238:	40000c02 	.word	0x40000c02
    323c:	40000c00 	.word	0x40000c00
    3240:	fffff0ff 	.word	0xfffff0ff
    3244:	ffffbfff 	.word	0xffffbfff
    3248:	000013fd 	.word	0x000013fd

0000324c <system_gclk_chan_set_config>:
    324c:	b510      	push	{r4, lr}
    324e:	780c      	ldrb	r4, [r1, #0]
    3250:	0224      	lsls	r4, r4, #8
    3252:	4304      	orrs	r4, r0
    3254:	4b02      	ldr	r3, [pc, #8]	; (3260 <system_gclk_chan_set_config+0x14>)
    3256:	4798      	blx	r3
    3258:	b2a4      	uxth	r4, r4
    325a:	4b02      	ldr	r3, [pc, #8]	; (3264 <system_gclk_chan_set_config+0x18>)
    325c:	805c      	strh	r4, [r3, #2]
    325e:	bd10      	pop	{r4, pc}
    3260:	000031f1 	.word	0x000031f1
    3264:	40000c00 	.word	0x40000c00

00003268 <system_gclk_chan_get_hz>:
    3268:	b510      	push	{r4, lr}
    326a:	0004      	movs	r4, r0
    326c:	4b06      	ldr	r3, [pc, #24]	; (3288 <system_gclk_chan_get_hz+0x20>)
    326e:	4798      	blx	r3
    3270:	4b06      	ldr	r3, [pc, #24]	; (328c <system_gclk_chan_get_hz+0x24>)
    3272:	701c      	strb	r4, [r3, #0]
    3274:	4b06      	ldr	r3, [pc, #24]	; (3290 <system_gclk_chan_get_hz+0x28>)
    3276:	885c      	ldrh	r4, [r3, #2]
    3278:	0524      	lsls	r4, r4, #20
    327a:	0f24      	lsrs	r4, r4, #28
    327c:	4b05      	ldr	r3, [pc, #20]	; (3294 <system_gclk_chan_get_hz+0x2c>)
    327e:	4798      	blx	r3
    3280:	0020      	movs	r0, r4
    3282:	4b05      	ldr	r3, [pc, #20]	; (3298 <system_gclk_chan_get_hz+0x30>)
    3284:	4798      	blx	r3
    3286:	bd10      	pop	{r4, pc}
    3288:	000013bd 	.word	0x000013bd
    328c:	40000c02 	.word	0x40000c02
    3290:	40000c00 	.word	0x40000c00
    3294:	000013fd 	.word	0x000013fd
    3298:	00003135 	.word	0x00003135

0000329c <_system_pinmux_config>:
    329c:	b530      	push	{r4, r5, lr}
    329e:	78d3      	ldrb	r3, [r2, #3]
    32a0:	2b00      	cmp	r3, #0
    32a2:	d135      	bne.n	3310 <_system_pinmux_config+0x74>
    32a4:	7813      	ldrb	r3, [r2, #0]
    32a6:	2b80      	cmp	r3, #128	; 0x80
    32a8:	d029      	beq.n	32fe <_system_pinmux_config+0x62>
    32aa:	061b      	lsls	r3, r3, #24
    32ac:	2480      	movs	r4, #128	; 0x80
    32ae:	0264      	lsls	r4, r4, #9
    32b0:	4323      	orrs	r3, r4
    32b2:	7854      	ldrb	r4, [r2, #1]
    32b4:	2502      	movs	r5, #2
    32b6:	43ac      	bics	r4, r5
    32b8:	d106      	bne.n	32c8 <_system_pinmux_config+0x2c>
    32ba:	7894      	ldrb	r4, [r2, #2]
    32bc:	2c00      	cmp	r4, #0
    32be:	d120      	bne.n	3302 <_system_pinmux_config+0x66>
    32c0:	2480      	movs	r4, #128	; 0x80
    32c2:	02a4      	lsls	r4, r4, #10
    32c4:	4323      	orrs	r3, r4
    32c6:	6041      	str	r1, [r0, #4]
    32c8:	7854      	ldrb	r4, [r2, #1]
    32ca:	3c01      	subs	r4, #1
    32cc:	2c01      	cmp	r4, #1
    32ce:	d91c      	bls.n	330a <_system_pinmux_config+0x6e>
    32d0:	040d      	lsls	r5, r1, #16
    32d2:	0c2d      	lsrs	r5, r5, #16
    32d4:	24a0      	movs	r4, #160	; 0xa0
    32d6:	05e4      	lsls	r4, r4, #23
    32d8:	432c      	orrs	r4, r5
    32da:	431c      	orrs	r4, r3
    32dc:	6284      	str	r4, [r0, #40]	; 0x28
    32de:	0c0d      	lsrs	r5, r1, #16
    32e0:	24d0      	movs	r4, #208	; 0xd0
    32e2:	0624      	lsls	r4, r4, #24
    32e4:	432c      	orrs	r4, r5
    32e6:	431c      	orrs	r4, r3
    32e8:	6284      	str	r4, [r0, #40]	; 0x28
    32ea:	78d4      	ldrb	r4, [r2, #3]
    32ec:	2c00      	cmp	r4, #0
    32ee:	d122      	bne.n	3336 <_system_pinmux_config+0x9a>
    32f0:	035b      	lsls	r3, r3, #13
    32f2:	d51c      	bpl.n	332e <_system_pinmux_config+0x92>
    32f4:	7893      	ldrb	r3, [r2, #2]
    32f6:	2b01      	cmp	r3, #1
    32f8:	d01e      	beq.n	3338 <_system_pinmux_config+0x9c>
    32fa:	6141      	str	r1, [r0, #20]
    32fc:	e017      	b.n	332e <_system_pinmux_config+0x92>
    32fe:	2300      	movs	r3, #0
    3300:	e7d7      	b.n	32b2 <_system_pinmux_config+0x16>
    3302:	24c0      	movs	r4, #192	; 0xc0
    3304:	02e4      	lsls	r4, r4, #11
    3306:	4323      	orrs	r3, r4
    3308:	e7dd      	b.n	32c6 <_system_pinmux_config+0x2a>
    330a:	4c0d      	ldr	r4, [pc, #52]	; (3340 <_system_pinmux_config+0xa4>)
    330c:	4023      	ands	r3, r4
    330e:	e7df      	b.n	32d0 <_system_pinmux_config+0x34>
    3310:	6041      	str	r1, [r0, #4]
    3312:	040c      	lsls	r4, r1, #16
    3314:	0c24      	lsrs	r4, r4, #16
    3316:	23a0      	movs	r3, #160	; 0xa0
    3318:	05db      	lsls	r3, r3, #23
    331a:	4323      	orrs	r3, r4
    331c:	6283      	str	r3, [r0, #40]	; 0x28
    331e:	0c0c      	lsrs	r4, r1, #16
    3320:	23d0      	movs	r3, #208	; 0xd0
    3322:	061b      	lsls	r3, r3, #24
    3324:	4323      	orrs	r3, r4
    3326:	6283      	str	r3, [r0, #40]	; 0x28
    3328:	78d3      	ldrb	r3, [r2, #3]
    332a:	2b00      	cmp	r3, #0
    332c:	d103      	bne.n	3336 <_system_pinmux_config+0x9a>
    332e:	7853      	ldrb	r3, [r2, #1]
    3330:	3b01      	subs	r3, #1
    3332:	2b01      	cmp	r3, #1
    3334:	d902      	bls.n	333c <_system_pinmux_config+0xa0>
    3336:	bd30      	pop	{r4, r5, pc}
    3338:	6181      	str	r1, [r0, #24]
    333a:	e7f8      	b.n	332e <_system_pinmux_config+0x92>
    333c:	6081      	str	r1, [r0, #8]
    333e:	e7fa      	b.n	3336 <_system_pinmux_config+0x9a>
    3340:	fffbffff 	.word	0xfffbffff

00003344 <system_pinmux_pin_set_config>:
    3344:	b510      	push	{r4, lr}
    3346:	000a      	movs	r2, r1
    3348:	09c1      	lsrs	r1, r0, #7
    334a:	2300      	movs	r3, #0
    334c:	2900      	cmp	r1, #0
    334e:	d104      	bne.n	335a <system_pinmux_pin_set_config+0x16>
    3350:	0943      	lsrs	r3, r0, #5
    3352:	01db      	lsls	r3, r3, #7
    3354:	4905      	ldr	r1, [pc, #20]	; (336c <system_pinmux_pin_set_config+0x28>)
    3356:	468c      	mov	ip, r1
    3358:	4463      	add	r3, ip
    335a:	241f      	movs	r4, #31
    335c:	4020      	ands	r0, r4
    335e:	2101      	movs	r1, #1
    3360:	4081      	lsls	r1, r0
    3362:	0018      	movs	r0, r3
    3364:	4b02      	ldr	r3, [pc, #8]	; (3370 <system_pinmux_pin_set_config+0x2c>)
    3366:	4798      	blx	r3
    3368:	bd10      	pop	{r4, pc}
    336a:	46c0      	nop			; (mov r8, r8)
    336c:	41004400 	.word	0x41004400
    3370:	0000329d 	.word	0x0000329d

00003374 <_system_dummy_init>:
    3374:	4770      	bx	lr
	...

00003378 <system_init>:
    3378:	b510      	push	{r4, lr}
    337a:	4b05      	ldr	r3, [pc, #20]	; (3390 <system_init+0x18>)
    337c:	4798      	blx	r3
    337e:	4b05      	ldr	r3, [pc, #20]	; (3394 <system_init+0x1c>)
    3380:	4798      	blx	r3
    3382:	4b05      	ldr	r3, [pc, #20]	; (3398 <system_init+0x20>)
    3384:	4798      	blx	r3
    3386:	4b05      	ldr	r3, [pc, #20]	; (339c <system_init+0x24>)
    3388:	4798      	blx	r3
    338a:	4b05      	ldr	r3, [pc, #20]	; (33a0 <system_init+0x28>)
    338c:	4798      	blx	r3
    338e:	bd10      	pop	{r4, pc}
    3390:	00002eb5 	.word	0x00002eb5
    3394:	0000142d 	.word	0x0000142d
    3398:	00003375 	.word	0x00003375
    339c:	0000151d 	.word	0x0000151d
    33a0:	00003375 	.word	0x00003375

000033a4 <Dummy_Handler>:
    33a4:	e7fe      	b.n	33a4 <Dummy_Handler>
	...

000033a8 <Reset_Handler>:
    33a8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    33aa:	4a2a      	ldr	r2, [pc, #168]	; (3454 <Reset_Handler+0xac>)
    33ac:	4b2a      	ldr	r3, [pc, #168]	; (3458 <Reset_Handler+0xb0>)
    33ae:	429a      	cmp	r2, r3
    33b0:	d011      	beq.n	33d6 <Reset_Handler+0x2e>
    33b2:	001a      	movs	r2, r3
    33b4:	4b29      	ldr	r3, [pc, #164]	; (345c <Reset_Handler+0xb4>)
    33b6:	429a      	cmp	r2, r3
    33b8:	d20d      	bcs.n	33d6 <Reset_Handler+0x2e>
    33ba:	4a29      	ldr	r2, [pc, #164]	; (3460 <Reset_Handler+0xb8>)
    33bc:	3303      	adds	r3, #3
    33be:	1a9b      	subs	r3, r3, r2
    33c0:	089b      	lsrs	r3, r3, #2
    33c2:	3301      	adds	r3, #1
    33c4:	009b      	lsls	r3, r3, #2
    33c6:	2200      	movs	r2, #0
    33c8:	4823      	ldr	r0, [pc, #140]	; (3458 <Reset_Handler+0xb0>)
    33ca:	4922      	ldr	r1, [pc, #136]	; (3454 <Reset_Handler+0xac>)
    33cc:	588c      	ldr	r4, [r1, r2]
    33ce:	5084      	str	r4, [r0, r2]
    33d0:	3204      	adds	r2, #4
    33d2:	429a      	cmp	r2, r3
    33d4:	d1fa      	bne.n	33cc <Reset_Handler+0x24>
    33d6:	4a23      	ldr	r2, [pc, #140]	; (3464 <Reset_Handler+0xbc>)
    33d8:	4b23      	ldr	r3, [pc, #140]	; (3468 <Reset_Handler+0xc0>)
    33da:	429a      	cmp	r2, r3
    33dc:	d20a      	bcs.n	33f4 <Reset_Handler+0x4c>
    33de:	43d3      	mvns	r3, r2
    33e0:	4921      	ldr	r1, [pc, #132]	; (3468 <Reset_Handler+0xc0>)
    33e2:	185b      	adds	r3, r3, r1
    33e4:	2103      	movs	r1, #3
    33e6:	438b      	bics	r3, r1
    33e8:	3304      	adds	r3, #4
    33ea:	189b      	adds	r3, r3, r2
    33ec:	2100      	movs	r1, #0
    33ee:	c202      	stmia	r2!, {r1}
    33f0:	4293      	cmp	r3, r2
    33f2:	d1fc      	bne.n	33ee <Reset_Handler+0x46>
    33f4:	4a1d      	ldr	r2, [pc, #116]	; (346c <Reset_Handler+0xc4>)
    33f6:	21ff      	movs	r1, #255	; 0xff
    33f8:	4b1d      	ldr	r3, [pc, #116]	; (3470 <Reset_Handler+0xc8>)
    33fa:	438b      	bics	r3, r1
    33fc:	6093      	str	r3, [r2, #8]
    33fe:	39fd      	subs	r1, #253	; 0xfd
    3400:	2390      	movs	r3, #144	; 0x90
    3402:	005b      	lsls	r3, r3, #1
    3404:	4a1b      	ldr	r2, [pc, #108]	; (3474 <Reset_Handler+0xcc>)
    3406:	50d1      	str	r1, [r2, r3]
    3408:	4a1b      	ldr	r2, [pc, #108]	; (3478 <Reset_Handler+0xd0>)
    340a:	78d3      	ldrb	r3, [r2, #3]
    340c:	2503      	movs	r5, #3
    340e:	43ab      	bics	r3, r5
    3410:	2402      	movs	r4, #2
    3412:	4323      	orrs	r3, r4
    3414:	70d3      	strb	r3, [r2, #3]
    3416:	78d3      	ldrb	r3, [r2, #3]
    3418:	270c      	movs	r7, #12
    341a:	43bb      	bics	r3, r7
    341c:	2608      	movs	r6, #8
    341e:	4333      	orrs	r3, r6
    3420:	70d3      	strb	r3, [r2, #3]
    3422:	4b16      	ldr	r3, [pc, #88]	; (347c <Reset_Handler+0xd4>)
    3424:	7b98      	ldrb	r0, [r3, #14]
    3426:	2230      	movs	r2, #48	; 0x30
    3428:	4390      	bics	r0, r2
    342a:	2220      	movs	r2, #32
    342c:	4310      	orrs	r0, r2
    342e:	7398      	strb	r0, [r3, #14]
    3430:	7b99      	ldrb	r1, [r3, #14]
    3432:	43b9      	bics	r1, r7
    3434:	4331      	orrs	r1, r6
    3436:	7399      	strb	r1, [r3, #14]
    3438:	7b9a      	ldrb	r2, [r3, #14]
    343a:	43aa      	bics	r2, r5
    343c:	4322      	orrs	r2, r4
    343e:	739a      	strb	r2, [r3, #14]
    3440:	4a0f      	ldr	r2, [pc, #60]	; (3480 <Reset_Handler+0xd8>)
    3442:	6853      	ldr	r3, [r2, #4]
    3444:	2180      	movs	r1, #128	; 0x80
    3446:	430b      	orrs	r3, r1
    3448:	6053      	str	r3, [r2, #4]
    344a:	4b0e      	ldr	r3, [pc, #56]	; (3484 <Reset_Handler+0xdc>)
    344c:	4798      	blx	r3
    344e:	4b0e      	ldr	r3, [pc, #56]	; (3488 <Reset_Handler+0xe0>)
    3450:	4798      	blx	r3
    3452:	e7fe      	b.n	3452 <Reset_Handler+0xaa>
    3454:	00007b68 	.word	0x00007b68
    3458:	20000000 	.word	0x20000000
    345c:	20000200 	.word	0x20000200
    3460:	20000004 	.word	0x20000004
    3464:	20000200 	.word	0x20000200
    3468:	200006dc 	.word	0x200006dc
    346c:	e000ed00 	.word	0xe000ed00
    3470:	00000000 	.word	0x00000000
    3474:	41007000 	.word	0x41007000
    3478:	41005000 	.word	0x41005000
    347c:	41004800 	.word	0x41004800
    3480:	41004000 	.word	0x41004000
    3484:	00005a99 	.word	0x00005a99
    3488:	000054c9 	.word	0x000054c9

0000348c <_read>:
    348c:	b5f0      	push	{r4, r5, r6, r7, lr}
    348e:	46c6      	mov	lr, r8
    3490:	b500      	push	{lr}
    3492:	000c      	movs	r4, r1
    3494:	4690      	mov	r8, r2
    3496:	2800      	cmp	r0, #0
    3498:	d10f      	bne.n	34ba <_read+0x2e>
    349a:	2a00      	cmp	r2, #0
    349c:	dd11      	ble.n	34c2 <_read+0x36>
    349e:	188f      	adds	r7, r1, r2
    34a0:	4e09      	ldr	r6, [pc, #36]	; (34c8 <_read+0x3c>)
    34a2:	4d0a      	ldr	r5, [pc, #40]	; (34cc <_read+0x40>)
    34a4:	6830      	ldr	r0, [r6, #0]
    34a6:	0021      	movs	r1, r4
    34a8:	682b      	ldr	r3, [r5, #0]
    34aa:	4798      	blx	r3
    34ac:	3401      	adds	r4, #1
    34ae:	42bc      	cmp	r4, r7
    34b0:	d1f8      	bne.n	34a4 <_read+0x18>
    34b2:	4640      	mov	r0, r8
    34b4:	bc04      	pop	{r2}
    34b6:	4690      	mov	r8, r2
    34b8:	bdf0      	pop	{r4, r5, r6, r7, pc}
    34ba:	2301      	movs	r3, #1
    34bc:	425b      	negs	r3, r3
    34be:	4698      	mov	r8, r3
    34c0:	e7f7      	b.n	34b2 <_read+0x26>
    34c2:	4680      	mov	r8, r0
    34c4:	e7f5      	b.n	34b2 <_read+0x26>
    34c6:	46c0      	nop			; (mov r8, r8)
    34c8:	20000610 	.word	0x20000610
    34cc:	20000608 	.word	0x20000608

000034d0 <_write>:
    34d0:	b5f0      	push	{r4, r5, r6, r7, lr}
    34d2:	46c6      	mov	lr, r8
    34d4:	b500      	push	{lr}
    34d6:	000e      	movs	r6, r1
    34d8:	0015      	movs	r5, r2
    34da:	3801      	subs	r0, #1
    34dc:	2802      	cmp	r0, #2
    34de:	d810      	bhi.n	3502 <_write+0x32>
    34e0:	2a00      	cmp	r2, #0
    34e2:	d011      	beq.n	3508 <_write+0x38>
    34e4:	2400      	movs	r4, #0
    34e6:	4b0c      	ldr	r3, [pc, #48]	; (3518 <_write+0x48>)
    34e8:	4698      	mov	r8, r3
    34ea:	4f0c      	ldr	r7, [pc, #48]	; (351c <_write+0x4c>)
    34ec:	4643      	mov	r3, r8
    34ee:	6818      	ldr	r0, [r3, #0]
    34f0:	5d31      	ldrb	r1, [r6, r4]
    34f2:	683b      	ldr	r3, [r7, #0]
    34f4:	4798      	blx	r3
    34f6:	2800      	cmp	r0, #0
    34f8:	db08      	blt.n	350c <_write+0x3c>
    34fa:	3401      	adds	r4, #1
    34fc:	42a5      	cmp	r5, r4
    34fe:	d1f5      	bne.n	34ec <_write+0x1c>
    3500:	e006      	b.n	3510 <_write+0x40>
    3502:	2401      	movs	r4, #1
    3504:	4264      	negs	r4, r4
    3506:	e003      	b.n	3510 <_write+0x40>
    3508:	0014      	movs	r4, r2
    350a:	e001      	b.n	3510 <_write+0x40>
    350c:	2401      	movs	r4, #1
    350e:	4264      	negs	r4, r4
    3510:	0020      	movs	r0, r4
    3512:	bc04      	pop	{r2}
    3514:	4690      	mov	r8, r2
    3516:	bdf0      	pop	{r4, r5, r6, r7, pc}
    3518:	20000610 	.word	0x20000610
    351c:	2000060c 	.word	0x2000060c

00003520 <_sbrk>:
    3520:	0003      	movs	r3, r0
    3522:	4a06      	ldr	r2, [pc, #24]	; (353c <_sbrk+0x1c>)
    3524:	6812      	ldr	r2, [r2, #0]
    3526:	2a00      	cmp	r2, #0
    3528:	d004      	beq.n	3534 <_sbrk+0x14>
    352a:	4a04      	ldr	r2, [pc, #16]	; (353c <_sbrk+0x1c>)
    352c:	6810      	ldr	r0, [r2, #0]
    352e:	18c3      	adds	r3, r0, r3
    3530:	6013      	str	r3, [r2, #0]
    3532:	4770      	bx	lr
    3534:	4902      	ldr	r1, [pc, #8]	; (3540 <_sbrk+0x20>)
    3536:	4a01      	ldr	r2, [pc, #4]	; (353c <_sbrk+0x1c>)
    3538:	6011      	str	r1, [r2, #0]
    353a:	e7f6      	b.n	352a <_sbrk+0xa>
    353c:	200002e4 	.word	0x200002e4
    3540:	200026e0 	.word	0x200026e0

00003544 <_close>:
    3544:	2001      	movs	r0, #1
    3546:	4240      	negs	r0, r0
    3548:	4770      	bx	lr

0000354a <_fstat>:
    354a:	2380      	movs	r3, #128	; 0x80
    354c:	019b      	lsls	r3, r3, #6
    354e:	604b      	str	r3, [r1, #4]
    3550:	2000      	movs	r0, #0
    3552:	4770      	bx	lr

00003554 <_isatty>:
    3554:	2001      	movs	r0, #1
    3556:	4770      	bx	lr

00003558 <_lseek>:
    3558:	2000      	movs	r0, #0
    355a:	4770      	bx	lr

0000355c <disk_initialize>:
 *
 * \return 0 or disk status in combination of DSTATUS bits
 *         (STA_NOINIT, STA_PROTECT).
 */
DSTATUS disk_initialize(BYTE drv)
{
    355c:	b530      	push	{r4, r5, lr}
    355e:	b087      	sub	sp, #28
    3560:	0004      	movs	r4, r0
	/* Initialize and set time structure to default */
	struct rtc_calendar_time time;
	rtc_calendar_get_time_defaults(&time);

	/* Set defaults into configuration structure */
	config->prescaler           = RTC_CALENDAR_PRESCALER_DIV_1024;
    3562:	aa01      	add	r2, sp, #4
    3564:	23a0      	movs	r3, #160	; 0xa0
    3566:	011b      	lsls	r3, r3, #4
    3568:	8013      	strh	r3, [r2, #0]
	config->clear_on_match      = false;
    356a:	2300      	movs	r3, #0
    356c:	7093      	strb	r3, [r2, #2]
#ifdef FEATURE_RTC_CONTINUOUSLY_UPDATED
	config->continuously_update = false;
    356e:	70d3      	strb	r3, [r2, #3]
#endif
	config->clock_24h           = false;
	config->year_init_value     = 2000;
    3570:	21fa      	movs	r1, #250	; 0xfa
    3572:	00c9      	lsls	r1, r1, #3
    3574:	80d1      	strh	r1, [r2, #6]
	config_rtc_calendar.clock_24h     = true;
    3576:	2101      	movs	r1, #1
    3578:	7111      	strb	r1, [r2, #4]
	config_rtc_calendar.alarm[0].time = init_time;
    357a:	2004      	movs	r0, #4
    357c:	7210      	strb	r0, [r2, #8]
    357e:	7253      	strb	r3, [r2, #9]
    3580:	7293      	strb	r3, [r2, #10]
    3582:	72d3      	strb	r3, [r2, #11]
    3584:	7311      	strb	r1, [r2, #12]
    3586:	7351      	strb	r1, [r2, #13]
    3588:	4b14      	ldr	r3, [pc, #80]	; (35dc <disk_initialize+0x80>)
    358a:	81d3      	strh	r3, [r2, #14]
	config_rtc_calendar.alarm[0].mask = RTC_CALENDAR_ALARM_MASK_YEAR;
    358c:	2306      	movs	r3, #6
    358e:	7413      	strb	r3, [r2, #16]
	rtc_calendar_init(&rtc_instance, RTC, &config_rtc_calendar);
    3590:	4d13      	ldr	r5, [pc, #76]	; (35e0 <disk_initialize+0x84>)
    3592:	4914      	ldr	r1, [pc, #80]	; (35e4 <disk_initialize+0x88>)
    3594:	0028      	movs	r0, r5
    3596:	4b14      	ldr	r3, [pc, #80]	; (35e8 <disk_initialize+0x8c>)
    3598:	4798      	blx	r3
	rtc_calendar_enable(&rtc_instance);
    359a:	0028      	movs	r0, r5
    359c:	4b13      	ldr	r3, [pc, #76]	; (35ec <disk_initialize+0x90>)
    359e:	4798      	blx	r3
		return STA_NOINIT;
	}
#else
	if (drv > MAX_LUN) {
		/* At least one of the LUN should be defined */
		return STA_NOINIT;
    35a0:	2001      	movs	r0, #1
	if (drv > MAX_LUN) {
    35a2:	2c01      	cmp	r4, #1
    35a4:	d901      	bls.n	35aa <disk_initialize+0x4e>
		return STA_PROTECT;
	}

	/* The memory should already be initialized */
	return 0;
}
    35a6:	b007      	add	sp, #28
    35a8:	bd30      	pop	{r4, r5, pc}
		mem_status = mem_test_unit_ready(drv);
    35aa:	0020      	movs	r0, r4
    35ac:	4b10      	ldr	r3, [pc, #64]	; (35f0 <disk_initialize+0x94>)
    35ae:	4798      	blx	r3
    35b0:	0003      	movs	r3, r0
		if (CTRL_BUSY != mem_status) {
    35b2:	2803      	cmp	r0, #3
    35b4:	d106      	bne.n	35c4 <disk_initialize+0x68>
		mem_status = mem_test_unit_ready(drv);
    35b6:	0020      	movs	r0, r4
    35b8:	4b0d      	ldr	r3, [pc, #52]	; (35f0 <disk_initialize+0x94>)
    35ba:	4798      	blx	r3
    35bc:	0003      	movs	r3, r0
		return STA_NOINIT;
    35be:	2001      	movs	r0, #1
		if (CTRL_BUSY != mem_status) {
    35c0:	2b03      	cmp	r3, #3
    35c2:	d0f0      	beq.n	35a6 <disk_initialize+0x4a>
	if (mem_status != CTRL_GOOD) {
    35c4:	2b00      	cmp	r3, #0
    35c6:	d106      	bne.n	35d6 <disk_initialize+0x7a>
	if (mem_wr_protect(drv)) {
    35c8:	0020      	movs	r0, r4
    35ca:	4b0a      	ldr	r3, [pc, #40]	; (35f4 <disk_initialize+0x98>)
    35cc:	4798      	blx	r3
	return 0;
    35ce:	1e43      	subs	r3, r0, #1
    35d0:	4198      	sbcs	r0, r3
    35d2:	0080      	lsls	r0, r0, #2
    35d4:	e7e7      	b.n	35a6 <disk_initialize+0x4a>
		return STA_NOINIT;
    35d6:	2001      	movs	r0, #1
    35d8:	e7e5      	b.n	35a6 <disk_initialize+0x4a>
    35da:	46c0      	nop			; (mov r8, r8)
    35dc:	000007de 	.word	0x000007de
    35e0:	20000614 	.word	0x20000614
    35e4:	40001400 	.word	0x40001400
    35e8:	00001a35 	.word	0x00001a35
    35ec:	000018d1 	.word	0x000018d1
    35f0:	00001329 	.word	0x00001329
    35f4:	00001365 	.word	0x00001365

000035f8 <disk_status>:
 *
 * \return 0 or disk status in combination of DSTATUS bits
 *         (STA_NOINIT, STA_NODISK, STA_PROTECT).
 */
DSTATUS disk_status(BYTE drv)
{
    35f8:	b510      	push	{r4, lr}
	switch (mem_test_unit_ready(drv)) {
    35fa:	4b05      	ldr	r3, [pc, #20]	; (3610 <disk_status+0x18>)
    35fc:	4798      	blx	r3
    35fe:	1e03      	subs	r3, r0, #0
    3600:	d004      	beq.n	360c <disk_status+0x14>
	case CTRL_GOOD:
		return 0;
	case CTRL_NO_PRESENT:
		return STA_NOINIT | STA_NODISK;
    3602:	2003      	movs	r0, #3
	switch (mem_test_unit_ready(drv)) {
    3604:	2b02      	cmp	r3, #2
    3606:	d000      	beq.n	360a <disk_status+0x12>
	default:
		return STA_NOINIT;
    3608:	3802      	subs	r0, #2
	}
}
    360a:	bd10      	pop	{r4, pc}
		return 0;
    360c:	2000      	movs	r0, #0
    360e:	e7fc      	b.n	360a <disk_status+0x12>
    3610:	00001329 	.word	0x00001329

00003614 <disk_read>:
 * \param count Number of sectors to read (1..255).
 *
 * \return RES_OK for success, otherwise DRESULT error code.
 */
DRESULT disk_read(BYTE drv, BYTE *buff, DWORD sector, BYTE count)
{
    3614:	b5f0      	push	{r4, r5, r6, r7, lr}
    3616:	46de      	mov	lr, fp
    3618:	464f      	mov	r7, r9
    361a:	4646      	mov	r6, r8
    361c:	b5c0      	push	{r6, r7, lr}
    361e:	b084      	sub	sp, #16
    3620:	9001      	str	r0, [sp, #4]
    3622:	000d      	movs	r5, r1
    3624:	0014      	movs	r4, r2
    3626:	001f      	movs	r7, r3
#if ACCESS_MEM_TO_RAM
	uint8_t uc_sector_size = mem_sector_size(drv);
    3628:	4b18      	ldr	r3, [pc, #96]	; (368c <disk_read+0x78>)
    362a:	4798      	blx	r3
    362c:	0006      	movs	r6, r0
	uint32_t i;
	uint32_t ul_last_sector_num;

	if (uc_sector_size == 0) {
		return RES_ERROR;
    362e:	2001      	movs	r0, #1
	if (uc_sector_size == 0) {
    3630:	2e00      	cmp	r6, #0
    3632:	d105      	bne.n	3640 <disk_read+0x2c>
	return RES_OK;

#else
	return RES_ERROR;
#endif
}
    3634:	b004      	add	sp, #16
    3636:	bc1c      	pop	{r2, r3, r4}
    3638:	4690      	mov	r8, r2
    363a:	4699      	mov	r9, r3
    363c:	46a3      	mov	fp, r4
    363e:	bdf0      	pop	{r4, r5, r6, r7, pc}
	mem_read_capacity(drv, &ul_last_sector_num);
    3640:	a903      	add	r1, sp, #12
    3642:	9801      	ldr	r0, [sp, #4]
    3644:	4b12      	ldr	r3, [pc, #72]	; (3690 <disk_read+0x7c>)
    3646:	4798      	blx	r3
			(ul_last_sector_num + 1) * uc_sector_size) {
    3648:	46b1      	mov	r9, r6
	if ((sector + count * uc_sector_size) >
    364a:	0032      	movs	r2, r6
    364c:	437a      	muls	r2, r7
    364e:	1912      	adds	r2, r2, r4
			(ul_last_sector_num + 1) * uc_sector_size) {
    3650:	9b03      	ldr	r3, [sp, #12]
    3652:	3301      	adds	r3, #1
    3654:	4373      	muls	r3, r6
		return RES_PARERR;
    3656:	2004      	movs	r0, #4
	if ((sector + count * uc_sector_size) >
    3658:	429a      	cmp	r2, r3
    365a:	d8eb      	bhi.n	3634 <disk_read+0x20>
	for (i = 0; i < count; i++) {
    365c:	2f00      	cmp	r7, #0
    365e:	d011      	beq.n	3684 <disk_read+0x70>
    3660:	0273      	lsls	r3, r6, #9
    3662:	4698      	mov	r8, r3
    3664:	1c7b      	adds	r3, r7, #1
    3666:	469b      	mov	fp, r3
    3668:	2701      	movs	r7, #1
		if (memory_2_ram(drv, sector + uc_sector_size * i,
    366a:	4e0a      	ldr	r6, [pc, #40]	; (3694 <disk_read+0x80>)
    366c:	002a      	movs	r2, r5
    366e:	0021      	movs	r1, r4
    3670:	9801      	ldr	r0, [sp, #4]
    3672:	47b0      	blx	r6
    3674:	2800      	cmp	r0, #0
    3676:	d107      	bne.n	3688 <disk_read+0x74>
    3678:	3701      	adds	r7, #1
    367a:	444c      	add	r4, r9
    367c:	4445      	add	r5, r8
	for (i = 0; i < count; i++) {
    367e:	455f      	cmp	r7, fp
    3680:	d1f4      	bne.n	366c <disk_read+0x58>
    3682:	e7d7      	b.n	3634 <disk_read+0x20>
	return RES_OK;
    3684:	2000      	movs	r0, #0
    3686:	e7d5      	b.n	3634 <disk_read+0x20>
			return RES_ERROR;
    3688:	2001      	movs	r0, #1
    368a:	e7d3      	b.n	3634 <disk_read+0x20>
    368c:	0000135d 	.word	0x0000135d
    3690:	00001341 	.word	0x00001341
    3694:	0000137d 	.word	0x0000137d

00003698 <disk_write>:
 *
 * \return RES_OK for success, otherwise DRESULT error code.
 */
#if _READONLY == 0
DRESULT disk_write(BYTE drv, BYTE const *buff, DWORD sector, BYTE count)
{
    3698:	b5f0      	push	{r4, r5, r6, r7, lr}
    369a:	46de      	mov	lr, fp
    369c:	464f      	mov	r7, r9
    369e:	4646      	mov	r6, r8
    36a0:	b5c0      	push	{r6, r7, lr}
    36a2:	b084      	sub	sp, #16
    36a4:	9001      	str	r0, [sp, #4]
    36a6:	000d      	movs	r5, r1
    36a8:	0014      	movs	r4, r2
    36aa:	001f      	movs	r7, r3
#if ACCESS_MEM_TO_RAM
	uint8_t uc_sector_size = mem_sector_size(drv);
    36ac:	4b18      	ldr	r3, [pc, #96]	; (3710 <disk_write+0x78>)
    36ae:	4798      	blx	r3
    36b0:	0006      	movs	r6, r0
	uint32_t i;
	uint32_t ul_last_sector_num;

	if (uc_sector_size == 0) {
		return RES_ERROR;
    36b2:	2001      	movs	r0, #1
	if (uc_sector_size == 0) {
    36b4:	2e00      	cmp	r6, #0
    36b6:	d105      	bne.n	36c4 <disk_write+0x2c>
	return RES_OK;

#else
	return RES_ERROR;
#endif
}
    36b8:	b004      	add	sp, #16
    36ba:	bc1c      	pop	{r2, r3, r4}
    36bc:	4690      	mov	r8, r2
    36be:	4699      	mov	r9, r3
    36c0:	46a3      	mov	fp, r4
    36c2:	bdf0      	pop	{r4, r5, r6, r7, pc}
	mem_read_capacity(drv, &ul_last_sector_num);
    36c4:	a903      	add	r1, sp, #12
    36c6:	9801      	ldr	r0, [sp, #4]
    36c8:	4b12      	ldr	r3, [pc, #72]	; (3714 <disk_write+0x7c>)
    36ca:	4798      	blx	r3
			(ul_last_sector_num + 1) * uc_sector_size) {
    36cc:	46b1      	mov	r9, r6
	if ((sector + count * uc_sector_size) >
    36ce:	0032      	movs	r2, r6
    36d0:	437a      	muls	r2, r7
    36d2:	1912      	adds	r2, r2, r4
			(ul_last_sector_num + 1) * uc_sector_size) {
    36d4:	9b03      	ldr	r3, [sp, #12]
    36d6:	3301      	adds	r3, #1
    36d8:	4373      	muls	r3, r6
		return RES_PARERR;
    36da:	2004      	movs	r0, #4
	if ((sector + count * uc_sector_size) >
    36dc:	429a      	cmp	r2, r3
    36de:	d8eb      	bhi.n	36b8 <disk_write+0x20>
	for (i = 0; i < count; i++) {
    36e0:	2f00      	cmp	r7, #0
    36e2:	d011      	beq.n	3708 <disk_write+0x70>
    36e4:	0273      	lsls	r3, r6, #9
    36e6:	4698      	mov	r8, r3
    36e8:	1c7b      	adds	r3, r7, #1
    36ea:	469b      	mov	fp, r3
    36ec:	2701      	movs	r7, #1
		if (ram_2_memory(drv, sector + uc_sector_size * i,
    36ee:	4e0a      	ldr	r6, [pc, #40]	; (3718 <disk_write+0x80>)
    36f0:	002a      	movs	r2, r5
    36f2:	0021      	movs	r1, r4
    36f4:	9801      	ldr	r0, [sp, #4]
    36f6:	47b0      	blx	r6
    36f8:	2800      	cmp	r0, #0
    36fa:	d107      	bne.n	370c <disk_write+0x74>
    36fc:	3701      	adds	r7, #1
    36fe:	444c      	add	r4, r9
    3700:	4445      	add	r5, r8
	for (i = 0; i < count; i++) {
    3702:	455f      	cmp	r7, fp
    3704:	d1f4      	bne.n	36f0 <disk_write+0x58>
    3706:	e7d7      	b.n	36b8 <disk_write+0x20>
	return RES_OK;
    3708:	2000      	movs	r0, #0
    370a:	e7d5      	b.n	36b8 <disk_write+0x20>
			return RES_ERROR;
    370c:	2001      	movs	r0, #1
    370e:	e7d3      	b.n	36b8 <disk_write+0x20>
    3710:	0000135d 	.word	0x0000135d
    3714:	00001341 	.word	0x00001341
    3718:	0000139d 	.word	0x0000139d

0000371c <disk_ioctl>:
 * \param buff Buffer to send/receive control data.
 *
 * \return RES_OK for success, otherwise DRESULT error code.
 */
DRESULT disk_ioctl(BYTE drv, BYTE ctrl, void *buff)
{
    371c:	b510      	push	{r4, lr}
    371e:	b082      	sub	sp, #8
    3720:	0014      	movs	r4, r2
	DRESULT res = RES_PARERR;

	switch (ctrl) {
    3722:	2901      	cmp	r1, #1
    3724:	d00b      	beq.n	373e <disk_ioctl+0x22>
    3726:	2900      	cmp	r1, #0
    3728:	d020      	beq.n	376c <disk_ioctl+0x50>
    372a:	2902      	cmp	r1, #2
    372c:	d00f      	beq.n	374e <disk_ioctl+0x32>
			res = RES_NOTRDY;
		}
		break;

	default:
		res = RES_PARERR;
    372e:	2004      	movs	r0, #4
	switch (ctrl) {
    3730:	2903      	cmp	r1, #3
    3732:	d102      	bne.n	373a <disk_ioctl+0x1e>
		*(DWORD *)buff = 1;
    3734:	2301      	movs	r3, #1
    3736:	6013      	str	r3, [r2, #0]
		res = RES_OK;
    3738:	2000      	movs	r0, #0
	}

	return res;
}
    373a:	b002      	add	sp, #8
    373c:	bd10      	pop	{r4, pc}
		mem_read_capacity(drv, &ul_last_sector_num);
    373e:	a901      	add	r1, sp, #4
    3740:	4b0e      	ldr	r3, [pc, #56]	; (377c <disk_ioctl+0x60>)
    3742:	4798      	blx	r3
		*(DWORD *)buff = ul_last_sector_num + 1;
    3744:	9b01      	ldr	r3, [sp, #4]
    3746:	3301      	adds	r3, #1
    3748:	6023      	str	r3, [r4, #0]
		res = RES_OK;
    374a:	2000      	movs	r0, #0
	break;
    374c:	e7f5      	b.n	373a <disk_ioctl+0x1e>
		uint8_t uc_sector_size = mem_sector_size(drv);
    374e:	4b0c      	ldr	r3, [pc, #48]	; (3780 <disk_ioctl+0x64>)
    3750:	4798      	blx	r3
		if ((uc_sector_size != SECTOR_SIZE_512) &&
    3752:	1e43      	subs	r3, r0, #1
    3754:	b2db      	uxtb	r3, r3
    3756:	2b01      	cmp	r3, #1
    3758:	d904      	bls.n	3764 <disk_ioctl+0x48>
				(uc_sector_size != SECTOR_SIZE_1024) &&
    375a:	1f03      	subs	r3, r0, #4
    375c:	22fb      	movs	r2, #251	; 0xfb
			return RES_ERROR;
    375e:	2001      	movs	r0, #1
				(uc_sector_size != SECTOR_SIZE_1024) &&
    3760:	4213      	tst	r3, r2
    3762:	d1ea      	bne.n	373a <disk_ioctl+0x1e>
		*(U8 *)buff = uc_sector_size * SECTOR_SIZE_DEFAULT;
    3764:	2300      	movs	r3, #0
    3766:	7023      	strb	r3, [r4, #0]
		res = RES_OK;
    3768:	2000      	movs	r0, #0
	break;
    376a:	e7e6      	b.n	373a <disk_ioctl+0x1e>
		if (mem_test_unit_ready(drv) == CTRL_GOOD) {
    376c:	4b05      	ldr	r3, [pc, #20]	; (3784 <disk_ioctl+0x68>)
    376e:	4798      	blx	r3
    3770:	2800      	cmp	r0, #0
    3772:	d001      	beq.n	3778 <disk_ioctl+0x5c>
			res = RES_NOTRDY;
    3774:	2003      	movs	r0, #3
    3776:	e7e0      	b.n	373a <disk_ioctl+0x1e>
			res = RES_OK;
    3778:	2000      	movs	r0, #0
    377a:	e7de      	b.n	373a <disk_ioctl+0x1e>
    377c:	00001341 	.word	0x00001341
    3780:	0000135d 	.word	0x0000135d
    3784:	00001329 	.word	0x00001329

00003788 <get_fattime>:
    3788:	b500      	push	{lr}
    378a:	b083      	sub	sp, #12
    378c:	4669      	mov	r1, sp
    378e:	480f      	ldr	r0, [pc, #60]	; (37cc <get_fattime+0x44>)
    3790:	4b0f      	ldr	r3, [pc, #60]	; (37d0 <get_fattime+0x48>)
    3792:	4798      	blx	r3
    3794:	466b      	mov	r3, sp
    3796:	7958      	ldrb	r0, [r3, #5]
    3798:	0540      	lsls	r0, r0, #21
    379a:	791b      	ldrb	r3, [r3, #4]
    379c:	041b      	lsls	r3, r3, #16
    379e:	4318      	orrs	r0, r3
    37a0:	466b      	mov	r3, sp
    37a2:	789b      	ldrb	r3, [r3, #2]
    37a4:	02db      	lsls	r3, r3, #11
    37a6:	4318      	orrs	r0, r3
    37a8:	466b      	mov	r3, sp
    37aa:	785b      	ldrb	r3, [r3, #1]
    37ac:	015b      	lsls	r3, r3, #5
    37ae:	4318      	orrs	r0, r3
    37b0:	466b      	mov	r3, sp
    37b2:	781b      	ldrb	r3, [r3, #0]
    37b4:	085b      	lsrs	r3, r3, #1
    37b6:	4318      	orrs	r0, r3
    37b8:	466b      	mov	r3, sp
    37ba:	88db      	ldrh	r3, [r3, #6]
    37bc:	4a05      	ldr	r2, [pc, #20]	; (37d4 <get_fattime+0x4c>)
    37be:	4694      	mov	ip, r2
    37c0:	4463      	add	r3, ip
    37c2:	065b      	lsls	r3, r3, #25
    37c4:	4318      	orrs	r0, r3
    37c6:	b003      	add	sp, #12
    37c8:	bd00      	pop	{pc}
    37ca:	46c0      	nop			; (mov r8, r8)
    37cc:	20000614 	.word	0x20000614
    37d0:	000019bd 	.word	0x000019bd
    37d4:	fffff844 	.word	0xfffff844

000037d8 <mem_cpy>:
    37d8:	b510      	push	{r4, lr}
    37da:	2a00      	cmp	r2, #0
    37dc:	d005      	beq.n	37ea <mem_cpy+0x12>
    37de:	2300      	movs	r3, #0
    37e0:	5ccc      	ldrb	r4, [r1, r3]
    37e2:	54c4      	strb	r4, [r0, r3]
    37e4:	3301      	adds	r3, #1
    37e6:	4293      	cmp	r3, r2
    37e8:	d1fa      	bne.n	37e0 <mem_cpy+0x8>
    37ea:	bd10      	pop	{r4, pc}

000037ec <mem_set>:
    37ec:	2a00      	cmp	r2, #0
    37ee:	d005      	beq.n	37fc <mem_set+0x10>
    37f0:	0003      	movs	r3, r0
    37f2:	1882      	adds	r2, r0, r2
    37f4:	7019      	strb	r1, [r3, #0]
    37f6:	3301      	adds	r3, #1
    37f8:	4293      	cmp	r3, r2
    37fa:	d1fb      	bne.n	37f4 <mem_set+0x8>
    37fc:	4770      	bx	lr

000037fe <clust2sect>:
    37fe:	0002      	movs	r2, r0
    3800:	3902      	subs	r1, #2
    3802:	6983      	ldr	r3, [r0, #24]
    3804:	3b02      	subs	r3, #2
    3806:	2000      	movs	r0, #0
    3808:	4299      	cmp	r1, r3
    380a:	d203      	bcs.n	3814 <clust2sect+0x16>
    380c:	7890      	ldrb	r0, [r2, #2]
    380e:	4341      	muls	r1, r0
    3810:	6a90      	ldr	r0, [r2, #40]	; 0x28
    3812:	1808      	adds	r0, r1, r0
    3814:	4770      	bx	lr

00003816 <sum_sfn>:
    3816:	0002      	movs	r2, r0
    3818:	0001      	movs	r1, r0
    381a:	310b      	adds	r1, #11
    381c:	2000      	movs	r0, #0
    381e:	0843      	lsrs	r3, r0, #1
    3820:	01c0      	lsls	r0, r0, #7
    3822:	4303      	orrs	r3, r0
    3824:	7810      	ldrb	r0, [r2, #0]
    3826:	1818      	adds	r0, r3, r0
    3828:	b2c0      	uxtb	r0, r0
    382a:	3201      	adds	r2, #1
    382c:	428a      	cmp	r2, r1
    382e:	d1f6      	bne.n	381e <sum_sfn+0x8>
    3830:	4770      	bx	lr
	...

00003834 <validate>:
    3834:	b510      	push	{r4, lr}
    3836:	2800      	cmp	r0, #0
    3838:	d010      	beq.n	385c <validate+0x28>
    383a:	7802      	ldrb	r2, [r0, #0]
    383c:	2309      	movs	r3, #9
    383e:	2a00      	cmp	r2, #0
    3840:	d101      	bne.n	3846 <validate+0x12>
    3842:	0018      	movs	r0, r3
    3844:	bd10      	pop	{r4, pc}
    3846:	88c2      	ldrh	r2, [r0, #6]
    3848:	428a      	cmp	r2, r1
    384a:	d1fa      	bne.n	3842 <validate+0xe>
    384c:	7840      	ldrb	r0, [r0, #1]
    384e:	4b04      	ldr	r3, [pc, #16]	; (3860 <validate+0x2c>)
    3850:	4798      	blx	r3
    3852:	2303      	movs	r3, #3
    3854:	07c0      	lsls	r0, r0, #31
    3856:	17c0      	asrs	r0, r0, #31
    3858:	4003      	ands	r3, r0
    385a:	e7f2      	b.n	3842 <validate+0xe>
    385c:	2309      	movs	r3, #9
    385e:	e7f0      	b.n	3842 <validate+0xe>
    3860:	000035f9 	.word	0x000035f9

00003864 <check_fs>:
    3864:	b570      	push	{r4, r5, r6, lr}
    3866:	0004      	movs	r4, r0
    3868:	000a      	movs	r2, r1
    386a:	0001      	movs	r1, r0
    386c:	3130      	adds	r1, #48	; 0x30
    386e:	7840      	ldrb	r0, [r0, #1]
    3870:	2301      	movs	r3, #1
    3872:	4d1f      	ldr	r5, [pc, #124]	; (38f0 <check_fs+0x8c>)
    3874:	47a8      	blx	r5
    3876:	2303      	movs	r3, #3
    3878:	2800      	cmp	r0, #0
    387a:	d001      	beq.n	3880 <check_fs+0x1c>
    387c:	0018      	movs	r0, r3
    387e:	bd70      	pop	{r4, r5, r6, pc}
    3880:	4b1c      	ldr	r3, [pc, #112]	; (38f4 <check_fs+0x90>)
    3882:	5ce3      	ldrb	r3, [r4, r3]
    3884:	021b      	lsls	r3, r3, #8
    3886:	4a1c      	ldr	r2, [pc, #112]	; (38f8 <check_fs+0x94>)
    3888:	5ca2      	ldrb	r2, [r4, r2]
    388a:	431a      	orrs	r2, r3
    388c:	491b      	ldr	r1, [pc, #108]	; (38fc <check_fs+0x98>)
    388e:	b212      	sxth	r2, r2
    3890:	2302      	movs	r3, #2
    3892:	428a      	cmp	r2, r1
    3894:	d1f2      	bne.n	387c <check_fs+0x18>
    3896:	3367      	adds	r3, #103	; 0x67
    3898:	5ce3      	ldrb	r3, [r4, r3]
    389a:	061b      	lsls	r3, r3, #24
    389c:	2268      	movs	r2, #104	; 0x68
    389e:	5ca2      	ldrb	r2, [r4, r2]
    38a0:	0412      	lsls	r2, r2, #16
    38a2:	4313      	orrs	r3, r2
    38a4:	2266      	movs	r2, #102	; 0x66
    38a6:	5ca2      	ldrb	r2, [r4, r2]
    38a8:	4313      	orrs	r3, r2
    38aa:	2267      	movs	r2, #103	; 0x67
    38ac:	5ca2      	ldrb	r2, [r4, r2]
    38ae:	0212      	lsls	r2, r2, #8
    38b0:	4313      	orrs	r3, r2
    38b2:	021b      	lsls	r3, r3, #8
    38b4:	0a1b      	lsrs	r3, r3, #8
    38b6:	4a12      	ldr	r2, [pc, #72]	; (3900 <check_fs+0x9c>)
    38b8:	4293      	cmp	r3, r2
    38ba:	d016      	beq.n	38ea <check_fs+0x86>
    38bc:	2385      	movs	r3, #133	; 0x85
    38be:	5ce3      	ldrb	r3, [r4, r3]
    38c0:	061b      	lsls	r3, r3, #24
    38c2:	2284      	movs	r2, #132	; 0x84
    38c4:	5ca2      	ldrb	r2, [r4, r2]
    38c6:	0412      	lsls	r2, r2, #16
    38c8:	4313      	orrs	r3, r2
    38ca:	2282      	movs	r2, #130	; 0x82
    38cc:	5ca2      	ldrb	r2, [r4, r2]
    38ce:	4313      	orrs	r3, r2
    38d0:	2283      	movs	r2, #131	; 0x83
    38d2:	5ca2      	ldrb	r2, [r4, r2]
    38d4:	0212      	lsls	r2, r2, #8
    38d6:	4313      	orrs	r3, r2
    38d8:	021b      	lsls	r3, r3, #8
    38da:	0a1b      	lsrs	r3, r3, #8
    38dc:	4a09      	ldr	r2, [pc, #36]	; (3904 <check_fs+0xa0>)
    38de:	4694      	mov	ip, r2
    38e0:	4463      	add	r3, ip
    38e2:	1e58      	subs	r0, r3, #1
    38e4:	4183      	sbcs	r3, r0
    38e6:	b2db      	uxtb	r3, r3
    38e8:	e7c8      	b.n	387c <check_fs+0x18>
    38ea:	2300      	movs	r3, #0
    38ec:	e7c6      	b.n	387c <check_fs+0x18>
    38ee:	46c0      	nop			; (mov r8, r8)
    38f0:	00003615 	.word	0x00003615
    38f4:	0000022f 	.word	0x0000022f
    38f8:	0000022e 	.word	0x0000022e
    38fc:	ffffaa55 	.word	0xffffaa55
    3900:	00544146 	.word	0x00544146
    3904:	ffabbeba 	.word	0xffabbeba

00003908 <chk_mounted>:
    3908:	b5f0      	push	{r4, r5, r6, r7, lr}
    390a:	46d6      	mov	lr, sl
    390c:	464f      	mov	r7, r9
    390e:	4646      	mov	r6, r8
    3910:	b5c0      	push	{r6, r7, lr}
    3912:	0015      	movs	r5, r2
    3914:	6803      	ldr	r3, [r0, #0]
    3916:	781c      	ldrb	r4, [r3, #0]
    3918:	3c30      	subs	r4, #48	; 0x30
    391a:	2c09      	cmp	r4, #9
    391c:	d80e      	bhi.n	393c <chk_mounted+0x34>
    391e:	785a      	ldrb	r2, [r3, #1]
    3920:	2a3a      	cmp	r2, #58	; 0x3a
    3922:	d001      	beq.n	3928 <chk_mounted+0x20>
    3924:	2400      	movs	r4, #0
    3926:	e00a      	b.n	393e <chk_mounted+0x36>
    3928:	3302      	adds	r3, #2
    392a:	6003      	str	r3, [r0, #0]
    392c:	200b      	movs	r0, #11
    392e:	2c07      	cmp	r4, #7
    3930:	d905      	bls.n	393e <chk_mounted+0x36>
    3932:	bc1c      	pop	{r2, r3, r4}
    3934:	4690      	mov	r8, r2
    3936:	4699      	mov	r9, r3
    3938:	46a2      	mov	sl, r4
    393a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    393c:	2400      	movs	r4, #0
    393e:	00a3      	lsls	r3, r4, #2
    3940:	4ac5      	ldr	r2, [pc, #788]	; (3c58 <chk_mounted+0x350>)
    3942:	589e      	ldr	r6, [r3, r2]
    3944:	600e      	str	r6, [r1, #0]
    3946:	2e00      	cmp	r6, #0
    3948:	d100      	bne.n	394c <chk_mounted+0x44>
    394a:	e0e8      	b.n	3b1e <chk_mounted+0x216>
    394c:	7833      	ldrb	r3, [r6, #0]
    394e:	2b00      	cmp	r3, #0
    3950:	d00d      	beq.n	396e <chk_mounted+0x66>
    3952:	7870      	ldrb	r0, [r6, #1]
    3954:	4bc1      	ldr	r3, [pc, #772]	; (3c5c <chk_mounted+0x354>)
    3956:	4798      	blx	r3
    3958:	0003      	movs	r3, r0
    395a:	07c2      	lsls	r2, r0, #31
    395c:	d407      	bmi.n	396e <chk_mounted+0x66>
    395e:	2000      	movs	r0, #0
    3960:	2d00      	cmp	r5, #0
    3962:	d0e6      	beq.n	3932 <chk_mounted+0x2a>
    3964:	075b      	lsls	r3, r3, #29
    3966:	d400      	bmi.n	396a <chk_mounted+0x62>
    3968:	e0db      	b.n	3b22 <chk_mounted+0x21a>
    396a:	300a      	adds	r0, #10
    396c:	e7e1      	b.n	3932 <chk_mounted+0x2a>
    396e:	2300      	movs	r3, #0
    3970:	7033      	strb	r3, [r6, #0]
    3972:	b2e0      	uxtb	r0, r4
    3974:	7070      	strb	r0, [r6, #1]
    3976:	4bba      	ldr	r3, [pc, #744]	; (3c60 <chk_mounted+0x358>)
    3978:	4798      	blx	r3
    397a:	0003      	movs	r3, r0
    397c:	2003      	movs	r0, #3
    397e:	07da      	lsls	r2, r3, #31
    3980:	d4d7      	bmi.n	3932 <chk_mounted+0x2a>
    3982:	2d00      	cmp	r5, #0
    3984:	d002      	beq.n	398c <chk_mounted+0x84>
    3986:	3007      	adds	r0, #7
    3988:	075b      	lsls	r3, r3, #29
    398a:	d4d2      	bmi.n	3932 <chk_mounted+0x2a>
    398c:	2100      	movs	r1, #0
    398e:	0030      	movs	r0, r6
    3990:	4bb4      	ldr	r3, [pc, #720]	; (3c64 <chk_mounted+0x35c>)
    3992:	4798      	blx	r3
    3994:	0003      	movs	r3, r0
    3996:	2400      	movs	r4, #0
    3998:	2801      	cmp	r0, #1
    399a:	d100      	bne.n	399e <chk_mounted+0x96>
    399c:	e09a      	b.n	3ad4 <chk_mounted+0x1cc>
    399e:	2b03      	cmp	r3, #3
    39a0:	d100      	bne.n	39a4 <chk_mounted+0x9c>
    39a2:	e0c0      	b.n	3b26 <chk_mounted+0x21e>
    39a4:	200d      	movs	r0, #13
    39a6:	2b00      	cmp	r3, #0
    39a8:	d1c3      	bne.n	3932 <chk_mounted+0x2a>
    39aa:	333c      	adds	r3, #60	; 0x3c
    39ac:	5cf2      	ldrb	r2, [r6, r3]
    39ae:	0212      	lsls	r2, r2, #8
    39b0:	3b01      	subs	r3, #1
    39b2:	5cf3      	ldrb	r3, [r6, r3]
    39b4:	4313      	orrs	r3, r2
    39b6:	2280      	movs	r2, #128	; 0x80
    39b8:	0092      	lsls	r2, r2, #2
    39ba:	b21b      	sxth	r3, r3
    39bc:	4293      	cmp	r3, r2
    39be:	d1b8      	bne.n	3932 <chk_mounted+0x2a>
    39c0:	2347      	movs	r3, #71	; 0x47
    39c2:	5cf3      	ldrb	r3, [r6, r3]
    39c4:	021b      	lsls	r3, r3, #8
    39c6:	3abb      	subs	r2, #187	; 0xbb
    39c8:	3aff      	subs	r2, #255	; 0xff
    39ca:	5cb5      	ldrb	r5, [r6, r2]
    39cc:	431d      	orrs	r5, r3
    39ce:	d10d      	bne.n	39ec <chk_mounted+0xe4>
    39d0:	2357      	movs	r3, #87	; 0x57
    39d2:	5cf5      	ldrb	r5, [r6, r3]
    39d4:	062d      	lsls	r5, r5, #24
    39d6:	3b01      	subs	r3, #1
    39d8:	5cf3      	ldrb	r3, [r6, r3]
    39da:	041b      	lsls	r3, r3, #16
    39dc:	431d      	orrs	r5, r3
    39de:	2354      	movs	r3, #84	; 0x54
    39e0:	5cf3      	ldrb	r3, [r6, r3]
    39e2:	431d      	orrs	r5, r3
    39e4:	2355      	movs	r3, #85	; 0x55
    39e6:	5cf3      	ldrb	r3, [r6, r3]
    39e8:	021b      	lsls	r3, r3, #8
    39ea:	431d      	orrs	r5, r3
    39ec:	61f5      	str	r5, [r6, #28]
    39ee:	2340      	movs	r3, #64	; 0x40
    39f0:	5cf2      	ldrb	r2, [r6, r3]
    39f2:	70f2      	strb	r2, [r6, #3]
    39f4:	1e53      	subs	r3, r2, #1
    39f6:	200d      	movs	r0, #13
    39f8:	2b01      	cmp	r3, #1
    39fa:	d89a      	bhi.n	3932 <chk_mounted+0x2a>
    39fc:	233d      	movs	r3, #61	; 0x3d
    39fe:	5cf1      	ldrb	r1, [r6, r3]
    3a00:	70b1      	strb	r1, [r6, #2]
    3a02:	2900      	cmp	r1, #0
    3a04:	d095      	beq.n	3932 <chk_mounted+0x2a>
    3a06:	1e4b      	subs	r3, r1, #1
    3a08:	4219      	tst	r1, r3
    3a0a:	d192      	bne.n	3932 <chk_mounted+0x2a>
    3a0c:	2342      	movs	r3, #66	; 0x42
    3a0e:	5cf3      	ldrb	r3, [r6, r3]
    3a10:	021b      	lsls	r3, r3, #8
    3a12:	3034      	adds	r0, #52	; 0x34
    3a14:	5c30      	ldrb	r0, [r6, r0]
    3a16:	4318      	orrs	r0, r3
    3a18:	4680      	mov	r8, r0
    3a1a:	8130      	strh	r0, [r6, #8]
    3a1c:	200d      	movs	r0, #13
    3a1e:	4643      	mov	r3, r8
    3a20:	071b      	lsls	r3, r3, #28
    3a22:	d000      	beq.n	3a26 <chk_mounted+0x11e>
    3a24:	e785      	b.n	3932 <chk_mounted+0x2a>
    3a26:	2344      	movs	r3, #68	; 0x44
    3a28:	5cf3      	ldrb	r3, [r6, r3]
    3a2a:	021b      	lsls	r3, r3, #8
    3a2c:	3036      	adds	r0, #54	; 0x36
    3a2e:	5c30      	ldrb	r0, [r6, r0]
    3a30:	4303      	orrs	r3, r0
    3a32:	d10d      	bne.n	3a50 <chk_mounted+0x148>
    3a34:	3353      	adds	r3, #83	; 0x53
    3a36:	5cf3      	ldrb	r3, [r6, r3]
    3a38:	061b      	lsls	r3, r3, #24
    3a3a:	2052      	movs	r0, #82	; 0x52
    3a3c:	5c30      	ldrb	r0, [r6, r0]
    3a3e:	0400      	lsls	r0, r0, #16
    3a40:	4303      	orrs	r3, r0
    3a42:	2050      	movs	r0, #80	; 0x50
    3a44:	5c30      	ldrb	r0, [r6, r0]
    3a46:	4303      	orrs	r3, r0
    3a48:	2051      	movs	r0, #81	; 0x51
    3a4a:	5c30      	ldrb	r0, [r6, r0]
    3a4c:	0200      	lsls	r0, r0, #8
    3a4e:	4303      	orrs	r3, r0
    3a50:	203f      	movs	r0, #63	; 0x3f
    3a52:	5c30      	ldrb	r0, [r6, r0]
    3a54:	0200      	lsls	r0, r0, #8
    3a56:	273e      	movs	r7, #62	; 0x3e
    3a58:	5df7      	ldrb	r7, [r6, r7]
    3a5a:	4307      	orrs	r7, r0
    3a5c:	46ba      	mov	sl, r7
    3a5e:	200d      	movs	r0, #13
    3a60:	2f00      	cmp	r7, #0
    3a62:	d100      	bne.n	3a66 <chk_mounted+0x15e>
    3a64:	e765      	b.n	3932 <chk_mounted+0x2a>
    3a66:	436a      	muls	r2, r5
    3a68:	4691      	mov	r9, r2
    3a6a:	4642      	mov	r2, r8
    3a6c:	0917      	lsrs	r7, r2, #4
    3a6e:	4457      	add	r7, sl
    3a70:	444f      	add	r7, r9
    3a72:	42bb      	cmp	r3, r7
    3a74:	d200      	bcs.n	3a78 <chk_mounted+0x170>
    3a76:	e75c      	b.n	3932 <chk_mounted+0x2a>
    3a78:	1bd8      	subs	r0, r3, r7
    3a7a:	4b7b      	ldr	r3, [pc, #492]	; (3c68 <chk_mounted+0x360>)
    3a7c:	4798      	blx	r3
    3a7e:	0003      	movs	r3, r0
    3a80:	200d      	movs	r0, #13
    3a82:	2b00      	cmp	r3, #0
    3a84:	d100      	bne.n	3a88 <chk_mounted+0x180>
    3a86:	e754      	b.n	3932 <chk_mounted+0x2a>
    3a88:	4a78      	ldr	r2, [pc, #480]	; (3c6c <chk_mounted+0x364>)
    3a8a:	429a      	cmp	r2, r3
    3a8c:	4192      	sbcs	r2, r2
    3a8e:	4252      	negs	r2, r2
    3a90:	3201      	adds	r2, #1
    3a92:	4977      	ldr	r1, [pc, #476]	; (3c70 <chk_mounted+0x368>)
    3a94:	428b      	cmp	r3, r1
    3a96:	d848      	bhi.n	3b2a <chk_mounted+0x222>
    3a98:	3302      	adds	r3, #2
    3a9a:	61b3      	str	r3, [r6, #24]
    3a9c:	19e7      	adds	r7, r4, r7
    3a9e:	62b7      	str	r7, [r6, #40]	; 0x28
    3aa0:	4454      	add	r4, sl
    3aa2:	6234      	str	r4, [r6, #32]
    3aa4:	200d      	movs	r0, #13
    3aa6:	4641      	mov	r1, r8
    3aa8:	2900      	cmp	r1, #0
    3aaa:	d100      	bne.n	3aae <chk_mounted+0x1a6>
    3aac:	e741      	b.n	3932 <chk_mounted+0x2a>
    3aae:	444c      	add	r4, r9
    3ab0:	6274      	str	r4, [r6, #36]	; 0x24
    3ab2:	2a02      	cmp	r2, #2
    3ab4:	d12c      	bne.n	3b10 <chk_mounted+0x208>
    3ab6:	005b      	lsls	r3, r3, #1
    3ab8:	496e      	ldr	r1, [pc, #440]	; (3c74 <chk_mounted+0x36c>)
    3aba:	468c      	mov	ip, r1
    3abc:	4463      	add	r3, ip
    3abe:	0a5b      	lsrs	r3, r3, #9
    3ac0:	200d      	movs	r0, #13
    3ac2:	429d      	cmp	r5, r3
    3ac4:	d200      	bcs.n	3ac8 <chk_mounted+0x1c0>
    3ac6:	e734      	b.n	3932 <chk_mounted+0x2a>
    3ac8:	2301      	movs	r3, #1
    3aca:	425b      	negs	r3, r3
    3acc:	6133      	str	r3, [r6, #16]
    3ace:	2300      	movs	r3, #0
    3ad0:	60f3      	str	r3, [r6, #12]
    3ad2:	e0b6      	b.n	3c42 <chk_mounted+0x33a>
    3ad4:	33f2      	adds	r3, #242	; 0xf2
    3ad6:	33ff      	adds	r3, #255	; 0xff
    3ad8:	5cf3      	ldrb	r3, [r6, r3]
    3ada:	200d      	movs	r0, #13
    3adc:	2b00      	cmp	r3, #0
    3ade:	d100      	bne.n	3ae2 <chk_mounted+0x1da>
    3ae0:	e727      	b.n	3932 <chk_mounted+0x2a>
    3ae2:	23fa      	movs	r3, #250	; 0xfa
    3ae4:	33ff      	adds	r3, #255	; 0xff
    3ae6:	5cf4      	ldrb	r4, [r6, r3]
    3ae8:	0624      	lsls	r4, r4, #24
    3aea:	3b01      	subs	r3, #1
    3aec:	5cf3      	ldrb	r3, [r6, r3]
    3aee:	041b      	lsls	r3, r3, #16
    3af0:	431c      	orrs	r4, r3
    3af2:	23fb      	movs	r3, #251	; 0xfb
    3af4:	005b      	lsls	r3, r3, #1
    3af6:	5cf3      	ldrb	r3, [r6, r3]
    3af8:	431c      	orrs	r4, r3
    3afa:	23f8      	movs	r3, #248	; 0xf8
    3afc:	33ff      	adds	r3, #255	; 0xff
    3afe:	5cf2      	ldrb	r2, [r6, r3]
    3b00:	0212      	lsls	r2, r2, #8
    3b02:	4314      	orrs	r4, r2
    3b04:	0021      	movs	r1, r4
    3b06:	0030      	movs	r0, r6
    3b08:	4b56      	ldr	r3, [pc, #344]	; (3c64 <chk_mounted+0x35c>)
    3b0a:	4798      	blx	r3
    3b0c:	0003      	movs	r3, r0
    3b0e:	e746      	b.n	399e <chk_mounted+0x96>
    3b10:	2103      	movs	r1, #3
    3b12:	4359      	muls	r1, r3
    3b14:	0849      	lsrs	r1, r1, #1
    3b16:	2001      	movs	r0, #1
    3b18:	4003      	ands	r3, r0
    3b1a:	18cb      	adds	r3, r1, r3
    3b1c:	e7cc      	b.n	3ab8 <chk_mounted+0x1b0>
    3b1e:	200c      	movs	r0, #12
    3b20:	e707      	b.n	3932 <chk_mounted+0x2a>
    3b22:	2000      	movs	r0, #0
    3b24:	e705      	b.n	3932 <chk_mounted+0x2a>
    3b26:	2001      	movs	r0, #1
    3b28:	e703      	b.n	3932 <chk_mounted+0x2a>
    3b2a:	3302      	adds	r3, #2
    3b2c:	61b3      	str	r3, [r6, #24]
    3b2e:	19e7      	adds	r7, r4, r7
    3b30:	62b7      	str	r7, [r6, #40]	; 0x28
    3b32:	4652      	mov	r2, sl
    3b34:	18a2      	adds	r2, r4, r2
    3b36:	6232      	str	r2, [r6, #32]
    3b38:	200d      	movs	r0, #13
    3b3a:	4642      	mov	r2, r8
    3b3c:	2a00      	cmp	r2, #0
    3b3e:	d000      	beq.n	3b42 <chk_mounted+0x23a>
    3b40:	e6f7      	b.n	3932 <chk_mounted+0x2a>
    3b42:	225f      	movs	r2, #95	; 0x5f
    3b44:	5cb2      	ldrb	r2, [r6, r2]
    3b46:	0612      	lsls	r2, r2, #24
    3b48:	215e      	movs	r1, #94	; 0x5e
    3b4a:	5c71      	ldrb	r1, [r6, r1]
    3b4c:	0409      	lsls	r1, r1, #16
    3b4e:	430a      	orrs	r2, r1
    3b50:	215c      	movs	r1, #92	; 0x5c
    3b52:	5c71      	ldrb	r1, [r6, r1]
    3b54:	430a      	orrs	r2, r1
    3b56:	215d      	movs	r1, #93	; 0x5d
    3b58:	5c71      	ldrb	r1, [r6, r1]
    3b5a:	0209      	lsls	r1, r1, #8
    3b5c:	430a      	orrs	r2, r1
    3b5e:	6272      	str	r2, [r6, #36]	; 0x24
    3b60:	009b      	lsls	r3, r3, #2
    3b62:	4a44      	ldr	r2, [pc, #272]	; (3c74 <chk_mounted+0x36c>)
    3b64:	4694      	mov	ip, r2
    3b66:	4463      	add	r3, ip
    3b68:	0a5b      	lsrs	r3, r3, #9
    3b6a:	200d      	movs	r0, #13
    3b6c:	429d      	cmp	r5, r3
    3b6e:	d200      	bcs.n	3b72 <chk_mounted+0x26a>
    3b70:	e6df      	b.n	3932 <chk_mounted+0x2a>
    3b72:	2301      	movs	r3, #1
    3b74:	425b      	negs	r3, r3
    3b76:	6133      	str	r3, [r6, #16]
    3b78:	2300      	movs	r3, #0
    3b7a:	60f3      	str	r3, [r6, #12]
    3b7c:	7173      	strb	r3, [r6, #5]
    3b7e:	3361      	adds	r3, #97	; 0x61
    3b80:	5cf3      	ldrb	r3, [r6, r3]
    3b82:	021b      	lsls	r3, r3, #8
    3b84:	2260      	movs	r2, #96	; 0x60
    3b86:	5cb2      	ldrb	r2, [r6, r2]
    3b88:	431a      	orrs	r2, r3
    3b8a:	1912      	adds	r2, r2, r4
    3b8c:	6172      	str	r2, [r6, #20]
    3b8e:	0031      	movs	r1, r6
    3b90:	3130      	adds	r1, #48	; 0x30
    3b92:	7870      	ldrb	r0, [r6, #1]
    3b94:	2301      	movs	r3, #1
    3b96:	4c38      	ldr	r4, [pc, #224]	; (3c78 <chk_mounted+0x370>)
    3b98:	47a0      	blx	r4
    3b9a:	2203      	movs	r2, #3
    3b9c:	2800      	cmp	r0, #0
    3b9e:	d150      	bne.n	3c42 <chk_mounted+0x33a>
    3ba0:	4b36      	ldr	r3, [pc, #216]	; (3c7c <chk_mounted+0x374>)
    3ba2:	5cf2      	ldrb	r2, [r6, r3]
    3ba4:	0212      	lsls	r2, r2, #8
    3ba6:	4b36      	ldr	r3, [pc, #216]	; (3c80 <chk_mounted+0x378>)
    3ba8:	5cf3      	ldrb	r3, [r6, r3]
    3baa:	4313      	orrs	r3, r2
    3bac:	4935      	ldr	r1, [pc, #212]	; (3c84 <chk_mounted+0x37c>)
    3bae:	b21b      	sxth	r3, r3
    3bb0:	2203      	movs	r2, #3
    3bb2:	428b      	cmp	r3, r1
    3bb4:	d145      	bne.n	3c42 <chk_mounted+0x33a>
    3bb6:	2333      	movs	r3, #51	; 0x33
    3bb8:	5cf3      	ldrb	r3, [r6, r3]
    3bba:	061b      	lsls	r3, r3, #24
    3bbc:	322f      	adds	r2, #47	; 0x2f
    3bbe:	5cb2      	ldrb	r2, [r6, r2]
    3bc0:	0412      	lsls	r2, r2, #16
    3bc2:	4313      	orrs	r3, r2
    3bc4:	2230      	movs	r2, #48	; 0x30
    3bc6:	5cb2      	ldrb	r2, [r6, r2]
    3bc8:	4313      	orrs	r3, r2
    3bca:	2231      	movs	r2, #49	; 0x31
    3bcc:	5cb2      	ldrb	r2, [r6, r2]
    3bce:	0212      	lsls	r2, r2, #8
    3bd0:	4313      	orrs	r3, r2
    3bd2:	492d      	ldr	r1, [pc, #180]	; (3c88 <chk_mounted+0x380>)
    3bd4:	2203      	movs	r2, #3
    3bd6:	428b      	cmp	r3, r1
    3bd8:	d133      	bne.n	3c42 <chk_mounted+0x33a>
    3bda:	4b2c      	ldr	r3, [pc, #176]	; (3c8c <chk_mounted+0x384>)
    3bdc:	5cf3      	ldrb	r3, [r6, r3]
    3bde:	061b      	lsls	r3, r3, #24
    3be0:	4a2b      	ldr	r2, [pc, #172]	; (3c90 <chk_mounted+0x388>)
    3be2:	5cb2      	ldrb	r2, [r6, r2]
    3be4:	0412      	lsls	r2, r2, #16
    3be6:	4313      	orrs	r3, r2
    3be8:	2285      	movs	r2, #133	; 0x85
    3bea:	0092      	lsls	r2, r2, #2
    3bec:	5cb2      	ldrb	r2, [r6, r2]
    3bee:	4313      	orrs	r3, r2
    3bf0:	4a28      	ldr	r2, [pc, #160]	; (3c94 <chk_mounted+0x38c>)
    3bf2:	5cb2      	ldrb	r2, [r6, r2]
    3bf4:	0212      	lsls	r2, r2, #8
    3bf6:	4313      	orrs	r3, r2
    3bf8:	4927      	ldr	r1, [pc, #156]	; (3c98 <chk_mounted+0x390>)
    3bfa:	2203      	movs	r2, #3
    3bfc:	428b      	cmp	r3, r1
    3bfe:	d120      	bne.n	3c42 <chk_mounted+0x33a>
    3c00:	4b26      	ldr	r3, [pc, #152]	; (3c9c <chk_mounted+0x394>)
    3c02:	5cf3      	ldrb	r3, [r6, r3]
    3c04:	061b      	lsls	r3, r3, #24
    3c06:	4a26      	ldr	r2, [pc, #152]	; (3ca0 <chk_mounted+0x398>)
    3c08:	5cb2      	ldrb	r2, [r6, r2]
    3c0a:	0412      	lsls	r2, r2, #16
    3c0c:	4313      	orrs	r3, r2
    3c0e:	2287      	movs	r2, #135	; 0x87
    3c10:	0092      	lsls	r2, r2, #2
    3c12:	5cb2      	ldrb	r2, [r6, r2]
    3c14:	4313      	orrs	r3, r2
    3c16:	4a23      	ldr	r2, [pc, #140]	; (3ca4 <chk_mounted+0x39c>)
    3c18:	5cb2      	ldrb	r2, [r6, r2]
    3c1a:	0212      	lsls	r2, r2, #8
    3c1c:	4313      	orrs	r3, r2
    3c1e:	60f3      	str	r3, [r6, #12]
    3c20:	4b21      	ldr	r3, [pc, #132]	; (3ca8 <chk_mounted+0x3a0>)
    3c22:	5cf3      	ldrb	r3, [r6, r3]
    3c24:	061b      	lsls	r3, r3, #24
    3c26:	4a21      	ldr	r2, [pc, #132]	; (3cac <chk_mounted+0x3a4>)
    3c28:	5cb2      	ldrb	r2, [r6, r2]
    3c2a:	0412      	lsls	r2, r2, #16
    3c2c:	4313      	orrs	r3, r2
    3c2e:	2286      	movs	r2, #134	; 0x86
    3c30:	0092      	lsls	r2, r2, #2
    3c32:	5cb2      	ldrb	r2, [r6, r2]
    3c34:	4313      	orrs	r3, r2
    3c36:	4a1e      	ldr	r2, [pc, #120]	; (3cb0 <chk_mounted+0x3a8>)
    3c38:	5cb2      	ldrb	r2, [r6, r2]
    3c3a:	0212      	lsls	r2, r2, #8
    3c3c:	4313      	orrs	r3, r2
    3c3e:	6133      	str	r3, [r6, #16]
    3c40:	2203      	movs	r2, #3
    3c42:	7032      	strb	r2, [r6, #0]
    3c44:	4a1b      	ldr	r2, [pc, #108]	; (3cb4 <chk_mounted+0x3ac>)
    3c46:	8813      	ldrh	r3, [r2, #0]
    3c48:	3301      	adds	r3, #1
    3c4a:	b29b      	uxth	r3, r3
    3c4c:	8013      	strh	r3, [r2, #0]
    3c4e:	80f3      	strh	r3, [r6, #6]
    3c50:	2000      	movs	r0, #0
    3c52:	62f0      	str	r0, [r6, #44]	; 0x2c
    3c54:	7130      	strb	r0, [r6, #4]
    3c56:	e66c      	b.n	3932 <chk_mounted+0x2a>
    3c58:	200002e8 	.word	0x200002e8
    3c5c:	000035f9 	.word	0x000035f9
    3c60:	0000355d 	.word	0x0000355d
    3c64:	00003865 	.word	0x00003865
    3c68:	0000574d 	.word	0x0000574d
    3c6c:	00000ff5 	.word	0x00000ff5
    3c70:	0000fff5 	.word	0x0000fff5
    3c74:	000001ff 	.word	0x000001ff
    3c78:	00003615 	.word	0x00003615
    3c7c:	0000022f 	.word	0x0000022f
    3c80:	0000022e 	.word	0x0000022e
    3c84:	ffffaa55 	.word	0xffffaa55
    3c88:	41615252 	.word	0x41615252
    3c8c:	00000217 	.word	0x00000217
    3c90:	00000216 	.word	0x00000216
    3c94:	00000215 	.word	0x00000215
    3c98:	61417272 	.word	0x61417272
    3c9c:	0000021f 	.word	0x0000021f
    3ca0:	0000021e 	.word	0x0000021e
    3ca4:	0000021d 	.word	0x0000021d
    3ca8:	0000021b 	.word	0x0000021b
    3cac:	0000021a 	.word	0x0000021a
    3cb0:	00000219 	.word	0x00000219
    3cb4:	20000308 	.word	0x20000308

00003cb8 <move_window>:
    3cb8:	b5f0      	push	{r4, r5, r6, r7, lr}
    3cba:	46ce      	mov	lr, r9
    3cbc:	b500      	push	{lr}
    3cbe:	b082      	sub	sp, #8
    3cc0:	0004      	movs	r4, r0
    3cc2:	000f      	movs	r7, r1
    3cc4:	6ac5      	ldr	r5, [r0, #44]	; 0x2c
    3cc6:	428d      	cmp	r5, r1
    3cc8:	d03f      	beq.n	3d4a <move_window+0x92>
    3cca:	7903      	ldrb	r3, [r0, #4]
    3ccc:	2b00      	cmp	r3, #0
    3cce:	d107      	bne.n	3ce0 <move_window+0x28>
    3cd0:	2300      	movs	r3, #0
    3cd2:	2f00      	cmp	r7, #0
    3cd4:	d12c      	bne.n	3d30 <move_window+0x78>
    3cd6:	0018      	movs	r0, r3
    3cd8:	b002      	add	sp, #8
    3cda:	bc04      	pop	{r2}
    3cdc:	4691      	mov	r9, r2
    3cde:	bdf0      	pop	{r4, r5, r6, r7, pc}
    3ce0:	2330      	movs	r3, #48	; 0x30
    3ce2:	469c      	mov	ip, r3
    3ce4:	4484      	add	ip, r0
    3ce6:	4663      	mov	r3, ip
    3ce8:	4661      	mov	r1, ip
    3cea:	9301      	str	r3, [sp, #4]
    3cec:	7840      	ldrb	r0, [r0, #1]
    3cee:	2301      	movs	r3, #1
    3cf0:	002a      	movs	r2, r5
    3cf2:	4e17      	ldr	r6, [pc, #92]	; (3d50 <move_window+0x98>)
    3cf4:	47b0      	blx	r6
    3cf6:	2301      	movs	r3, #1
    3cf8:	2800      	cmp	r0, #0
    3cfa:	d1ec      	bne.n	3cd6 <move_window+0x1e>
    3cfc:	2300      	movs	r3, #0
    3cfe:	7123      	strb	r3, [r4, #4]
    3d00:	6a23      	ldr	r3, [r4, #32]
    3d02:	69e2      	ldr	r2, [r4, #28]
    3d04:	4694      	mov	ip, r2
    3d06:	4463      	add	r3, ip
    3d08:	429d      	cmp	r5, r3
    3d0a:	d2e1      	bcs.n	3cd0 <move_window+0x18>
    3d0c:	78e6      	ldrb	r6, [r4, #3]
    3d0e:	2e01      	cmp	r6, #1
    3d10:	d9de      	bls.n	3cd0 <move_window+0x18>
    3d12:	4b0f      	ldr	r3, [pc, #60]	; (3d50 <move_window+0x98>)
    3d14:	4699      	mov	r9, r3
    3d16:	69e3      	ldr	r3, [r4, #28]
    3d18:	469c      	mov	ip, r3
    3d1a:	4465      	add	r5, ip
    3d1c:	7860      	ldrb	r0, [r4, #1]
    3d1e:	2301      	movs	r3, #1
    3d20:	002a      	movs	r2, r5
    3d22:	9901      	ldr	r1, [sp, #4]
    3d24:	47c8      	blx	r9
    3d26:	3e01      	subs	r6, #1
    3d28:	b2f6      	uxtb	r6, r6
    3d2a:	2e01      	cmp	r6, #1
    3d2c:	d1f3      	bne.n	3d16 <move_window+0x5e>
    3d2e:	e7cf      	b.n	3cd0 <move_window+0x18>
    3d30:	0021      	movs	r1, r4
    3d32:	3130      	adds	r1, #48	; 0x30
    3d34:	7860      	ldrb	r0, [r4, #1]
    3d36:	3301      	adds	r3, #1
    3d38:	003a      	movs	r2, r7
    3d3a:	4d06      	ldr	r5, [pc, #24]	; (3d54 <move_window+0x9c>)
    3d3c:	47a8      	blx	r5
    3d3e:	2301      	movs	r3, #1
    3d40:	2800      	cmp	r0, #0
    3d42:	d1c8      	bne.n	3cd6 <move_window+0x1e>
    3d44:	62e7      	str	r7, [r4, #44]	; 0x2c
    3d46:	2300      	movs	r3, #0
    3d48:	e7c5      	b.n	3cd6 <move_window+0x1e>
    3d4a:	2300      	movs	r3, #0
    3d4c:	e7c3      	b.n	3cd6 <move_window+0x1e>
    3d4e:	46c0      	nop			; (mov r8, r8)
    3d50:	00003699 	.word	0x00003699
    3d54:	00003615 	.word	0x00003615

00003d58 <get_fat>:
    3d58:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    3d5a:	0005      	movs	r5, r0
    3d5c:	000c      	movs	r4, r1
    3d5e:	2901      	cmp	r1, #1
    3d60:	d974      	bls.n	3e4c <get_fat+0xf4>
    3d62:	2001      	movs	r0, #1
    3d64:	69ab      	ldr	r3, [r5, #24]
    3d66:	4299      	cmp	r1, r3
    3d68:	d271      	bcs.n	3e4e <get_fat+0xf6>
    3d6a:	782b      	ldrb	r3, [r5, #0]
    3d6c:	2b02      	cmp	r3, #2
    3d6e:	d034      	beq.n	3dda <get_fat+0x82>
    3d70:	2b03      	cmp	r3, #3
    3d72:	d049      	beq.n	3e08 <get_fat+0xb0>
    3d74:	2b01      	cmp	r3, #1
    3d76:	d002      	beq.n	3d7e <get_fat+0x26>
    3d78:	2001      	movs	r0, #1
    3d7a:	4240      	negs	r0, r0
    3d7c:	e067      	b.n	3e4e <get_fat+0xf6>
    3d7e:	084e      	lsrs	r6, r1, #1
    3d80:	1876      	adds	r6, r6, r1
    3d82:	0a71      	lsrs	r1, r6, #9
    3d84:	6a2b      	ldr	r3, [r5, #32]
    3d86:	469c      	mov	ip, r3
    3d88:	4461      	add	r1, ip
    3d8a:	0028      	movs	r0, r5
    3d8c:	4b30      	ldr	r3, [pc, #192]	; (3e50 <get_fat+0xf8>)
    3d8e:	4798      	blx	r3
    3d90:	2800      	cmp	r0, #0
    3d92:	d002      	beq.n	3d9a <get_fat+0x42>
    3d94:	2001      	movs	r0, #1
    3d96:	4240      	negs	r0, r0
    3d98:	e059      	b.n	3e4e <get_fat+0xf6>
    3d9a:	05f3      	lsls	r3, r6, #23
    3d9c:	0ddb      	lsrs	r3, r3, #23
    3d9e:	18eb      	adds	r3, r5, r3
    3da0:	3330      	adds	r3, #48	; 0x30
    3da2:	781f      	ldrb	r7, [r3, #0]
    3da4:	3601      	adds	r6, #1
    3da6:	0a71      	lsrs	r1, r6, #9
    3da8:	6a2b      	ldr	r3, [r5, #32]
    3daa:	469c      	mov	ip, r3
    3dac:	4461      	add	r1, ip
    3dae:	0028      	movs	r0, r5
    3db0:	4b27      	ldr	r3, [pc, #156]	; (3e50 <get_fat+0xf8>)
    3db2:	4798      	blx	r3
    3db4:	2800      	cmp	r0, #0
    3db6:	d002      	beq.n	3dbe <get_fat+0x66>
    3db8:	2001      	movs	r0, #1
    3dba:	4240      	negs	r0, r0
    3dbc:	e047      	b.n	3e4e <get_fat+0xf6>
    3dbe:	05f6      	lsls	r6, r6, #23
    3dc0:	0df6      	lsrs	r6, r6, #23
    3dc2:	19ad      	adds	r5, r5, r6
    3dc4:	3530      	adds	r5, #48	; 0x30
    3dc6:	7828      	ldrb	r0, [r5, #0]
    3dc8:	0200      	lsls	r0, r0, #8
    3dca:	4338      	orrs	r0, r7
    3dcc:	07e3      	lsls	r3, r4, #31
    3dce:	d501      	bpl.n	3dd4 <get_fat+0x7c>
    3dd0:	0900      	lsrs	r0, r0, #4
    3dd2:	e03c      	b.n	3e4e <get_fat+0xf6>
    3dd4:	0500      	lsls	r0, r0, #20
    3dd6:	0d00      	lsrs	r0, r0, #20
    3dd8:	e039      	b.n	3e4e <get_fat+0xf6>
    3dda:	0a09      	lsrs	r1, r1, #8
    3ddc:	6a2b      	ldr	r3, [r5, #32]
    3dde:	469c      	mov	ip, r3
    3de0:	4461      	add	r1, ip
    3de2:	0028      	movs	r0, r5
    3de4:	4b1a      	ldr	r3, [pc, #104]	; (3e50 <get_fat+0xf8>)
    3de6:	4798      	blx	r3
    3de8:	2800      	cmp	r0, #0
    3dea:	d002      	beq.n	3df2 <get_fat+0x9a>
    3dec:	2001      	movs	r0, #1
    3dee:	4240      	negs	r0, r0
    3df0:	e02d      	b.n	3e4e <get_fat+0xf6>
    3df2:	0064      	lsls	r4, r4, #1
    3df4:	23ff      	movs	r3, #255	; 0xff
    3df6:	005b      	lsls	r3, r3, #1
    3df8:	401c      	ands	r4, r3
    3dfa:	192d      	adds	r5, r5, r4
    3dfc:	3530      	adds	r5, #48	; 0x30
    3dfe:	786b      	ldrb	r3, [r5, #1]
    3e00:	021b      	lsls	r3, r3, #8
    3e02:	7828      	ldrb	r0, [r5, #0]
    3e04:	4318      	orrs	r0, r3
    3e06:	e022      	b.n	3e4e <get_fat+0xf6>
    3e08:	09c9      	lsrs	r1, r1, #7
    3e0a:	6a2b      	ldr	r3, [r5, #32]
    3e0c:	469c      	mov	ip, r3
    3e0e:	4461      	add	r1, ip
    3e10:	0028      	movs	r0, r5
    3e12:	4b0f      	ldr	r3, [pc, #60]	; (3e50 <get_fat+0xf8>)
    3e14:	4798      	blx	r3
    3e16:	2800      	cmp	r0, #0
    3e18:	d002      	beq.n	3e20 <get_fat+0xc8>
    3e1a:	2001      	movs	r0, #1
    3e1c:	4240      	negs	r0, r0
    3e1e:	e016      	b.n	3e4e <get_fat+0xf6>
    3e20:	00a4      	lsls	r4, r4, #2
    3e22:	23fe      	movs	r3, #254	; 0xfe
    3e24:	005b      	lsls	r3, r3, #1
    3e26:	401c      	ands	r4, r3
    3e28:	0023      	movs	r3, r4
    3e2a:	3330      	adds	r3, #48	; 0x30
    3e2c:	18eb      	adds	r3, r5, r3
    3e2e:	78d8      	ldrb	r0, [r3, #3]
    3e30:	0600      	lsls	r0, r0, #24
    3e32:	789a      	ldrb	r2, [r3, #2]
    3e34:	0412      	lsls	r2, r2, #16
    3e36:	4310      	orrs	r0, r2
    3e38:	192c      	adds	r4, r5, r4
    3e3a:	3430      	adds	r4, #48	; 0x30
    3e3c:	7822      	ldrb	r2, [r4, #0]
    3e3e:	4310      	orrs	r0, r2
    3e40:	785b      	ldrb	r3, [r3, #1]
    3e42:	021b      	lsls	r3, r3, #8
    3e44:	4318      	orrs	r0, r3
    3e46:	0100      	lsls	r0, r0, #4
    3e48:	0900      	lsrs	r0, r0, #4
    3e4a:	e000      	b.n	3e4e <get_fat+0xf6>
    3e4c:	2001      	movs	r0, #1
    3e4e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    3e50:	00003cb9 	.word	0x00003cb9

00003e54 <dir_sdi>:
    3e54:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    3e56:	0004      	movs	r4, r0
    3e58:	000d      	movs	r5, r1
    3e5a:	80e1      	strh	r1, [r4, #6]
    3e5c:	6881      	ldr	r1, [r0, #8]
    3e5e:	2002      	movs	r0, #2
    3e60:	2901      	cmp	r1, #1
    3e62:	d003      	beq.n	3e6c <dir_sdi+0x18>
    3e64:	6823      	ldr	r3, [r4, #0]
    3e66:	699a      	ldr	r2, [r3, #24]
    3e68:	4291      	cmp	r1, r2
    3e6a:	d300      	bcc.n	3e6e <dir_sdi+0x1a>
    3e6c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    3e6e:	2900      	cmp	r1, #0
    3e70:	d119      	bne.n	3ea6 <dir_sdi+0x52>
    3e72:	781a      	ldrb	r2, [r3, #0]
    3e74:	2a03      	cmp	r2, #3
    3e76:	d013      	beq.n	3ea0 <dir_sdi+0x4c>
    3e78:	2200      	movs	r2, #0
    3e7a:	60e2      	str	r2, [r4, #12]
    3e7c:	891a      	ldrh	r2, [r3, #8]
    3e7e:	2002      	movs	r0, #2
    3e80:	42aa      	cmp	r2, r5
    3e82:	d9f3      	bls.n	3e6c <dir_sdi+0x18>
    3e84:	092a      	lsrs	r2, r5, #4
    3e86:	b292      	uxth	r2, r2
    3e88:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    3e8a:	189b      	adds	r3, r3, r2
    3e8c:	6123      	str	r3, [r4, #16]
    3e8e:	6823      	ldr	r3, [r4, #0]
    3e90:	3330      	adds	r3, #48	; 0x30
    3e92:	220f      	movs	r2, #15
    3e94:	4015      	ands	r5, r2
    3e96:	016d      	lsls	r5, r5, #5
    3e98:	195d      	adds	r5, r3, r5
    3e9a:	6165      	str	r5, [r4, #20]
    3e9c:	2000      	movs	r0, #0
    3e9e:	e7e5      	b.n	3e6c <dir_sdi+0x18>
    3ea0:	6a59      	ldr	r1, [r3, #36]	; 0x24
    3ea2:	2900      	cmp	r1, #0
    3ea4:	d0e8      	beq.n	3e78 <dir_sdi+0x24>
    3ea6:	789e      	ldrb	r6, [r3, #2]
    3ea8:	0136      	lsls	r6, r6, #4
    3eaa:	42b5      	cmp	r5, r6
    3eac:	d313      	bcc.n	3ed6 <dir_sdi+0x82>
    3eae:	1bad      	subs	r5, r5, r6
    3eb0:	b2ad      	uxth	r5, r5
    3eb2:	4f10      	ldr	r7, [pc, #64]	; (3ef4 <dir_sdi+0xa0>)
    3eb4:	e000      	b.n	3eb8 <dir_sdi+0x64>
    3eb6:	001d      	movs	r5, r3
    3eb8:	6820      	ldr	r0, [r4, #0]
    3eba:	47b8      	blx	r7
    3ebc:	0001      	movs	r1, r0
    3ebe:	1c43      	adds	r3, r0, #1
    3ec0:	d012      	beq.n	3ee8 <dir_sdi+0x94>
    3ec2:	2801      	cmp	r0, #1
    3ec4:	d912      	bls.n	3eec <dir_sdi+0x98>
    3ec6:	6823      	ldr	r3, [r4, #0]
    3ec8:	699b      	ldr	r3, [r3, #24]
    3eca:	4298      	cmp	r0, r3
    3ecc:	d210      	bcs.n	3ef0 <dir_sdi+0x9c>
    3ece:	1bab      	subs	r3, r5, r6
    3ed0:	b29b      	uxth	r3, r3
    3ed2:	42b5      	cmp	r5, r6
    3ed4:	d2ef      	bcs.n	3eb6 <dir_sdi+0x62>
    3ed6:	60e1      	str	r1, [r4, #12]
    3ed8:	6820      	ldr	r0, [r4, #0]
    3eda:	4b07      	ldr	r3, [pc, #28]	; (3ef8 <dir_sdi+0xa4>)
    3edc:	4798      	blx	r3
    3ede:	092b      	lsrs	r3, r5, #4
    3ee0:	b29b      	uxth	r3, r3
    3ee2:	1818      	adds	r0, r3, r0
    3ee4:	6120      	str	r0, [r4, #16]
    3ee6:	e7d2      	b.n	3e8e <dir_sdi+0x3a>
    3ee8:	2001      	movs	r0, #1
    3eea:	e7bf      	b.n	3e6c <dir_sdi+0x18>
    3eec:	2002      	movs	r0, #2
    3eee:	e7bd      	b.n	3e6c <dir_sdi+0x18>
    3ef0:	2002      	movs	r0, #2
    3ef2:	e7bb      	b.n	3e6c <dir_sdi+0x18>
    3ef4:	00003d59 	.word	0x00003d59
    3ef8:	000037ff 	.word	0x000037ff

00003efc <put_fat>:
    3efc:	b5f0      	push	{r4, r5, r6, r7, lr}
    3efe:	46c6      	mov	lr, r8
    3f00:	b500      	push	{lr}
    3f02:	0007      	movs	r7, r0
    3f04:	000c      	movs	r4, r1
    3f06:	0016      	movs	r6, r2
    3f08:	2502      	movs	r5, #2
    3f0a:	2901      	cmp	r1, #1
    3f0c:	d902      	bls.n	3f14 <put_fat+0x18>
    3f0e:	6983      	ldr	r3, [r0, #24]
    3f10:	4299      	cmp	r1, r3
    3f12:	d303      	bcc.n	3f1c <put_fat+0x20>
    3f14:	0028      	movs	r0, r5
    3f16:	bc04      	pop	{r2}
    3f18:	4690      	mov	r8, r2
    3f1a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    3f1c:	7803      	ldrb	r3, [r0, #0]
    3f1e:	2b02      	cmp	r3, #2
    3f20:	d053      	beq.n	3fca <put_fat+0xce>
    3f22:	2b03      	cmp	r3, #3
    3f24:	d063      	beq.n	3fee <put_fat+0xf2>
    3f26:	2502      	movs	r5, #2
    3f28:	2b01      	cmp	r3, #1
    3f2a:	d002      	beq.n	3f32 <put_fat+0x36>
    3f2c:	2301      	movs	r3, #1
    3f2e:	713b      	strb	r3, [r7, #4]
    3f30:	e7f0      	b.n	3f14 <put_fat+0x18>
    3f32:	084b      	lsrs	r3, r1, #1
    3f34:	4698      	mov	r8, r3
    3f36:	4488      	add	r8, r1
    3f38:	4643      	mov	r3, r8
    3f3a:	0a59      	lsrs	r1, r3, #9
    3f3c:	6a03      	ldr	r3, [r0, #32]
    3f3e:	469c      	mov	ip, r3
    3f40:	4461      	add	r1, ip
    3f42:	4b3b      	ldr	r3, [pc, #236]	; (4030 <put_fat+0x134>)
    3f44:	4798      	blx	r3
    3f46:	1e05      	subs	r5, r0, #0
    3f48:	d1f0      	bne.n	3f2c <put_fat+0x30>
    3f4a:	4643      	mov	r3, r8
    3f4c:	05db      	lsls	r3, r3, #23
    3f4e:	0ddb      	lsrs	r3, r3, #23
    3f50:	07e2      	lsls	r2, r4, #31
    3f52:	d51f      	bpl.n	3f94 <put_fat+0x98>
    3f54:	18fb      	adds	r3, r7, r3
    3f56:	3330      	adds	r3, #48	; 0x30
    3f58:	7819      	ldrb	r1, [r3, #0]
    3f5a:	220f      	movs	r2, #15
    3f5c:	400a      	ands	r2, r1
    3f5e:	0131      	lsls	r1, r6, #4
    3f60:	20ff      	movs	r0, #255	; 0xff
    3f62:	0100      	lsls	r0, r0, #4
    3f64:	4001      	ands	r1, r0
    3f66:	430a      	orrs	r2, r1
    3f68:	701a      	strb	r2, [r3, #0]
    3f6a:	4644      	mov	r4, r8
    3f6c:	3401      	adds	r4, #1
    3f6e:	2301      	movs	r3, #1
    3f70:	713b      	strb	r3, [r7, #4]
    3f72:	0a61      	lsrs	r1, r4, #9
    3f74:	6a3b      	ldr	r3, [r7, #32]
    3f76:	469c      	mov	ip, r3
    3f78:	4461      	add	r1, ip
    3f7a:	0038      	movs	r0, r7
    3f7c:	4b2c      	ldr	r3, [pc, #176]	; (4030 <put_fat+0x134>)
    3f7e:	4798      	blx	r3
    3f80:	2800      	cmp	r0, #0
    3f82:	d151      	bne.n	4028 <put_fat+0x12c>
    3f84:	05e4      	lsls	r4, r4, #23
    3f86:	0de4      	lsrs	r4, r4, #23
    3f88:	0936      	lsrs	r6, r6, #4
    3f8a:	b2f6      	uxtb	r6, r6
    3f8c:	193c      	adds	r4, r7, r4
    3f8e:	3430      	adds	r4, #48	; 0x30
    3f90:	7026      	strb	r6, [r4, #0]
    3f92:	e7cb      	b.n	3f2c <put_fat+0x30>
    3f94:	18fb      	adds	r3, r7, r3
    3f96:	3330      	adds	r3, #48	; 0x30
    3f98:	701e      	strb	r6, [r3, #0]
    3f9a:	4644      	mov	r4, r8
    3f9c:	3401      	adds	r4, #1
    3f9e:	2301      	movs	r3, #1
    3fa0:	713b      	strb	r3, [r7, #4]
    3fa2:	0a61      	lsrs	r1, r4, #9
    3fa4:	6a3b      	ldr	r3, [r7, #32]
    3fa6:	469c      	mov	ip, r3
    3fa8:	4461      	add	r1, ip
    3faa:	0038      	movs	r0, r7
    3fac:	4b20      	ldr	r3, [pc, #128]	; (4030 <put_fat+0x134>)
    3fae:	4798      	blx	r3
    3fb0:	2800      	cmp	r0, #0
    3fb2:	d13b      	bne.n	402c <put_fat+0x130>
    3fb4:	05e4      	lsls	r4, r4, #23
    3fb6:	0de4      	lsrs	r4, r4, #23
    3fb8:	193b      	adds	r3, r7, r4
    3fba:	3330      	adds	r3, #48	; 0x30
    3fbc:	781b      	ldrb	r3, [r3, #0]
    3fbe:	220f      	movs	r2, #15
    3fc0:	4393      	bics	r3, r2
    3fc2:	0536      	lsls	r6, r6, #20
    3fc4:	0f36      	lsrs	r6, r6, #28
    3fc6:	431e      	orrs	r6, r3
    3fc8:	e7e0      	b.n	3f8c <put_fat+0x90>
    3fca:	0a09      	lsrs	r1, r1, #8
    3fcc:	6a03      	ldr	r3, [r0, #32]
    3fce:	469c      	mov	ip, r3
    3fd0:	4461      	add	r1, ip
    3fd2:	4b17      	ldr	r3, [pc, #92]	; (4030 <put_fat+0x134>)
    3fd4:	4798      	blx	r3
    3fd6:	1e05      	subs	r5, r0, #0
    3fd8:	d1a8      	bne.n	3f2c <put_fat+0x30>
    3fda:	0063      	lsls	r3, r4, #1
    3fdc:	24ff      	movs	r4, #255	; 0xff
    3fde:	0064      	lsls	r4, r4, #1
    3fe0:	4023      	ands	r3, r4
    3fe2:	18fb      	adds	r3, r7, r3
    3fe4:	3330      	adds	r3, #48	; 0x30
    3fe6:	701e      	strb	r6, [r3, #0]
    3fe8:	0a36      	lsrs	r6, r6, #8
    3fea:	705e      	strb	r6, [r3, #1]
    3fec:	e79e      	b.n	3f2c <put_fat+0x30>
    3fee:	09c9      	lsrs	r1, r1, #7
    3ff0:	6a03      	ldr	r3, [r0, #32]
    3ff2:	469c      	mov	ip, r3
    3ff4:	4461      	add	r1, ip
    3ff6:	4b0e      	ldr	r3, [pc, #56]	; (4030 <put_fat+0x134>)
    3ff8:	4798      	blx	r3
    3ffa:	1e05      	subs	r5, r0, #0
    3ffc:	d196      	bne.n	3f2c <put_fat+0x30>
    3ffe:	00a4      	lsls	r4, r4, #2
    4000:	23fe      	movs	r3, #254	; 0xfe
    4002:	005b      	lsls	r3, r3, #1
    4004:	401c      	ands	r4, r3
    4006:	0022      	movs	r2, r4
    4008:	3230      	adds	r2, #48	; 0x30
    400a:	18ba      	adds	r2, r7, r2
    400c:	78d3      	ldrb	r3, [r2, #3]
    400e:	193c      	adds	r4, r7, r4
    4010:	3430      	adds	r4, #48	; 0x30
    4012:	091b      	lsrs	r3, r3, #4
    4014:	071b      	lsls	r3, r3, #28
    4016:	431e      	orrs	r6, r3
    4018:	7026      	strb	r6, [r4, #0]
    401a:	0a33      	lsrs	r3, r6, #8
    401c:	7053      	strb	r3, [r2, #1]
    401e:	0c33      	lsrs	r3, r6, #16
    4020:	7093      	strb	r3, [r2, #2]
    4022:	0e36      	lsrs	r6, r6, #24
    4024:	70d6      	strb	r6, [r2, #3]
    4026:	e781      	b.n	3f2c <put_fat+0x30>
    4028:	0005      	movs	r5, r0
    402a:	e77f      	b.n	3f2c <put_fat+0x30>
    402c:	0005      	movs	r5, r0
    402e:	e77d      	b.n	3f2c <put_fat+0x30>
    4030:	00003cb9 	.word	0x00003cb9

00004034 <create_chain>:
    4034:	b5f0      	push	{r4, r5, r6, r7, lr}
    4036:	46c6      	mov	lr, r8
    4038:	b500      	push	{lr}
    403a:	0005      	movs	r5, r0
    403c:	4688      	mov	r8, r1
    403e:	2900      	cmp	r1, #0
    4040:	d107      	bne.n	4052 <create_chain+0x1e>
    4042:	68c6      	ldr	r6, [r0, #12]
    4044:	2e00      	cmp	r6, #0
    4046:	d00d      	beq.n	4064 <create_chain+0x30>
    4048:	6983      	ldr	r3, [r0, #24]
    404a:	429e      	cmp	r6, r3
    404c:	d30b      	bcc.n	4066 <create_chain+0x32>
    404e:	2601      	movs	r6, #1
    4050:	e009      	b.n	4066 <create_chain+0x32>
    4052:	4b26      	ldr	r3, [pc, #152]	; (40ec <create_chain+0xb8>)
    4054:	4798      	blx	r3
    4056:	2801      	cmp	r0, #1
    4058:	d93d      	bls.n	40d6 <create_chain+0xa2>
    405a:	69ab      	ldr	r3, [r5, #24]
    405c:	4646      	mov	r6, r8
    405e:	4298      	cmp	r0, r3
    4060:	d201      	bcs.n	4066 <create_chain+0x32>
    4062:	e03d      	b.n	40e0 <create_chain+0xac>
    4064:	2601      	movs	r6, #1
    4066:	0034      	movs	r4, r6
    4068:	4f20      	ldr	r7, [pc, #128]	; (40ec <create_chain+0xb8>)
    406a:	e00a      	b.n	4082 <create_chain+0x4e>
    406c:	0021      	movs	r1, r4
    406e:	0028      	movs	r0, r5
    4070:	47b8      	blx	r7
    4072:	2800      	cmp	r0, #0
    4074:	d00d      	beq.n	4092 <create_chain+0x5e>
    4076:	1c43      	adds	r3, r0, #1
    4078:	d032      	beq.n	40e0 <create_chain+0xac>
    407a:	2801      	cmp	r0, #1
    407c:	d030      	beq.n	40e0 <create_chain+0xac>
    407e:	42b4      	cmp	r4, r6
    4080:	d02d      	beq.n	40de <create_chain+0xaa>
    4082:	3401      	adds	r4, #1
    4084:	69ab      	ldr	r3, [r5, #24]
    4086:	429c      	cmp	r4, r3
    4088:	d3f0      	bcc.n	406c <create_chain+0x38>
    408a:	2e01      	cmp	r6, #1
    408c:	d925      	bls.n	40da <create_chain+0xa6>
    408e:	2402      	movs	r4, #2
    4090:	e7ec      	b.n	406c <create_chain+0x38>
    4092:	4a17      	ldr	r2, [pc, #92]	; (40f0 <create_chain+0xbc>)
    4094:	0021      	movs	r1, r4
    4096:	0028      	movs	r0, r5
    4098:	4b16      	ldr	r3, [pc, #88]	; (40f4 <create_chain+0xc0>)
    409a:	4798      	blx	r3
    409c:	2800      	cmp	r0, #0
    409e:	d113      	bne.n	40c8 <create_chain+0x94>
    40a0:	4643      	mov	r3, r8
    40a2:	2b00      	cmp	r3, #0
    40a4:	d109      	bne.n	40ba <create_chain+0x86>
    40a6:	60ec      	str	r4, [r5, #12]
    40a8:	692b      	ldr	r3, [r5, #16]
    40aa:	1c5a      	adds	r2, r3, #1
    40ac:	d01b      	beq.n	40e6 <create_chain+0xb2>
    40ae:	3b01      	subs	r3, #1
    40b0:	612b      	str	r3, [r5, #16]
    40b2:	2301      	movs	r3, #1
    40b4:	716b      	strb	r3, [r5, #5]
    40b6:	0020      	movs	r0, r4
    40b8:	e012      	b.n	40e0 <create_chain+0xac>
    40ba:	0022      	movs	r2, r4
    40bc:	4641      	mov	r1, r8
    40be:	0028      	movs	r0, r5
    40c0:	4b0c      	ldr	r3, [pc, #48]	; (40f4 <create_chain+0xc0>)
    40c2:	4798      	blx	r3
    40c4:	2800      	cmp	r0, #0
    40c6:	d0ee      	beq.n	40a6 <create_chain+0x72>
    40c8:	3801      	subs	r0, #1
    40ca:	4242      	negs	r2, r0
    40cc:	4142      	adcs	r2, r0
    40ce:	4250      	negs	r0, r2
    40d0:	2301      	movs	r3, #1
    40d2:	4318      	orrs	r0, r3
    40d4:	e004      	b.n	40e0 <create_chain+0xac>
    40d6:	2001      	movs	r0, #1
    40d8:	e002      	b.n	40e0 <create_chain+0xac>
    40da:	2000      	movs	r0, #0
    40dc:	e000      	b.n	40e0 <create_chain+0xac>
    40de:	2000      	movs	r0, #0
    40e0:	bc04      	pop	{r2}
    40e2:	4690      	mov	r8, r2
    40e4:	bdf0      	pop	{r4, r5, r6, r7, pc}
    40e6:	0020      	movs	r0, r4
    40e8:	e7fa      	b.n	40e0 <create_chain+0xac>
    40ea:	46c0      	nop			; (mov r8, r8)
    40ec:	00003d59 	.word	0x00003d59
    40f0:	0fffffff 	.word	0x0fffffff
    40f4:	00003efd 	.word	0x00003efd

000040f8 <remove_chain>:
    40f8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    40fa:	46ce      	mov	lr, r9
    40fc:	4647      	mov	r7, r8
    40fe:	b580      	push	{r7, lr}
    4100:	0004      	movs	r4, r0
    4102:	000d      	movs	r5, r1
    4104:	2002      	movs	r0, #2
    4106:	2901      	cmp	r1, #1
    4108:	d902      	bls.n	4110 <remove_chain+0x18>
    410a:	69a3      	ldr	r3, [r4, #24]
    410c:	4299      	cmp	r1, r3
    410e:	d303      	bcc.n	4118 <remove_chain+0x20>
    4110:	bc0c      	pop	{r2, r3}
    4112:	4690      	mov	r8, r2
    4114:	4699      	mov	r9, r3
    4116:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    4118:	4f13      	ldr	r7, [pc, #76]	; (4168 <remove_chain+0x70>)
    411a:	4b14      	ldr	r3, [pc, #80]	; (416c <remove_chain+0x74>)
    411c:	4698      	mov	r8, r3
    411e:	2301      	movs	r3, #1
    4120:	4699      	mov	r9, r3
    4122:	e003      	b.n	412c <remove_chain+0x34>
    4124:	0035      	movs	r5, r6
    4126:	69a3      	ldr	r3, [r4, #24]
    4128:	42b3      	cmp	r3, r6
    412a:	d9f1      	bls.n	4110 <remove_chain+0x18>
    412c:	0029      	movs	r1, r5
    412e:	0020      	movs	r0, r4
    4130:	47b8      	blx	r7
    4132:	1e06      	subs	r6, r0, #0
    4134:	d011      	beq.n	415a <remove_chain+0x62>
    4136:	2801      	cmp	r0, #1
    4138:	d011      	beq.n	415e <remove_chain+0x66>
    413a:	1c43      	adds	r3, r0, #1
    413c:	d011      	beq.n	4162 <remove_chain+0x6a>
    413e:	2200      	movs	r2, #0
    4140:	0029      	movs	r1, r5
    4142:	0020      	movs	r0, r4
    4144:	47c0      	blx	r8
    4146:	2800      	cmp	r0, #0
    4148:	d1e2      	bne.n	4110 <remove_chain+0x18>
    414a:	6923      	ldr	r3, [r4, #16]
    414c:	1c5a      	adds	r2, r3, #1
    414e:	d0e9      	beq.n	4124 <remove_chain+0x2c>
    4150:	3301      	adds	r3, #1
    4152:	6123      	str	r3, [r4, #16]
    4154:	464b      	mov	r3, r9
    4156:	7163      	strb	r3, [r4, #5]
    4158:	e7e4      	b.n	4124 <remove_chain+0x2c>
    415a:	2000      	movs	r0, #0
    415c:	e7d8      	b.n	4110 <remove_chain+0x18>
    415e:	2002      	movs	r0, #2
    4160:	e7d6      	b.n	4110 <remove_chain+0x18>
    4162:	2001      	movs	r0, #1
    4164:	e7d4      	b.n	4110 <remove_chain+0x18>
    4166:	46c0      	nop			; (mov r8, r8)
    4168:	00003d59 	.word	0x00003d59
    416c:	00003efd 	.word	0x00003efd

00004170 <dir_next>:
    4170:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    4172:	46d6      	mov	lr, sl
    4174:	4647      	mov	r7, r8
    4176:	b580      	push	{r7, lr}
    4178:	0006      	movs	r6, r0
    417a:	000d      	movs	r5, r1
    417c:	88c4      	ldrh	r4, [r0, #6]
    417e:	3401      	adds	r4, #1
    4180:	b2a4      	uxth	r4, r4
    4182:	2004      	movs	r0, #4
    4184:	2c00      	cmp	r4, #0
    4186:	d103      	bne.n	4190 <dir_next+0x20>
    4188:	bc0c      	pop	{r2, r3}
    418a:	4690      	mov	r8, r2
    418c:	469a      	mov	sl, r3
    418e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    4190:	6933      	ldr	r3, [r6, #16]
    4192:	2b00      	cmp	r3, #0
    4194:	d0f8      	beq.n	4188 <dir_next+0x18>
    4196:	270f      	movs	r7, #15
    4198:	4027      	ands	r7, r4
    419a:	d10f      	bne.n	41bc <dir_next+0x4c>
    419c:	3301      	adds	r3, #1
    419e:	6133      	str	r3, [r6, #16]
    41a0:	68f1      	ldr	r1, [r6, #12]
    41a2:	2900      	cmp	r1, #0
    41a4:	d104      	bne.n	41b0 <dir_next+0x40>
    41a6:	6833      	ldr	r3, [r6, #0]
    41a8:	891b      	ldrh	r3, [r3, #8]
    41aa:	42a3      	cmp	r3, r4
    41ac:	d9ec      	bls.n	4188 <dir_next+0x18>
    41ae:	e005      	b.n	41bc <dir_next+0x4c>
    41b0:	6830      	ldr	r0, [r6, #0]
    41b2:	7883      	ldrb	r3, [r0, #2]
    41b4:	3b01      	subs	r3, #1
    41b6:	0922      	lsrs	r2, r4, #4
    41b8:	421a      	tst	r2, r3
    41ba:	d007      	beq.n	41cc <dir_next+0x5c>
    41bc:	80f4      	strh	r4, [r6, #6]
    41be:	6833      	ldr	r3, [r6, #0]
    41c0:	3330      	adds	r3, #48	; 0x30
    41c2:	017f      	lsls	r7, r7, #5
    41c4:	19df      	adds	r7, r3, r7
    41c6:	6177      	str	r7, [r6, #20]
    41c8:	2000      	movs	r0, #0
    41ca:	e7dd      	b.n	4188 <dir_next+0x18>
    41cc:	4b2c      	ldr	r3, [pc, #176]	; (4280 <dir_next+0x110>)
    41ce:	4798      	blx	r3
    41d0:	4680      	mov	r8, r0
    41d2:	2002      	movs	r0, #2
    41d4:	4643      	mov	r3, r8
    41d6:	2b01      	cmp	r3, #1
    41d8:	d9d6      	bls.n	4188 <dir_next+0x18>
    41da:	3301      	adds	r3, #1
    41dc:	d04b      	beq.n	4276 <dir_next+0x106>
    41de:	6833      	ldr	r3, [r6, #0]
    41e0:	699a      	ldr	r2, [r3, #24]
    41e2:	4590      	cmp	r8, r2
    41e4:	d33f      	bcc.n	4266 <dir_next+0xf6>
    41e6:	3002      	adds	r0, #2
    41e8:	2d00      	cmp	r5, #0
    41ea:	d0cd      	beq.n	4188 <dir_next+0x18>
    41ec:	68f1      	ldr	r1, [r6, #12]
    41ee:	0018      	movs	r0, r3
    41f0:	4b24      	ldr	r3, [pc, #144]	; (4284 <dir_next+0x114>)
    41f2:	4798      	blx	r3
    41f4:	4680      	mov	r8, r0
    41f6:	2007      	movs	r0, #7
    41f8:	4643      	mov	r3, r8
    41fa:	2b00      	cmp	r3, #0
    41fc:	d0c4      	beq.n	4188 <dir_next+0x18>
    41fe:	3805      	subs	r0, #5
    4200:	2b01      	cmp	r3, #1
    4202:	d0c1      	beq.n	4188 <dir_next+0x18>
    4204:	3801      	subs	r0, #1
    4206:	3301      	adds	r3, #1
    4208:	d0be      	beq.n	4188 <dir_next+0x18>
    420a:	2100      	movs	r1, #0
    420c:	6830      	ldr	r0, [r6, #0]
    420e:	4b1e      	ldr	r3, [pc, #120]	; (4288 <dir_next+0x118>)
    4210:	4798      	blx	r3
    4212:	0003      	movs	r3, r0
    4214:	2001      	movs	r0, #1
    4216:	2b00      	cmp	r3, #0
    4218:	d1b6      	bne.n	4188 <dir_next+0x18>
    421a:	6830      	ldr	r0, [r6, #0]
    421c:	3030      	adds	r0, #48	; 0x30
    421e:	2280      	movs	r2, #128	; 0x80
    4220:	0092      	lsls	r2, r2, #2
    4222:	2100      	movs	r1, #0
    4224:	4b19      	ldr	r3, [pc, #100]	; (428c <dir_next+0x11c>)
    4226:	4798      	blx	r3
    4228:	6835      	ldr	r5, [r6, #0]
    422a:	4641      	mov	r1, r8
    422c:	0028      	movs	r0, r5
    422e:	4b18      	ldr	r3, [pc, #96]	; (4290 <dir_next+0x120>)
    4230:	4798      	blx	r3
    4232:	62e8      	str	r0, [r5, #44]	; 0x2c
    4234:	2500      	movs	r5, #0
    4236:	2301      	movs	r3, #1
    4238:	469a      	mov	sl, r3
    423a:	6833      	ldr	r3, [r6, #0]
    423c:	789a      	ldrb	r2, [r3, #2]
    423e:	42aa      	cmp	r2, r5
    4240:	d90e      	bls.n	4260 <dir_next+0xf0>
    4242:	4652      	mov	r2, sl
    4244:	711a      	strb	r2, [r3, #4]
    4246:	2100      	movs	r1, #0
    4248:	6830      	ldr	r0, [r6, #0]
    424a:	4b0f      	ldr	r3, [pc, #60]	; (4288 <dir_next+0x118>)
    424c:	4798      	blx	r3
    424e:	2800      	cmp	r0, #0
    4250:	d113      	bne.n	427a <dir_next+0x10a>
    4252:	6832      	ldr	r2, [r6, #0]
    4254:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
    4256:	3301      	adds	r3, #1
    4258:	62d3      	str	r3, [r2, #44]	; 0x2c
    425a:	3501      	adds	r5, #1
    425c:	b2ed      	uxtb	r5, r5
    425e:	e7ec      	b.n	423a <dir_next+0xca>
    4260:	6ada      	ldr	r2, [r3, #44]	; 0x2c
    4262:	1b52      	subs	r2, r2, r5
    4264:	62da      	str	r2, [r3, #44]	; 0x2c
    4266:	4643      	mov	r3, r8
    4268:	60f3      	str	r3, [r6, #12]
    426a:	4641      	mov	r1, r8
    426c:	6830      	ldr	r0, [r6, #0]
    426e:	4b08      	ldr	r3, [pc, #32]	; (4290 <dir_next+0x120>)
    4270:	4798      	blx	r3
    4272:	6130      	str	r0, [r6, #16]
    4274:	e7a2      	b.n	41bc <dir_next+0x4c>
    4276:	2001      	movs	r0, #1
    4278:	e786      	b.n	4188 <dir_next+0x18>
    427a:	2001      	movs	r0, #1
    427c:	e784      	b.n	4188 <dir_next+0x18>
    427e:	46c0      	nop			; (mov r8, r8)
    4280:	00003d59 	.word	0x00003d59
    4284:	00004035 	.word	0x00004035
    4288:	00003cb9 	.word	0x00003cb9
    428c:	000037ed 	.word	0x000037ed
    4290:	000037ff 	.word	0x000037ff

00004294 <dir_find>:
    4294:	b5f0      	push	{r4, r5, r6, r7, lr}
    4296:	46de      	mov	lr, fp
    4298:	4657      	mov	r7, sl
    429a:	464e      	mov	r6, r9
    429c:	4645      	mov	r5, r8
    429e:	b5e0      	push	{r5, r6, r7, lr}
    42a0:	b083      	sub	sp, #12
    42a2:	0005      	movs	r5, r0
    42a4:	2100      	movs	r1, #0
    42a6:	4b5a      	ldr	r3, [pc, #360]	; (4410 <dir_find+0x17c>)
    42a8:	4798      	blx	r3
    42aa:	1e07      	subs	r7, r0, #0
    42ac:	d000      	beq.n	42b0 <dir_find+0x1c>
    42ae:	e09e      	b.n	43ee <dir_find+0x15a>
    42b0:	23ff      	movs	r3, #255	; 0xff
    42b2:	4699      	mov	r9, r3
    42b4:	469a      	mov	sl, r3
    42b6:	4b57      	ldr	r3, [pc, #348]	; (4414 <dir_find+0x180>)
    42b8:	469b      	mov	fp, r3
    42ba:	e01b      	b.n	42f4 <dir_find+0x60>
    42bc:	2b0f      	cmp	r3, #15
    42be:	d030      	beq.n	4322 <dir_find+0x8e>
    42c0:	4653      	mov	r3, sl
    42c2:	2b00      	cmp	r3, #0
    42c4:	d105      	bne.n	42d2 <dir_find+0x3e>
    42c6:	0020      	movs	r0, r4
    42c8:	4b53      	ldr	r3, [pc, #332]	; (4418 <dir_find+0x184>)
    42ca:	4798      	blx	r3
    42cc:	4581      	cmp	r9, r0
    42ce:	d100      	bne.n	42d2 <dir_find+0x3e>
    42d0:	e08d      	b.n	43ee <dir_find+0x15a>
    42d2:	2301      	movs	r3, #1
    42d4:	425b      	negs	r3, r3
    42d6:	842b      	strh	r3, [r5, #32]
    42d8:	69a8      	ldr	r0, [r5, #24]
    42da:	7ac3      	ldrb	r3, [r0, #11]
    42dc:	07db      	lsls	r3, r3, #31
    42de:	d400      	bmi.n	42e2 <dir_find+0x4e>
    42e0:	e07d      	b.n	43de <dir_find+0x14a>
    42e2:	23ff      	movs	r3, #255	; 0xff
    42e4:	469a      	mov	sl, r3
    42e6:	2100      	movs	r1, #0
    42e8:	0028      	movs	r0, r5
    42ea:	4b4c      	ldr	r3, [pc, #304]	; (441c <dir_find+0x188>)
    42ec:	4798      	blx	r3
    42ee:	1e07      	subs	r7, r0, #0
    42f0:	d000      	beq.n	42f4 <dir_find+0x60>
    42f2:	e07c      	b.n	43ee <dir_find+0x15a>
    42f4:	6929      	ldr	r1, [r5, #16]
    42f6:	6828      	ldr	r0, [r5, #0]
    42f8:	47d8      	blx	fp
    42fa:	1e07      	subs	r7, r0, #0
    42fc:	d177      	bne.n	43ee <dir_find+0x15a>
    42fe:	696c      	ldr	r4, [r5, #20]
    4300:	7826      	ldrb	r6, [r4, #0]
    4302:	2e00      	cmp	r6, #0
    4304:	d100      	bne.n	4308 <dir_find+0x74>
    4306:	e080      	b.n	440a <dir_find+0x176>
    4308:	7ae2      	ldrb	r2, [r4, #11]
    430a:	233f      	movs	r3, #63	; 0x3f
    430c:	4013      	ands	r3, r2
    430e:	2ee5      	cmp	r6, #229	; 0xe5
    4310:	d100      	bne.n	4314 <dir_find+0x80>
    4312:	e077      	b.n	4404 <dir_find+0x170>
    4314:	0712      	lsls	r2, r2, #28
    4316:	d5d1      	bpl.n	42bc <dir_find+0x28>
    4318:	2b0f      	cmp	r3, #15
    431a:	d002      	beq.n	4322 <dir_find+0x8e>
    431c:	23ff      	movs	r3, #255	; 0xff
    431e:	469a      	mov	sl, r3
    4320:	e7e1      	b.n	42e6 <dir_find+0x52>
    4322:	69ef      	ldr	r7, [r5, #28]
    4324:	2f00      	cmp	r7, #0
    4326:	d0de      	beq.n	42e6 <dir_find+0x52>
    4328:	0673      	lsls	r3, r6, #25
    432a:	d518      	bpl.n	435e <dir_find+0xca>
    432c:	7b63      	ldrb	r3, [r4, #13]
    432e:	4699      	mov	r9, r3
    4330:	2340      	movs	r3, #64	; 0x40
    4332:	439e      	bics	r6, r3
    4334:	88eb      	ldrh	r3, [r5, #6]
    4336:	842b      	strh	r3, [r5, #32]
    4338:	7b63      	ldrb	r3, [r4, #13]
    433a:	9300      	str	r3, [sp, #0]
    433c:	22ff      	movs	r2, #255	; 0xff
    433e:	4692      	mov	sl, r2
    4340:	454b      	cmp	r3, r9
    4342:	d1d0      	bne.n	42e6 <dir_find+0x52>
    4344:	7823      	ldrb	r3, [r4, #0]
    4346:	3abf      	subs	r2, #191	; 0xbf
    4348:	4393      	bics	r3, r2
    434a:	3b01      	subs	r3, #1
    434c:	005a      	lsls	r2, r3, #1
    434e:	18d2      	adds	r2, r2, r3
    4350:	0092      	lsls	r2, r2, #2
    4352:	4692      	mov	sl, r2
    4354:	449a      	add	sl, r3
    4356:	2201      	movs	r2, #1
    4358:	2300      	movs	r3, #0
    435a:	4699      	mov	r9, r3
    435c:	e01d      	b.n	439a <dir_find+0x106>
    435e:	45b2      	cmp	sl, r6
    4360:	d0ea      	beq.n	4338 <dir_find+0xa4>
    4362:	23ff      	movs	r3, #255	; 0xff
    4364:	469a      	mov	sl, r3
    4366:	e7be      	b.n	42e6 <dir_find+0x52>
    4368:	4b2d      	ldr	r3, [pc, #180]	; (4420 <dir_find+0x18c>)
    436a:	4798      	blx	r3
    436c:	9001      	str	r0, [sp, #4]
    436e:	4653      	mov	r3, sl
    4370:	2bfe      	cmp	r3, #254	; 0xfe
    4372:	d81f      	bhi.n	43b4 <dir_find+0x120>
    4374:	2301      	movs	r3, #1
    4376:	4453      	add	r3, sl
    4378:	4698      	mov	r8, r3
    437a:	4653      	mov	r3, sl
    437c:	005b      	lsls	r3, r3, #1
    437e:	5bd8      	ldrh	r0, [r3, r7]
    4380:	4b27      	ldr	r3, [pc, #156]	; (4420 <dir_find+0x18c>)
    4382:	4798      	blx	r3
    4384:	0002      	movs	r2, r0
    4386:	9b01      	ldr	r3, [sp, #4]
    4388:	4283      	cmp	r3, r0
    438a:	d113      	bne.n	43b4 <dir_find+0x120>
    438c:	46c2      	mov	sl, r8
    438e:	2301      	movs	r3, #1
    4390:	469c      	mov	ip, r3
    4392:	44e1      	add	r9, ip
    4394:	464b      	mov	r3, r9
    4396:	2b0d      	cmp	r3, #13
    4398:	d011      	beq.n	43be <dir_find+0x12a>
    439a:	4b22      	ldr	r3, [pc, #136]	; (4424 <dir_find+0x190>)
    439c:	4649      	mov	r1, r9
    439e:	5cc9      	ldrb	r1, [r1, r3]
    43a0:	1863      	adds	r3, r4, r1
    43a2:	785b      	ldrb	r3, [r3, #1]
    43a4:	021b      	lsls	r3, r3, #8
    43a6:	5c60      	ldrb	r0, [r4, r1]
    43a8:	4318      	orrs	r0, r3
    43aa:	2a00      	cmp	r2, #0
    43ac:	d1dc      	bne.n	4368 <dir_find+0xd4>
    43ae:	4b1e      	ldr	r3, [pc, #120]	; (4428 <dir_find+0x194>)
    43b0:	4298      	cmp	r0, r3
    43b2:	d0ec      	beq.n	438e <dir_find+0xfa>
    43b4:	9b00      	ldr	r3, [sp, #0]
    43b6:	4699      	mov	r9, r3
    43b8:	23ff      	movs	r3, #255	; 0xff
    43ba:	469a      	mov	sl, r3
    43bc:	e793      	b.n	42e6 <dir_find+0x52>
    43be:	7823      	ldrb	r3, [r4, #0]
    43c0:	065b      	lsls	r3, r3, #25
    43c2:	d506      	bpl.n	43d2 <dir_find+0x13e>
    43c4:	2a00      	cmp	r2, #0
    43c6:	d004      	beq.n	43d2 <dir_find+0x13e>
    43c8:	4653      	mov	r3, sl
    43ca:	005b      	lsls	r3, r3, #1
    43cc:	5bdb      	ldrh	r3, [r3, r7]
    43ce:	2b00      	cmp	r3, #0
    43d0:	d1f0      	bne.n	43b4 <dir_find+0x120>
    43d2:	3e01      	subs	r6, #1
    43d4:	b2f3      	uxtb	r3, r6
    43d6:	469a      	mov	sl, r3
    43d8:	9b00      	ldr	r3, [sp, #0]
    43da:	4699      	mov	r9, r3
    43dc:	e783      	b.n	42e6 <dir_find+0x52>
    43de:	2300      	movs	r3, #0
    43e0:	5ce1      	ldrb	r1, [r4, r3]
    43e2:	5cc2      	ldrb	r2, [r0, r3]
    43e4:	4291      	cmp	r1, r2
    43e6:	d10a      	bne.n	43fe <dir_find+0x16a>
    43e8:	3301      	adds	r3, #1
    43ea:	2b0b      	cmp	r3, #11
    43ec:	d1f8      	bne.n	43e0 <dir_find+0x14c>
    43ee:	0038      	movs	r0, r7
    43f0:	b003      	add	sp, #12
    43f2:	bc3c      	pop	{r2, r3, r4, r5}
    43f4:	4690      	mov	r8, r2
    43f6:	4699      	mov	r9, r3
    43f8:	46a2      	mov	sl, r4
    43fa:	46ab      	mov	fp, r5
    43fc:	bdf0      	pop	{r4, r5, r6, r7, pc}
    43fe:	23ff      	movs	r3, #255	; 0xff
    4400:	469a      	mov	sl, r3
    4402:	e770      	b.n	42e6 <dir_find+0x52>
    4404:	23ff      	movs	r3, #255	; 0xff
    4406:	469a      	mov	sl, r3
    4408:	e76d      	b.n	42e6 <dir_find+0x52>
    440a:	2704      	movs	r7, #4
    440c:	e7ef      	b.n	43ee <dir_find+0x15a>
    440e:	46c0      	nop			; (mov r8, r8)
    4410:	00003e55 	.word	0x00003e55
    4414:	00003cb9 	.word	0x00003cb9
    4418:	00003817 	.word	0x00003817
    441c:	00004171 	.word	0x00004171
    4420:	00004ff5 	.word	0x00004ff5
    4424:	00006f30 	.word	0x00006f30
    4428:	0000ffff 	.word	0x0000ffff

0000442c <dir_register>:
    442c:	b5f0      	push	{r4, r5, r6, r7, lr}
    442e:	46de      	mov	lr, fp
    4430:	4657      	mov	r7, sl
    4432:	464e      	mov	r6, r9
    4434:	4645      	mov	r5, r8
    4436:	b5e0      	push	{r5, r6, r7, lr}
    4438:	b089      	sub	sp, #36	; 0x24
    443a:	0004      	movs	r4, r0
    443c:	6987      	ldr	r7, [r0, #24]
    443e:	69c3      	ldr	r3, [r0, #28]
    4440:	469a      	mov	sl, r3
    4442:	ad05      	add	r5, sp, #20
    4444:	220c      	movs	r2, #12
    4446:	0039      	movs	r1, r7
    4448:	0028      	movs	r0, r5
    444a:	4ba7      	ldr	r3, [pc, #668]	; (46e8 <dir_register+0x2bc>)
    444c:	4798      	blx	r3
    444e:	7aeb      	ldrb	r3, [r5, #11]
    4450:	07db      	lsls	r3, r3, #31
    4452:	d400      	bmi.n	4456 <dir_register+0x2a>
    4454:	e070      	b.n	4538 <dir_register+0x10c>
    4456:	2300      	movs	r3, #0
    4458:	72fb      	strb	r3, [r7, #11]
    445a:	61e3      	str	r3, [r4, #28]
    445c:	220b      	movs	r2, #11
    445e:	a905      	add	r1, sp, #20
    4460:	0038      	movs	r0, r7
    4462:	4ba1      	ldr	r3, [pc, #644]	; (46e8 <dir_register+0x2bc>)
    4464:	4798      	blx	r3
    4466:	2301      	movs	r3, #1
    4468:	ad03      	add	r5, sp, #12
    446a:	001e      	movs	r6, r3
    446c:	46a0      	mov	r8, r4
    446e:	e049      	b.n	4504 <dir_register+0xd8>
    4470:	3801      	subs	r0, #1
    4472:	1829      	adds	r1, r5, r0
    4474:	704a      	strb	r2, [r1, #1]
    4476:	091b      	lsrs	r3, r3, #4
    4478:	b29b      	uxth	r3, r3
    447a:	2b00      	cmp	r3, #0
    447c:	d007      	beq.n	448e <dir_register+0x62>
    447e:	0021      	movs	r1, r4
    4480:	4019      	ands	r1, r3
    4482:	000a      	movs	r2, r1
    4484:	3230      	adds	r2, #48	; 0x30
    4486:	2a39      	cmp	r2, #57	; 0x39
    4488:	d9f2      	bls.n	4470 <dir_register+0x44>
    448a:	3207      	adds	r2, #7
    448c:	e7f0      	b.n	4470 <dir_register+0x44>
    448e:	337e      	adds	r3, #126	; 0x7e
    4490:	542b      	strb	r3, [r5, r0]
    4492:	2800      	cmp	r0, #0
    4494:	d00a      	beq.n	44ac <dir_register+0x80>
    4496:	783b      	ldrb	r3, [r7, #0]
    4498:	2b20      	cmp	r3, #32
    449a:	d009      	beq.n	44b0 <dir_register+0x84>
    449c:	2300      	movs	r3, #0
    449e:	3301      	adds	r3, #1
    44a0:	4298      	cmp	r0, r3
    44a2:	d007      	beq.n	44b4 <dir_register+0x88>
    44a4:	5cfa      	ldrb	r2, [r7, r3]
    44a6:	2a20      	cmp	r2, #32
    44a8:	d1f9      	bne.n	449e <dir_register+0x72>
    44aa:	e009      	b.n	44c0 <dir_register+0x94>
    44ac:	0003      	movs	r3, r0
    44ae:	e007      	b.n	44c0 <dir_register+0x94>
    44b0:	2300      	movs	r3, #0
    44b2:	e005      	b.n	44c0 <dir_register+0x94>
    44b4:	0003      	movs	r3, r0
    44b6:	e003      	b.n	44c0 <dir_register+0x94>
    44b8:	54fa      	strb	r2, [r7, r3]
    44ba:	3301      	adds	r3, #1
    44bc:	2b07      	cmp	r3, #7
    44be:	d805      	bhi.n	44cc <dir_register+0xa0>
    44c0:	2220      	movs	r2, #32
    44c2:	2807      	cmp	r0, #7
    44c4:	d8f8      	bhi.n	44b8 <dir_register+0x8c>
    44c6:	5c2a      	ldrb	r2, [r5, r0]
    44c8:	3001      	adds	r0, #1
    44ca:	e7f5      	b.n	44b8 <dir_register+0x8c>
    44cc:	4640      	mov	r0, r8
    44ce:	4b87      	ldr	r3, [pc, #540]	; (46ec <dir_register+0x2c0>)
    44d0:	4798      	blx	r3
    44d2:	2800      	cmp	r0, #0
    44d4:	d11c      	bne.n	4510 <dir_register+0xe4>
    44d6:	3601      	adds	r6, #1
    44d8:	b2b6      	uxth	r6, r6
    44da:	2e64      	cmp	r6, #100	; 0x64
    44dc:	d015      	beq.n	450a <dir_register+0xde>
    44de:	220b      	movs	r2, #11
    44e0:	a905      	add	r1, sp, #20
    44e2:	0038      	movs	r0, r7
    44e4:	4b80      	ldr	r3, [pc, #512]	; (46e8 <dir_register+0x2bc>)
    44e6:	4798      	blx	r3
    44e8:	0033      	movs	r3, r6
    44ea:	2e05      	cmp	r6, #5
    44ec:	d90a      	bls.n	4504 <dir_register+0xd8>
    44ee:	4651      	mov	r1, sl
    44f0:	085a      	lsrs	r2, r3, #1
    44f2:	03db      	lsls	r3, r3, #15
    44f4:	4313      	orrs	r3, r2
    44f6:	880a      	ldrh	r2, [r1, #0]
    44f8:	189b      	adds	r3, r3, r2
    44fa:	b29b      	uxth	r3, r3
    44fc:	3102      	adds	r1, #2
    44fe:	880a      	ldrh	r2, [r1, #0]
    4500:	2a00      	cmp	r2, #0
    4502:	d1f5      	bne.n	44f0 <dir_register+0xc4>
    4504:	2007      	movs	r0, #7
    4506:	240f      	movs	r4, #15
    4508:	e7b9      	b.n	447e <dir_register+0x52>
    450a:	2307      	movs	r3, #7
    450c:	4698      	mov	r8, r3
    450e:	e006      	b.n	451e <dir_register+0xf2>
    4510:	4644      	mov	r4, r8
    4512:	4680      	mov	r8, r0
    4514:	2e64      	cmp	r6, #100	; 0x64
    4516:	d100      	bne.n	451a <dir_register+0xee>
    4518:	e0a5      	b.n	4666 <dir_register+0x23a>
    451a:	2804      	cmp	r0, #4
    451c:	d007      	beq.n	452e <dir_register+0x102>
    451e:	4640      	mov	r0, r8
    4520:	b009      	add	sp, #36	; 0x24
    4522:	bc3c      	pop	{r2, r3, r4, r5}
    4524:	4690      	mov	r8, r2
    4526:	4699      	mov	r9, r3
    4528:	46a2      	mov	sl, r4
    452a:	46ab      	mov	fp, r5
    452c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    452e:	ab05      	add	r3, sp, #20
    4530:	7adb      	ldrb	r3, [r3, #11]
    4532:	72fb      	strb	r3, [r7, #11]
    4534:	4653      	mov	r3, sl
    4536:	61e3      	str	r3, [r4, #28]
    4538:	ab05      	add	r3, sp, #20
    453a:	7adb      	ldrb	r3, [r3, #11]
    453c:	2201      	movs	r2, #1
    453e:	4693      	mov	fp, r2
    4540:	079b      	lsls	r3, r3, #30
    4542:	d511      	bpl.n	4568 <dir_register+0x13c>
    4544:	4653      	mov	r3, sl
    4546:	881b      	ldrh	r3, [r3, #0]
    4548:	2b00      	cmp	r3, #0
    454a:	d01b      	beq.n	4584 <dir_register+0x158>
    454c:	2000      	movs	r0, #0
    454e:	4652      	mov	r2, sl
    4550:	3001      	adds	r0, #1
    4552:	b280      	uxth	r0, r0
    4554:	0043      	lsls	r3, r0, #1
    4556:	5a9b      	ldrh	r3, [r3, r2]
    4558:	2b00      	cmp	r3, #0
    455a:	d1f9      	bne.n	4550 <dir_register+0x124>
    455c:	3019      	adds	r0, #25
    455e:	210d      	movs	r1, #13
    4560:	4b63      	ldr	r3, [pc, #396]	; (46f0 <dir_register+0x2c4>)
    4562:	4798      	blx	r3
    4564:	b283      	uxth	r3, r0
    4566:	469b      	mov	fp, r3
    4568:	2100      	movs	r1, #0
    456a:	0020      	movs	r0, r4
    456c:	4b61      	ldr	r3, [pc, #388]	; (46f4 <dir_register+0x2c8>)
    456e:	4798      	blx	r3
    4570:	4680      	mov	r8, r0
    4572:	2800      	cmp	r0, #0
    4574:	d1d3      	bne.n	451e <dir_register+0xf2>
    4576:	4682      	mov	sl, r0
    4578:	2500      	movs	r5, #0
    457a:	4f5f      	ldr	r7, [pc, #380]	; (46f8 <dir_register+0x2cc>)
    457c:	2600      	movs	r6, #0
    457e:	4b5f      	ldr	r3, [pc, #380]	; (46fc <dir_register+0x2d0>)
    4580:	4699      	mov	r9, r3
    4582:	e00b      	b.n	459c <dir_register+0x170>
    4584:	2000      	movs	r0, #0
    4586:	e7e9      	b.n	455c <dir_register+0x130>
    4588:	1c6b      	adds	r3, r5, #1
    458a:	b29b      	uxth	r3, r3
    458c:	459b      	cmp	fp, r3
    458e:	d06d      	beq.n	466c <dir_register+0x240>
    4590:	001d      	movs	r5, r3
    4592:	2101      	movs	r1, #1
    4594:	0020      	movs	r0, r4
    4596:	47c8      	blx	r9
    4598:	2800      	cmp	r0, #0
    459a:	d112      	bne.n	45c2 <dir_register+0x196>
    459c:	6921      	ldr	r1, [r4, #16]
    459e:	6820      	ldr	r0, [r4, #0]
    45a0:	47b8      	blx	r7
    45a2:	2800      	cmp	r0, #0
    45a4:	d000      	beq.n	45a8 <dir_register+0x17c>
    45a6:	e098      	b.n	46da <dir_register+0x2ae>
    45a8:	6963      	ldr	r3, [r4, #20]
    45aa:	781b      	ldrb	r3, [r3, #0]
    45ac:	2be5      	cmp	r3, #229	; 0xe5
    45ae:	d001      	beq.n	45b4 <dir_register+0x188>
    45b0:	2b00      	cmp	r3, #0
    45b2:	d104      	bne.n	45be <dir_register+0x192>
    45b4:	2d00      	cmp	r5, #0
    45b6:	d1e7      	bne.n	4588 <dir_register+0x15c>
    45b8:	88e3      	ldrh	r3, [r4, #6]
    45ba:	469a      	mov	sl, r3
    45bc:	e7e4      	b.n	4588 <dir_register+0x15c>
    45be:	0035      	movs	r5, r6
    45c0:	e7e7      	b.n	4592 <dir_register+0x166>
    45c2:	4680      	mov	r8, r0
    45c4:	e7ab      	b.n	451e <dir_register+0xf2>
    45c6:	4651      	mov	r1, sl
    45c8:	0020      	movs	r0, r4
    45ca:	4b4a      	ldr	r3, [pc, #296]	; (46f4 <dir_register+0x2c8>)
    45cc:	4798      	blx	r3
    45ce:	4680      	mov	r8, r0
    45d0:	2800      	cmp	r0, #0
    45d2:	d1a4      	bne.n	451e <dir_register+0xf2>
    45d4:	69a0      	ldr	r0, [r4, #24]
    45d6:	4b4a      	ldr	r3, [pc, #296]	; (4700 <dir_register+0x2d4>)
    45d8:	4798      	blx	r3
    45da:	9001      	str	r0, [sp, #4]
    45dc:	46a8      	mov	r8, r5
    45de:	e01f      	b.n	4620 <dir_register+0x1f4>
    45e0:	0022      	movs	r2, r4
    45e2:	e067      	b.n	46b4 <dir_register+0x288>
    45e4:	465e      	mov	r6, fp
    45e6:	4664      	mov	r4, ip
    45e8:	4946      	ldr	r1, [pc, #280]	; (4704 <dir_register+0x2d8>)
    45ea:	428b      	cmp	r3, r1
    45ec:	d003      	beq.n	45f6 <dir_register+0x1ca>
    45ee:	0052      	lsls	r2, r2, #1
    45f0:	5b93      	ldrh	r3, [r2, r6]
    45f2:	2b00      	cmp	r3, #0
    45f4:	d103      	bne.n	45fe <dir_register+0x1d2>
    45f6:	2340      	movs	r3, #64	; 0x40
    45f8:	464a      	mov	r2, r9
    45fa:	431a      	orrs	r2, r3
    45fc:	4691      	mov	r9, r2
    45fe:	464b      	mov	r3, r9
    4600:	7003      	strb	r3, [r0, #0]
    4602:	2301      	movs	r3, #1
    4604:	6822      	ldr	r2, [r4, #0]
    4606:	7113      	strb	r3, [r2, #4]
    4608:	2100      	movs	r1, #0
    460a:	0020      	movs	r0, r4
    460c:	4b3b      	ldr	r3, [pc, #236]	; (46fc <dir_register+0x2d0>)
    460e:	4798      	blx	r3
    4610:	2800      	cmp	r0, #0
    4612:	d166      	bne.n	46e2 <dir_register+0x2b6>
    4614:	4645      	mov	r5, r8
    4616:	3d01      	subs	r5, #1
    4618:	b2ab      	uxth	r3, r5
    461a:	4698      	mov	r8, r3
    461c:	2b00      	cmp	r3, #0
    461e:	d027      	beq.n	4670 <dir_register+0x244>
    4620:	6921      	ldr	r1, [r4, #16]
    4622:	6820      	ldr	r0, [r4, #0]
    4624:	4b34      	ldr	r3, [pc, #208]	; (46f8 <dir_register+0x2cc>)
    4626:	4798      	blx	r3
    4628:	2800      	cmp	r0, #0
    462a:	d158      	bne.n	46de <dir_register+0x2b2>
    462c:	69e6      	ldr	r6, [r4, #28]
    462e:	6960      	ldr	r0, [r4, #20]
    4630:	4643      	mov	r3, r8
    4632:	466a      	mov	r2, sp
    4634:	70d3      	strb	r3, [r2, #3]
    4636:	78d3      	ldrb	r3, [r2, #3]
    4638:	4699      	mov	r9, r3
    463a:	7913      	ldrb	r3, [r2, #4]
    463c:	7343      	strb	r3, [r0, #13]
    463e:	230f      	movs	r3, #15
    4640:	72c3      	strb	r3, [r0, #11]
    4642:	2300      	movs	r3, #0
    4644:	7303      	strb	r3, [r0, #12]
    4646:	7683      	strb	r3, [r0, #26]
    4648:	76c3      	strb	r3, [r0, #27]
    464a:	464b      	mov	r3, r9
    464c:	3b01      	subs	r3, #1
    464e:	005a      	lsls	r2, r3, #1
    4650:	18d2      	adds	r2, r2, r3
    4652:	0092      	lsls	r2, r2, #2
    4654:	18d2      	adds	r2, r2, r3
    4656:	492c      	ldr	r1, [pc, #176]	; (4708 <dir_register+0x2dc>)
    4658:	000d      	movs	r5, r1
    465a:	350d      	adds	r5, #13
    465c:	2300      	movs	r3, #0
    465e:	4f29      	ldr	r7, [pc, #164]	; (4704 <dir_register+0x2d8>)
    4660:	46b3      	mov	fp, r6
    4662:	46a4      	mov	ip, r4
    4664:	e029      	b.n	46ba <dir_register+0x28e>
    4666:	2307      	movs	r3, #7
    4668:	4698      	mov	r8, r3
    466a:	e758      	b.n	451e <dir_register+0xf2>
    466c:	2b01      	cmp	r3, #1
    466e:	d8aa      	bhi.n	45c6 <dir_register+0x19a>
    4670:	6921      	ldr	r1, [r4, #16]
    4672:	6820      	ldr	r0, [r4, #0]
    4674:	4b20      	ldr	r3, [pc, #128]	; (46f8 <dir_register+0x2cc>)
    4676:	4798      	blx	r3
    4678:	4680      	mov	r8, r0
    467a:	2800      	cmp	r0, #0
    467c:	d000      	beq.n	4680 <dir_register+0x254>
    467e:	e74e      	b.n	451e <dir_register+0xf2>
    4680:	6965      	ldr	r5, [r4, #20]
    4682:	2220      	movs	r2, #32
    4684:	2100      	movs	r1, #0
    4686:	0028      	movs	r0, r5
    4688:	4b20      	ldr	r3, [pc, #128]	; (470c <dir_register+0x2e0>)
    468a:	4798      	blx	r3
    468c:	220b      	movs	r2, #11
    468e:	69a1      	ldr	r1, [r4, #24]
    4690:	0028      	movs	r0, r5
    4692:	4b15      	ldr	r3, [pc, #84]	; (46e8 <dir_register+0x2bc>)
    4694:	4798      	blx	r3
    4696:	69a3      	ldr	r3, [r4, #24]
    4698:	7ada      	ldrb	r2, [r3, #11]
    469a:	2318      	movs	r3, #24
    469c:	4013      	ands	r3, r2
    469e:	732b      	strb	r3, [r5, #12]
    46a0:	6823      	ldr	r3, [r4, #0]
    46a2:	2201      	movs	r2, #1
    46a4:	711a      	strb	r2, [r3, #4]
    46a6:	e73a      	b.n	451e <dir_register+0xf2>
    46a8:	780c      	ldrb	r4, [r1, #0]
    46aa:	26ff      	movs	r6, #255	; 0xff
    46ac:	5506      	strb	r6, [r0, r4]
    46ae:	1904      	adds	r4, r0, r4
    46b0:	26ff      	movs	r6, #255	; 0xff
    46b2:	7066      	strb	r6, [r4, #1]
    46b4:	3101      	adds	r1, #1
    46b6:	42a9      	cmp	r1, r5
    46b8:	d094      	beq.n	45e4 <dir_register+0x1b8>
    46ba:	42bb      	cmp	r3, r7
    46bc:	d0f4      	beq.n	46a8 <dir_register+0x27c>
    46be:	1c54      	adds	r4, r2, #1
    46c0:	0052      	lsls	r2, r2, #1
    46c2:	465b      	mov	r3, fp
    46c4:	5ad3      	ldrh	r3, [r2, r3]
    46c6:	780a      	ldrb	r2, [r1, #0]
    46c8:	5483      	strb	r3, [r0, r2]
    46ca:	1882      	adds	r2, r0, r2
    46cc:	0a1e      	lsrs	r6, r3, #8
    46ce:	7056      	strb	r6, [r2, #1]
    46d0:	2b00      	cmp	r3, #0
    46d2:	d185      	bne.n	45e0 <dir_register+0x1b4>
    46d4:	0022      	movs	r2, r4
    46d6:	003b      	movs	r3, r7
    46d8:	e7ec      	b.n	46b4 <dir_register+0x288>
    46da:	4680      	mov	r8, r0
    46dc:	e71f      	b.n	451e <dir_register+0xf2>
    46de:	4680      	mov	r8, r0
    46e0:	e71d      	b.n	451e <dir_register+0xf2>
    46e2:	4680      	mov	r8, r0
    46e4:	e71b      	b.n	451e <dir_register+0xf2>
    46e6:	46c0      	nop			; (mov r8, r8)
    46e8:	000037d9 	.word	0x000037d9
    46ec:	00004295 	.word	0x00004295
    46f0:	00005861 	.word	0x00005861
    46f4:	00003e55 	.word	0x00003e55
    46f8:	00003cb9 	.word	0x00003cb9
    46fc:	00004171 	.word	0x00004171
    4700:	00003817 	.word	0x00003817
    4704:	0000ffff 	.word	0x0000ffff
    4708:	00006f30 	.word	0x00006f30
    470c:	000037ed 	.word	0x000037ed

00004710 <sync>:
    4710:	b570      	push	{r4, r5, r6, lr}
    4712:	0004      	movs	r4, r0
    4714:	2100      	movs	r1, #0
    4716:	4b2c      	ldr	r3, [pc, #176]	; (47c8 <sync+0xb8>)
    4718:	4798      	blx	r3
    471a:	2800      	cmp	r0, #0
    471c:	d10a      	bne.n	4734 <sync+0x24>
    471e:	7823      	ldrb	r3, [r4, #0]
    4720:	2b03      	cmp	r3, #3
    4722:	d008      	beq.n	4736 <sync+0x26>
    4724:	7860      	ldrb	r0, [r4, #1]
    4726:	2200      	movs	r2, #0
    4728:	2100      	movs	r1, #0
    472a:	4b28      	ldr	r3, [pc, #160]	; (47cc <sync+0xbc>)
    472c:	4798      	blx	r3
    472e:	1e43      	subs	r3, r0, #1
    4730:	4198      	sbcs	r0, r3
    4732:	b2c0      	uxtb	r0, r0
    4734:	bd70      	pop	{r4, r5, r6, pc}
    4736:	7963      	ldrb	r3, [r4, #5]
    4738:	2b00      	cmp	r3, #0
    473a:	d0f3      	beq.n	4724 <sync+0x14>
    473c:	2600      	movs	r6, #0
    473e:	62e6      	str	r6, [r4, #44]	; 0x2c
    4740:	0025      	movs	r5, r4
    4742:	3530      	adds	r5, #48	; 0x30
    4744:	2280      	movs	r2, #128	; 0x80
    4746:	0092      	lsls	r2, r2, #2
    4748:	2100      	movs	r1, #0
    474a:	0028      	movs	r0, r5
    474c:	4b20      	ldr	r3, [pc, #128]	; (47d0 <sync+0xc0>)
    474e:	4798      	blx	r3
    4750:	2255      	movs	r2, #85	; 0x55
    4752:	4b20      	ldr	r3, [pc, #128]	; (47d4 <sync+0xc4>)
    4754:	54e2      	strb	r2, [r4, r3]
    4756:	3255      	adds	r2, #85	; 0x55
    4758:	4b1f      	ldr	r3, [pc, #124]	; (47d8 <sync+0xc8>)
    475a:	54e2      	strb	r2, [r4, r3]
    475c:	3bde      	subs	r3, #222	; 0xde
    475e:	3bff      	subs	r3, #255	; 0xff
    4760:	3a7a      	subs	r2, #122	; 0x7a
    4762:	54a3      	strb	r3, [r4, r2]
    4764:	3201      	adds	r2, #1
    4766:	54a3      	strb	r3, [r4, r2]
    4768:	330f      	adds	r3, #15
    476a:	3201      	adds	r2, #1
    476c:	54a3      	strb	r3, [r4, r2]
    476e:	320f      	adds	r2, #15
    4770:	2133      	movs	r1, #51	; 0x33
    4772:	5462      	strb	r2, [r4, r1]
    4774:	313f      	adds	r1, #63	; 0x3f
    4776:	2085      	movs	r0, #133	; 0x85
    4778:	0080      	lsls	r0, r0, #2
    477a:	5421      	strb	r1, [r4, r0]
    477c:	4817      	ldr	r0, [pc, #92]	; (47dc <sync+0xcc>)
    477e:	5421      	strb	r1, [r4, r0]
    4780:	4917      	ldr	r1, [pc, #92]	; (47e0 <sync+0xd0>)
    4782:	5462      	strb	r2, [r4, r1]
    4784:	4a17      	ldr	r2, [pc, #92]	; (47e4 <sync+0xd4>)
    4786:	54a3      	strb	r3, [r4, r2]
    4788:	6923      	ldr	r3, [r4, #16]
    478a:	3201      	adds	r2, #1
    478c:	54a3      	strb	r3, [r4, r2]
    478e:	0a19      	lsrs	r1, r3, #8
    4790:	4a15      	ldr	r2, [pc, #84]	; (47e8 <sync+0xd8>)
    4792:	54a1      	strb	r1, [r4, r2]
    4794:	0c19      	lsrs	r1, r3, #16
    4796:	4a15      	ldr	r2, [pc, #84]	; (47ec <sync+0xdc>)
    4798:	54a1      	strb	r1, [r4, r2]
    479a:	0e1b      	lsrs	r3, r3, #24
    479c:	4a14      	ldr	r2, [pc, #80]	; (47f0 <sync+0xe0>)
    479e:	54a3      	strb	r3, [r4, r2]
    47a0:	68e3      	ldr	r3, [r4, #12]
    47a2:	3201      	adds	r2, #1
    47a4:	54a3      	strb	r3, [r4, r2]
    47a6:	0a19      	lsrs	r1, r3, #8
    47a8:	4a12      	ldr	r2, [pc, #72]	; (47f4 <sync+0xe4>)
    47aa:	54a1      	strb	r1, [r4, r2]
    47ac:	0c19      	lsrs	r1, r3, #16
    47ae:	4a12      	ldr	r2, [pc, #72]	; (47f8 <sync+0xe8>)
    47b0:	54a1      	strb	r1, [r4, r2]
    47b2:	0e1b      	lsrs	r3, r3, #24
    47b4:	4a11      	ldr	r2, [pc, #68]	; (47fc <sync+0xec>)
    47b6:	54a3      	strb	r3, [r4, r2]
    47b8:	7860      	ldrb	r0, [r4, #1]
    47ba:	2301      	movs	r3, #1
    47bc:	6962      	ldr	r2, [r4, #20]
    47be:	0029      	movs	r1, r5
    47c0:	4d0f      	ldr	r5, [pc, #60]	; (4800 <sync+0xf0>)
    47c2:	47a8      	blx	r5
    47c4:	7166      	strb	r6, [r4, #5]
    47c6:	e7ad      	b.n	4724 <sync+0x14>
    47c8:	00003cb9 	.word	0x00003cb9
    47cc:	0000371d 	.word	0x0000371d
    47d0:	000037ed 	.word	0x000037ed
    47d4:	0000022e 	.word	0x0000022e
    47d8:	0000022f 	.word	0x0000022f
    47dc:	00000215 	.word	0x00000215
    47e0:	00000216 	.word	0x00000216
    47e4:	00000217 	.word	0x00000217
    47e8:	00000219 	.word	0x00000219
    47ec:	0000021a 	.word	0x0000021a
    47f0:	0000021b 	.word	0x0000021b
    47f4:	0000021d 	.word	0x0000021d
    47f8:	0000021e 	.word	0x0000021e
    47fc:	0000021f 	.word	0x0000021f
    4800:	00003699 	.word	0x00003699

00004804 <follow_path>:
    4804:	b5f0      	push	{r4, r5, r6, r7, lr}
    4806:	46de      	mov	lr, fp
    4808:	4657      	mov	r7, sl
    480a:	464e      	mov	r6, r9
    480c:	4645      	mov	r5, r8
    480e:	b5e0      	push	{r5, r6, r7, lr}
    4810:	b083      	sub	sp, #12
    4812:	4682      	mov	sl, r0
    4814:	000d      	movs	r5, r1
    4816:	780b      	ldrb	r3, [r1, #0]
    4818:	2b2f      	cmp	r3, #47	; 0x2f
    481a:	d00f      	beq.n	483c <follow_path+0x38>
    481c:	2b5c      	cmp	r3, #92	; 0x5c
    481e:	d00d      	beq.n	483c <follow_path+0x38>
    4820:	2300      	movs	r3, #0
    4822:	4652      	mov	r2, sl
    4824:	6093      	str	r3, [r2, #8]
    4826:	782b      	ldrb	r3, [r5, #0]
    4828:	4657      	mov	r7, sl
    482a:	2b1f      	cmp	r3, #31
    482c:	d809      	bhi.n	4842 <follow_path+0x3e>
    482e:	2100      	movs	r1, #0
    4830:	4650      	mov	r0, sl
    4832:	4bb2      	ldr	r3, [pc, #712]	; (4afc <follow_path+0x2f8>)
    4834:	4798      	blx	r3
    4836:	2300      	movs	r3, #0
    4838:	617b      	str	r3, [r7, #20]
    483a:	e13a      	b.n	4ab2 <follow_path+0x2ae>
    483c:	3501      	adds	r5, #1
    483e:	e7ef      	b.n	4820 <follow_path+0x1c>
    4840:	3501      	adds	r5, #1
    4842:	7828      	ldrb	r0, [r5, #0]
    4844:	282f      	cmp	r0, #47	; 0x2f
    4846:	d0fb      	beq.n	4840 <follow_path+0x3c>
    4848:	285c      	cmp	r0, #92	; 0x5c
    484a:	d0f9      	beq.n	4840 <follow_path+0x3c>
    484c:	69fb      	ldr	r3, [r7, #28]
    484e:	469a      	mov	sl, r3
    4850:	b280      	uxth	r0, r0
    4852:	281f      	cmp	r0, #31
    4854:	d800      	bhi.n	4858 <follow_path+0x54>
    4856:	e13b      	b.n	4ad0 <follow_path+0x2cc>
    4858:	282f      	cmp	r0, #47	; 0x2f
    485a:	d100      	bne.n	485e <follow_path+0x5a>
    485c:	e13b      	b.n	4ad6 <follow_path+0x2d2>
    485e:	285c      	cmp	r0, #92	; 0x5c
    4860:	d100      	bne.n	4864 <follow_path+0x60>
    4862:	e13b      	b.n	4adc <follow_path+0x2d8>
    4864:	1c6e      	adds	r6, r5, #1
    4866:	2401      	movs	r4, #1
    4868:	2380      	movs	r3, #128	; 0x80
    486a:	005b      	lsls	r3, r3, #1
    486c:	4698      	mov	r8, r3
    486e:	46bb      	mov	fp, r7
    4870:	002b      	movs	r3, r5
    4872:	0025      	movs	r5, r4
    4874:	0034      	movs	r4, r6
    4876:	4656      	mov	r6, sl
    4878:	4699      	mov	r9, r3
    487a:	e011      	b.n	48a0 <follow_path+0x9c>
    487c:	2b00      	cmp	r3, #0
    487e:	d135      	bne.n	48ec <follow_path+0xe8>
    4880:	8030      	strh	r0, [r6, #0]
    4882:	1c6b      	adds	r3, r5, #1
    4884:	7820      	ldrb	r0, [r4, #0]
    4886:	281f      	cmp	r0, #31
    4888:	d91e      	bls.n	48c8 <follow_path+0xc4>
    488a:	282f      	cmp	r0, #47	; 0x2f
    488c:	d100      	bne.n	4890 <follow_path+0x8c>
    488e:	e128      	b.n	4ae2 <follow_path+0x2de>
    4890:	285c      	cmp	r0, #92	; 0x5c
    4892:	d100      	bne.n	4896 <follow_path+0x92>
    4894:	e142      	b.n	4b1c <follow_path+0x318>
    4896:	3602      	adds	r6, #2
    4898:	3401      	adds	r4, #1
    489a:	4543      	cmp	r3, r8
    489c:	d026      	beq.n	48ec <follow_path+0xe8>
    489e:	001d      	movs	r5, r3
    48a0:	2101      	movs	r1, #1
    48a2:	4b97      	ldr	r3, [pc, #604]	; (4b00 <follow_path+0x2fc>)
    48a4:	4798      	blx	r3
    48a6:	1e01      	subs	r1, r0, #0
    48a8:	d020      	beq.n	48ec <follow_path+0xe8>
    48aa:	287f      	cmp	r0, #127	; 0x7f
    48ac:	d8e8      	bhi.n	4880 <follow_path+0x7c>
    48ae:	2822      	cmp	r0, #34	; 0x22
    48b0:	d100      	bne.n	48b4 <follow_path+0xb0>
    48b2:	e0fd      	b.n	4ab0 <follow_path+0x2ac>
    48b4:	232a      	movs	r3, #42	; 0x2a
    48b6:	4a93      	ldr	r2, [pc, #588]	; (4b04 <follow_path+0x300>)
    48b8:	b29f      	uxth	r7, r3
    48ba:	428f      	cmp	r7, r1
    48bc:	d0de      	beq.n	487c <follow_path+0x78>
    48be:	3201      	adds	r2, #1
    48c0:	7813      	ldrb	r3, [r2, #0]
    48c2:	2b00      	cmp	r3, #0
    48c4:	d1f8      	bne.n	48b8 <follow_path+0xb4>
    48c6:	e7db      	b.n	4880 <follow_path+0x7c>
    48c8:	002c      	movs	r4, r5
    48ca:	465f      	mov	r7, fp
    48cc:	464d      	mov	r5, r9
    48ce:	18ed      	adds	r5, r5, r3
    48d0:	2604      	movs	r6, #4
    48d2:	e10b      	b.n	4aec <follow_path+0x2e8>
    48d4:	3c01      	subs	r4, #1
    48d6:	3b02      	subs	r3, #2
    48d8:	2c00      	cmp	r4, #0
    48da:	d100      	bne.n	48de <follow_path+0xda>
    48dc:	e0e8      	b.n	4ab0 <follow_path+0x2ac>
    48de:	881a      	ldrh	r2, [r3, #0]
    48e0:	2a20      	cmp	r2, #32
    48e2:	d0f7      	beq.n	48d4 <follow_path+0xd0>
    48e4:	2a2e      	cmp	r2, #46	; 0x2e
    48e6:	d0f5      	beq.n	48d4 <follow_path+0xd0>
    48e8:	2c00      	cmp	r4, #0
    48ea:	d101      	bne.n	48f0 <follow_path+0xec>
    48ec:	2006      	movs	r0, #6
    48ee:	e0e0      	b.n	4ab2 <follow_path+0x2ae>
    48f0:	0063      	lsls	r3, r4, #1
    48f2:	4698      	mov	r8, r3
    48f4:	2300      	movs	r3, #0
    48f6:	4652      	mov	r2, sl
    48f8:	4641      	mov	r1, r8
    48fa:	5253      	strh	r3, [r2, r1]
    48fc:	220b      	movs	r2, #11
    48fe:	2120      	movs	r1, #32
    4900:	69b8      	ldr	r0, [r7, #24]
    4902:	4b81      	ldr	r3, [pc, #516]	; (4b08 <follow_path+0x304>)
    4904:	4798      	blx	r3
    4906:	4652      	mov	r2, sl
    4908:	2300      	movs	r3, #0
    490a:	e001      	b.n	4910 <follow_path+0x10c>
    490c:	3301      	adds	r3, #1
    490e:	3202      	adds	r2, #2
    4910:	8811      	ldrh	r1, [r2, #0]
    4912:	2920      	cmp	r1, #32
    4914:	d0fa      	beq.n	490c <follow_path+0x108>
    4916:	292e      	cmp	r1, #46	; 0x2e
    4918:	d0f8      	beq.n	490c <follow_path+0x108>
    491a:	2b00      	cmp	r3, #0
    491c:	d001      	beq.n	4922 <follow_path+0x11e>
    491e:	2203      	movs	r2, #3
    4920:	4316      	orrs	r6, r2
    4922:	4652      	mov	r2, sl
    4924:	4442      	add	r2, r8
    4926:	3a02      	subs	r2, #2
    4928:	8812      	ldrh	r2, [r2, #0]
    492a:	2a2e      	cmp	r2, #46	; 0x2e
    492c:	d009      	beq.n	4942 <follow_path+0x13e>
    492e:	4642      	mov	r2, r8
    4930:	3a04      	subs	r2, #4
    4932:	4452      	add	r2, sl
    4934:	3c01      	subs	r4, #1
    4936:	2c00      	cmp	r4, #0
    4938:	d003      	beq.n	4942 <follow_path+0x13e>
    493a:	3a02      	subs	r2, #2
    493c:	8851      	ldrh	r1, [r2, #2]
    493e:	292e      	cmp	r1, #46	; 0x2e
    4940:	d1f8      	bne.n	4934 <follow_path+0x130>
    4942:	2208      	movs	r2, #8
    4944:	9201      	str	r2, [sp, #4]
    4946:	2200      	movs	r2, #0
    4948:	4693      	mov	fp, r2
    494a:	4691      	mov	r9, r2
    494c:	46a0      	mov	r8, r4
    494e:	e006      	b.n	495e <follow_path+0x15a>
    4950:	4544      	cmp	r4, r8
    4952:	d100      	bne.n	4956 <follow_path+0x152>
    4954:	e0e6      	b.n	4b24 <follow_path+0x320>
    4956:	2303      	movs	r3, #3
    4958:	431e      	orrs	r6, r3
    495a:	b2f6      	uxtb	r6, r6
    495c:	0023      	movs	r3, r4
    495e:	1c5c      	adds	r4, r3, #1
    4960:	005b      	lsls	r3, r3, #1
    4962:	4652      	mov	r2, sl
    4964:	5a98      	ldrh	r0, [r3, r2]
    4966:	2800      	cmp	r0, #0
    4968:	d02c      	beq.n	49c4 <follow_path+0x1c0>
    496a:	2820      	cmp	r0, #32
    496c:	d0f3      	beq.n	4956 <follow_path+0x152>
    496e:	282e      	cmp	r0, #46	; 0x2e
    4970:	d0ee      	beq.n	4950 <follow_path+0x14c>
    4972:	9b01      	ldr	r3, [sp, #4]
    4974:	459b      	cmp	fp, r3
    4976:	d219      	bcs.n	49ac <follow_path+0x1a8>
    4978:	4544      	cmp	r4, r8
    497a:	d100      	bne.n	497e <follow_path+0x17a>
    497c:	e0d2      	b.n	4b24 <follow_path+0x320>
    497e:	287f      	cmp	r0, #127	; 0x7f
    4980:	d85e      	bhi.n	4a40 <follow_path+0x23c>
    4982:	282b      	cmp	r0, #43	; 0x2b
    4984:	d06e      	beq.n	4a64 <follow_path+0x260>
    4986:	232c      	movs	r3, #44	; 0x2c
    4988:	4a60      	ldr	r2, [pc, #384]	; (4b0c <follow_path+0x308>)
    498a:	b299      	uxth	r1, r3
    498c:	4281      	cmp	r1, r0
    498e:	d067      	beq.n	4a60 <follow_path+0x25c>
    4990:	3201      	adds	r2, #1
    4992:	7813      	ldrb	r3, [r2, #0]
    4994:	2b00      	cmp	r3, #0
    4996:	d1f8      	bne.n	498a <follow_path+0x186>
    4998:	0003      	movs	r3, r0
    499a:	3b41      	subs	r3, #65	; 0x41
    499c:	b29b      	uxth	r3, r3
    499e:	2b19      	cmp	r3, #25
    49a0:	d86c      	bhi.n	4a7c <follow_path+0x278>
    49a2:	2302      	movs	r3, #2
    49a4:	464a      	mov	r2, r9
    49a6:	431a      	orrs	r2, r3
    49a8:	4691      	mov	r9, r2
    49aa:	e05f      	b.n	4a6c <follow_path+0x268>
    49ac:	9b01      	ldr	r3, [sp, #4]
    49ae:	2b0b      	cmp	r3, #11
    49b0:	d03b      	beq.n	4a2a <follow_path+0x226>
    49b2:	4544      	cmp	r4, r8
    49b4:	d100      	bne.n	49b8 <follow_path+0x1b4>
    49b6:	e0b9      	b.n	4b2c <follow_path+0x328>
    49b8:	2303      	movs	r3, #3
    49ba:	431e      	orrs	r6, r3
    49bc:	b2f6      	uxtb	r6, r6
    49be:	4544      	cmp	r4, r8
    49c0:	d800      	bhi.n	49c4 <follow_path+0x1c0>
    49c2:	e0b3      	b.n	4b2c <follow_path+0x328>
    49c4:	69bb      	ldr	r3, [r7, #24]
    49c6:	781a      	ldrb	r2, [r3, #0]
    49c8:	2ae5      	cmp	r2, #229	; 0xe5
    49ca:	d036      	beq.n	4a3a <follow_path+0x236>
    49cc:	9b01      	ldr	r3, [sp, #4]
    49ce:	2b08      	cmp	r3, #8
    49d0:	d060      	beq.n	4a94 <follow_path+0x290>
    49d2:	230c      	movs	r3, #12
    49d4:	464a      	mov	r2, r9
    49d6:	4013      	ands	r3, r2
    49d8:	2b0c      	cmp	r3, #12
    49da:	d060      	beq.n	4a9e <follow_path+0x29a>
    49dc:	43d2      	mvns	r2, r2
    49de:	0792      	lsls	r2, r2, #30
    49e0:	d05d      	beq.n	4a9e <follow_path+0x29a>
    49e2:	07b2      	lsls	r2, r6, #30
    49e4:	d406      	bmi.n	49f4 <follow_path+0x1f0>
    49e6:	2203      	movs	r2, #3
    49e8:	4649      	mov	r1, r9
    49ea:	400a      	ands	r2, r1
    49ec:	2a01      	cmp	r2, #1
    49ee:	d059      	beq.n	4aa4 <follow_path+0x2a0>
    49f0:	2b04      	cmp	r3, #4
    49f2:	d05a      	beq.n	4aaa <follow_path+0x2a6>
    49f4:	69bb      	ldr	r3, [r7, #24]
    49f6:	72de      	strb	r6, [r3, #11]
    49f8:	0038      	movs	r0, r7
    49fa:	4b45      	ldr	r3, [pc, #276]	; (4b10 <follow_path+0x30c>)
    49fc:	4798      	blx	r3
    49fe:	69bb      	ldr	r3, [r7, #24]
    4a00:	7adb      	ldrb	r3, [r3, #11]
    4a02:	2800      	cmp	r0, #0
    4a04:	d15c      	bne.n	4ac0 <follow_path+0x2bc>
    4a06:	075b      	lsls	r3, r3, #29
    4a08:	d453      	bmi.n	4ab2 <follow_path+0x2ae>
    4a0a:	697a      	ldr	r2, [r7, #20]
    4a0c:	7ad3      	ldrb	r3, [r2, #11]
    4a0e:	06db      	lsls	r3, r3, #27
    4a10:	d55c      	bpl.n	4acc <follow_path+0x2c8>
    4a12:	7d51      	ldrb	r1, [r2, #21]
    4a14:	0209      	lsls	r1, r1, #8
    4a16:	7d13      	ldrb	r3, [r2, #20]
    4a18:	430b      	orrs	r3, r1
    4a1a:	041b      	lsls	r3, r3, #16
    4a1c:	7ed1      	ldrb	r1, [r2, #27]
    4a1e:	0209      	lsls	r1, r1, #8
    4a20:	7e92      	ldrb	r2, [r2, #26]
    4a22:	430a      	orrs	r2, r1
    4a24:	4313      	orrs	r3, r2
    4a26:	60bb      	str	r3, [r7, #8]
    4a28:	e70b      	b.n	4842 <follow_path+0x3e>
    4a2a:	2303      	movs	r3, #3
    4a2c:	431e      	orrs	r6, r3
    4a2e:	69bb      	ldr	r3, [r7, #24]
    4a30:	781a      	ldrb	r2, [r3, #0]
    4a32:	2ae5      	cmp	r2, #229	; 0xe5
    4a34:	d1cd      	bne.n	49d2 <follow_path+0x1ce>
    4a36:	220b      	movs	r2, #11
    4a38:	9201      	str	r2, [sp, #4]
    4a3a:	2205      	movs	r2, #5
    4a3c:	701a      	strb	r2, [r3, #0]
    4a3e:	e7c5      	b.n	49cc <follow_path+0x1c8>
    4a40:	2100      	movs	r1, #0
    4a42:	4b2f      	ldr	r3, [pc, #188]	; (4b00 <follow_path+0x2fc>)
    4a44:	4798      	blx	r3
    4a46:	2800      	cmp	r0, #0
    4a48:	d100      	bne.n	4a4c <follow_path+0x248>
    4a4a:	e079      	b.n	4b40 <follow_path+0x33c>
    4a4c:	4b31      	ldr	r3, [pc, #196]	; (4b14 <follow_path+0x310>)
    4a4e:	469c      	mov	ip, r3
    4a50:	4460      	add	r0, ip
    4a52:	3880      	subs	r0, #128	; 0x80
    4a54:	7800      	ldrb	r0, [r0, #0]
    4a56:	2302      	movs	r3, #2
    4a58:	431e      	orrs	r6, r3
    4a5a:	2800      	cmp	r0, #0
    4a5c:	d002      	beq.n	4a64 <follow_path+0x260>
    4a5e:	e790      	b.n	4982 <follow_path+0x17e>
    4a60:	2b00      	cmp	r3, #0
    4a62:	d099      	beq.n	4998 <follow_path+0x194>
    4a64:	2303      	movs	r3, #3
    4a66:	431e      	orrs	r6, r3
    4a68:	b2f6      	uxtb	r6, r6
    4a6a:	205f      	movs	r0, #95	; 0x5f
    4a6c:	69bb      	ldr	r3, [r7, #24]
    4a6e:	465a      	mov	r2, fp
    4a70:	5498      	strb	r0, [r3, r2]
    4a72:	0023      	movs	r3, r4
    4a74:	2201      	movs	r2, #1
    4a76:	4694      	mov	ip, r2
    4a78:	44e3      	add	fp, ip
    4a7a:	e770      	b.n	495e <follow_path+0x15a>
    4a7c:	0003      	movs	r3, r0
    4a7e:	3b61      	subs	r3, #97	; 0x61
    4a80:	b29b      	uxth	r3, r3
    4a82:	2b19      	cmp	r3, #25
    4a84:	d8f2      	bhi.n	4a6c <follow_path+0x268>
    4a86:	2301      	movs	r3, #1
    4a88:	464a      	mov	r2, r9
    4a8a:	431a      	orrs	r2, r3
    4a8c:	4691      	mov	r9, r2
    4a8e:	3820      	subs	r0, #32
    4a90:	b280      	uxth	r0, r0
    4a92:	e7eb      	b.n	4a6c <follow_path+0x268>
    4a94:	464b      	mov	r3, r9
    4a96:	009b      	lsls	r3, r3, #2
    4a98:	b2db      	uxtb	r3, r3
    4a9a:	4699      	mov	r9, r3
    4a9c:	e799      	b.n	49d2 <follow_path+0x1ce>
    4a9e:	2202      	movs	r2, #2
    4aa0:	4316      	orrs	r6, r2
    4aa2:	e79e      	b.n	49e2 <follow_path+0x1de>
    4aa4:	320f      	adds	r2, #15
    4aa6:	4316      	orrs	r6, r2
    4aa8:	e7a2      	b.n	49f0 <follow_path+0x1ec>
    4aaa:	3304      	adds	r3, #4
    4aac:	431e      	orrs	r6, r3
    4aae:	e7a1      	b.n	49f4 <follow_path+0x1f0>
    4ab0:	2006      	movs	r0, #6
    4ab2:	b003      	add	sp, #12
    4ab4:	bc3c      	pop	{r2, r3, r4, r5}
    4ab6:	4690      	mov	r8, r2
    4ab8:	4699      	mov	r9, r3
    4aba:	46a2      	mov	sl, r4
    4abc:	46ab      	mov	fp, r5
    4abe:	bdf0      	pop	{r4, r5, r6, r7, pc}
    4ac0:	2804      	cmp	r0, #4
    4ac2:	d1f6      	bne.n	4ab2 <follow_path+0x2ae>
    4ac4:	075b      	lsls	r3, r3, #29
    4ac6:	d4f4      	bmi.n	4ab2 <follow_path+0x2ae>
    4ac8:	3001      	adds	r0, #1
    4aca:	e7f2      	b.n	4ab2 <follow_path+0x2ae>
    4acc:	2005      	movs	r0, #5
    4ace:	e7f0      	b.n	4ab2 <follow_path+0x2ae>
    4ad0:	2301      	movs	r3, #1
    4ad2:	2400      	movs	r4, #0
    4ad4:	e6fb      	b.n	48ce <follow_path+0xca>
    4ad6:	2301      	movs	r3, #1
    4ad8:	2400      	movs	r4, #0
    4ada:	e005      	b.n	4ae8 <follow_path+0x2e4>
    4adc:	2301      	movs	r3, #1
    4ade:	2400      	movs	r4, #0
    4ae0:	e002      	b.n	4ae8 <follow_path+0x2e4>
    4ae2:	002c      	movs	r4, r5
    4ae4:	465f      	mov	r7, fp
    4ae6:	464d      	mov	r5, r9
    4ae8:	18ed      	adds	r5, r5, r3
    4aea:	2600      	movs	r6, #0
    4aec:	2c00      	cmp	r4, #0
    4aee:	d0df      	beq.n	4ab0 <follow_path+0x2ac>
    4af0:	4b09      	ldr	r3, [pc, #36]	; (4b18 <follow_path+0x314>)
    4af2:	18e3      	adds	r3, r4, r3
    4af4:	005b      	lsls	r3, r3, #1
    4af6:	4453      	add	r3, sl
    4af8:	e6f1      	b.n	48de <follow_path+0xda>
    4afa:	46c0      	nop			; (mov r8, r8)
    4afc:	00003e55 	.word	0x00003e55
    4b00:	00004fad 	.word	0x00004fad
    4b04:	00006fc1 	.word	0x00006fc1
    4b08:	000037ed 	.word	0x000037ed
    4b0c:	00006fcd 	.word	0x00006fcd
    4b10:	00004295 	.word	0x00004295
    4b14:	00006f40 	.word	0x00006f40
    4b18:	7fffffff 	.word	0x7fffffff
    4b1c:	002c      	movs	r4, r5
    4b1e:	465f      	mov	r7, fp
    4b20:	464d      	mov	r5, r9
    4b22:	e7e1      	b.n	4ae8 <follow_path+0x2e4>
    4b24:	9b01      	ldr	r3, [sp, #4]
    4b26:	2b0b      	cmp	r3, #11
    4b28:	d100      	bne.n	4b2c <follow_path+0x328>
    4b2a:	e77e      	b.n	4a2a <follow_path+0x226>
    4b2c:	464b      	mov	r3, r9
    4b2e:	009b      	lsls	r3, r3, #2
    4b30:	b2db      	uxtb	r3, r3
    4b32:	4699      	mov	r9, r3
    4b34:	4643      	mov	r3, r8
    4b36:	220b      	movs	r2, #11
    4b38:	9201      	str	r2, [sp, #4]
    4b3a:	3a03      	subs	r2, #3
    4b3c:	4693      	mov	fp, r2
    4b3e:	e70e      	b.n	495e <follow_path+0x15a>
    4b40:	2302      	movs	r3, #2
    4b42:	431e      	orrs	r6, r3
    4b44:	e78e      	b.n	4a64 <follow_path+0x260>
    4b46:	46c0      	nop			; (mov r8, r8)

00004b48 <f_mount>:
    4b48:	230b      	movs	r3, #11
    4b4a:	2807      	cmp	r0, #7
    4b4c:	d901      	bls.n	4b52 <f_mount+0xa>
    4b4e:	0018      	movs	r0, r3
    4b50:	4770      	bx	lr
    4b52:	0083      	lsls	r3, r0, #2
    4b54:	4a07      	ldr	r2, [pc, #28]	; (4b74 <f_mount+0x2c>)
    4b56:	589b      	ldr	r3, [r3, r2]
    4b58:	2b00      	cmp	r3, #0
    4b5a:	d001      	beq.n	4b60 <f_mount+0x18>
    4b5c:	2200      	movs	r2, #0
    4b5e:	701a      	strb	r2, [r3, #0]
    4b60:	2900      	cmp	r1, #0
    4b62:	d001      	beq.n	4b68 <f_mount+0x20>
    4b64:	2300      	movs	r3, #0
    4b66:	700b      	strb	r3, [r1, #0]
    4b68:	0080      	lsls	r0, r0, #2
    4b6a:	4b02      	ldr	r3, [pc, #8]	; (4b74 <f_mount+0x2c>)
    4b6c:	50c1      	str	r1, [r0, r3]
    4b6e:	2300      	movs	r3, #0
    4b70:	e7ed      	b.n	4b4e <f_mount+0x6>
    4b72:	46c0      	nop			; (mov r8, r8)
    4b74:	200002e8 	.word	0x200002e8

00004b78 <f_open>:
    4b78:	b5f0      	push	{r4, r5, r6, r7, lr}
    4b7a:	46c6      	mov	lr, r8
    4b7c:	b500      	push	{lr}
    4b7e:	4c59      	ldr	r4, [pc, #356]	; (4ce4 <f_open+0x16c>)
    4b80:	44a5      	add	sp, r4
    4b82:	0005      	movs	r5, r0
    4b84:	9101      	str	r1, [sp, #4]
    4b86:	0017      	movs	r7, r2
    4b88:	2300      	movs	r3, #0
    4b8a:	6003      	str	r3, [r0, #0]
    4b8c:	261f      	movs	r6, #31
    4b8e:	4016      	ands	r6, r2
    4b90:	221e      	movs	r2, #30
    4b92:	403a      	ands	r2, r7
    4b94:	a985      	add	r1, sp, #532	; 0x214
    4b96:	a801      	add	r0, sp, #4
    4b98:	4b53      	ldr	r3, [pc, #332]	; (4ce8 <f_open+0x170>)
    4b9a:	4798      	blx	r3
    4b9c:	ab82      	add	r3, sp, #520	; 0x208
    4b9e:	938b      	str	r3, [sp, #556]	; 0x22c
    4ba0:	ab02      	add	r3, sp, #8
    4ba2:	938c      	str	r3, [sp, #560]	; 0x230
    4ba4:	2800      	cmp	r0, #0
    4ba6:	d006      	beq.n	4bb6 <f_open+0x3e>
    4ba8:	9c8a      	ldr	r4, [sp, #552]	; 0x228
    4baa:	231c      	movs	r3, #28
    4bac:	423b      	tst	r3, r7
    4bae:	d145      	bne.n	4c3c <f_open+0xc4>
    4bb0:	2800      	cmp	r0, #0
    4bb2:	d13d      	bne.n	4c30 <f_open+0xb8>
    4bb4:	e00c      	b.n	4bd0 <f_open+0x58>
    4bb6:	9901      	ldr	r1, [sp, #4]
    4bb8:	a885      	add	r0, sp, #532	; 0x214
    4bba:	4b4c      	ldr	r3, [pc, #304]	; (4cec <f_open+0x174>)
    4bbc:	4798      	blx	r3
    4bbe:	9c8a      	ldr	r4, [sp, #552]	; 0x228
    4bc0:	2800      	cmp	r0, #0
    4bc2:	d1f2      	bne.n	4baa <f_open+0x32>
    4bc4:	2c00      	cmp	r4, #0
    4bc6:	d100      	bne.n	4bca <f_open+0x52>
    4bc8:	e086      	b.n	4cd8 <f_open+0x160>
    4bca:	231c      	movs	r3, #28
    4bcc:	423b      	tst	r3, r7
    4bce:	d146      	bne.n	4c5e <f_open+0xe6>
    4bd0:	7ae3      	ldrb	r3, [r4, #11]
    4bd2:	2004      	movs	r0, #4
    4bd4:	06da      	lsls	r2, r3, #27
    4bd6:	d42b      	bmi.n	4c30 <f_open+0xb8>
    4bd8:	07ba      	lsls	r2, r7, #30
    4bda:	d502      	bpl.n	4be2 <f_open+0x6a>
    4bdc:	3003      	adds	r0, #3
    4bde:	07db      	lsls	r3, r3, #31
    4be0:	d426      	bmi.n	4c30 <f_open+0xb8>
    4be2:	073b      	lsls	r3, r7, #28
    4be4:	d501      	bpl.n	4bea <f_open+0x72>
    4be6:	2320      	movs	r3, #32
    4be8:	431e      	orrs	r6, r3
    4bea:	9b85      	ldr	r3, [sp, #532]	; 0x214
    4bec:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    4bee:	61eb      	str	r3, [r5, #28]
    4bf0:	622c      	str	r4, [r5, #32]
    4bf2:	71ae      	strb	r6, [r5, #6]
    4bf4:	7d62      	ldrb	r2, [r4, #21]
    4bf6:	0212      	lsls	r2, r2, #8
    4bf8:	7d23      	ldrb	r3, [r4, #20]
    4bfa:	4313      	orrs	r3, r2
    4bfc:	041b      	lsls	r3, r3, #16
    4bfe:	7ee1      	ldrb	r1, [r4, #27]
    4c00:	0209      	lsls	r1, r1, #8
    4c02:	7ea2      	ldrb	r2, [r4, #26]
    4c04:	430a      	orrs	r2, r1
    4c06:	4313      	orrs	r3, r2
    4c08:	612b      	str	r3, [r5, #16]
    4c0a:	7fe3      	ldrb	r3, [r4, #31]
    4c0c:	061b      	lsls	r3, r3, #24
    4c0e:	7fa2      	ldrb	r2, [r4, #30]
    4c10:	0412      	lsls	r2, r2, #16
    4c12:	4313      	orrs	r3, r2
    4c14:	7f22      	ldrb	r2, [r4, #28]
    4c16:	4313      	orrs	r3, r2
    4c18:	7f62      	ldrb	r2, [r4, #29]
    4c1a:	0212      	lsls	r2, r2, #8
    4c1c:	4313      	orrs	r3, r2
    4c1e:	60eb      	str	r3, [r5, #12]
    4c20:	2300      	movs	r3, #0
    4c22:	60ab      	str	r3, [r5, #8]
    4c24:	61ab      	str	r3, [r5, #24]
    4c26:	9b85      	ldr	r3, [sp, #532]	; 0x214
    4c28:	602b      	str	r3, [r5, #0]
    4c2a:	88db      	ldrh	r3, [r3, #6]
    4c2c:	80ab      	strh	r3, [r5, #4]
    4c2e:	2000      	movs	r0, #0
    4c30:	238e      	movs	r3, #142	; 0x8e
    4c32:	009b      	lsls	r3, r3, #2
    4c34:	449d      	add	sp, r3
    4c36:	bc04      	pop	{r2}
    4c38:	4690      	mov	r8, r2
    4c3a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    4c3c:	2804      	cmp	r0, #4
    4c3e:	d005      	beq.n	4c4c <f_open+0xd4>
    4c40:	2308      	movs	r3, #8
    4c42:	431e      	orrs	r6, r3
    4c44:	9c8a      	ldr	r4, [sp, #552]	; 0x228
    4c46:	2800      	cmp	r0, #0
    4c48:	d0d3      	beq.n	4bf2 <f_open+0x7a>
    4c4a:	e7f1      	b.n	4c30 <f_open+0xb8>
    4c4c:	a885      	add	r0, sp, #532	; 0x214
    4c4e:	4b28      	ldr	r3, [pc, #160]	; (4cf0 <f_open+0x178>)
    4c50:	4798      	blx	r3
    4c52:	2308      	movs	r3, #8
    4c54:	431e      	orrs	r6, r3
    4c56:	9c8a      	ldr	r4, [sp, #552]	; 0x228
    4c58:	2800      	cmp	r0, #0
    4c5a:	d008      	beq.n	4c6e <f_open+0xf6>
    4c5c:	e7e8      	b.n	4c30 <f_open+0xb8>
    4c5e:	7ae3      	ldrb	r3, [r4, #11]
    4c60:	2211      	movs	r2, #17
    4c62:	2007      	movs	r0, #7
    4c64:	421a      	tst	r2, r3
    4c66:	d1e3      	bne.n	4c30 <f_open+0xb8>
    4c68:	3001      	adds	r0, #1
    4c6a:	077b      	lsls	r3, r7, #29
    4c6c:	d4e0      	bmi.n	4c30 <f_open+0xb8>
    4c6e:	0733      	lsls	r3, r6, #28
    4c70:	d5bb      	bpl.n	4bea <f_open+0x72>
    4c72:	4b20      	ldr	r3, [pc, #128]	; (4cf4 <f_open+0x17c>)
    4c74:	4798      	blx	r3
    4c76:	73a0      	strb	r0, [r4, #14]
    4c78:	0a03      	lsrs	r3, r0, #8
    4c7a:	73e3      	strb	r3, [r4, #15]
    4c7c:	0c03      	lsrs	r3, r0, #16
    4c7e:	7423      	strb	r3, [r4, #16]
    4c80:	0e00      	lsrs	r0, r0, #24
    4c82:	7460      	strb	r0, [r4, #17]
    4c84:	2300      	movs	r3, #0
    4c86:	72e3      	strb	r3, [r4, #11]
    4c88:	7723      	strb	r3, [r4, #28]
    4c8a:	7763      	strb	r3, [r4, #29]
    4c8c:	77a3      	strb	r3, [r4, #30]
    4c8e:	77e3      	strb	r3, [r4, #31]
    4c90:	7d62      	ldrb	r2, [r4, #21]
    4c92:	0212      	lsls	r2, r2, #8
    4c94:	7d27      	ldrb	r7, [r4, #20]
    4c96:	4317      	orrs	r7, r2
    4c98:	043f      	lsls	r7, r7, #16
    4c9a:	7ee1      	ldrb	r1, [r4, #27]
    4c9c:	0209      	lsls	r1, r1, #8
    4c9e:	7ea2      	ldrb	r2, [r4, #26]
    4ca0:	430a      	orrs	r2, r1
    4ca2:	4317      	orrs	r7, r2
    4ca4:	76a3      	strb	r3, [r4, #26]
    4ca6:	76e3      	strb	r3, [r4, #27]
    4ca8:	7523      	strb	r3, [r4, #20]
    4caa:	7563      	strb	r3, [r4, #21]
    4cac:	9885      	ldr	r0, [sp, #532]	; 0x214
    4cae:	3301      	adds	r3, #1
    4cb0:	7103      	strb	r3, [r0, #4]
    4cb2:	2f00      	cmp	r7, #0
    4cb4:	d097      	beq.n	4be6 <f_open+0x6e>
    4cb6:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
    4cb8:	4698      	mov	r8, r3
    4cba:	0039      	movs	r1, r7
    4cbc:	4b0e      	ldr	r3, [pc, #56]	; (4cf8 <f_open+0x180>)
    4cbe:	4798      	blx	r3
    4cc0:	2800      	cmp	r0, #0
    4cc2:	d1b5      	bne.n	4c30 <f_open+0xb8>
    4cc4:	9885      	ldr	r0, [sp, #532]	; 0x214
    4cc6:	3f01      	subs	r7, #1
    4cc8:	60c7      	str	r7, [r0, #12]
    4cca:	4641      	mov	r1, r8
    4ccc:	4b0b      	ldr	r3, [pc, #44]	; (4cfc <f_open+0x184>)
    4cce:	4798      	blx	r3
    4cd0:	2800      	cmp	r0, #0
    4cd2:	d100      	bne.n	4cd6 <f_open+0x15e>
    4cd4:	e787      	b.n	4be6 <f_open+0x6e>
    4cd6:	e7ab      	b.n	4c30 <f_open+0xb8>
    4cd8:	231c      	movs	r3, #28
    4cda:	2006      	movs	r0, #6
    4cdc:	423b      	tst	r3, r7
    4cde:	d0b2      	beq.n	4c46 <f_open+0xce>
    4ce0:	2006      	movs	r0, #6
    4ce2:	e7ad      	b.n	4c40 <f_open+0xc8>
    4ce4:	fffffdc8 	.word	0xfffffdc8
    4ce8:	00003909 	.word	0x00003909
    4cec:	00004805 	.word	0x00004805
    4cf0:	0000442d 	.word	0x0000442d
    4cf4:	00003789 	.word	0x00003789
    4cf8:	000040f9 	.word	0x000040f9
    4cfc:	00003cb9 	.word	0x00003cb9

00004d00 <f_read>:
    4d00:	b5f0      	push	{r4, r5, r6, r7, lr}
    4d02:	46de      	mov	lr, fp
    4d04:	4657      	mov	r7, sl
    4d06:	464e      	mov	r6, r9
    4d08:	4645      	mov	r5, r8
    4d0a:	b5e0      	push	{r5, r6, r7, lr}
    4d0c:	b083      	sub	sp, #12
    4d0e:	0004      	movs	r4, r0
    4d10:	000f      	movs	r7, r1
    4d12:	0015      	movs	r5, r2
    4d14:	4699      	mov	r9, r3
    4d16:	2300      	movs	r3, #0
    4d18:	464a      	mov	r2, r9
    4d1a:	6013      	str	r3, [r2, #0]
    4d1c:	8881      	ldrh	r1, [r0, #4]
    4d1e:	6800      	ldr	r0, [r0, #0]
    4d20:	4b5e      	ldr	r3, [pc, #376]	; (4e9c <f_read+0x19c>)
    4d22:	4798      	blx	r3
    4d24:	9000      	str	r0, [sp, #0]
    4d26:	2800      	cmp	r0, #0
    4d28:	d000      	beq.n	4d2c <f_read+0x2c>
    4d2a:	e0af      	b.n	4e8c <f_read+0x18c>
    4d2c:	79a3      	ldrb	r3, [r4, #6]
    4d2e:	b25a      	sxtb	r2, r3
    4d30:	2a00      	cmp	r2, #0
    4d32:	da00      	bge.n	4d36 <f_read+0x36>
    4d34:	e0a8      	b.n	4e88 <f_read+0x188>
    4d36:	07db      	lsls	r3, r3, #31
    4d38:	d402      	bmi.n	4d40 <f_read+0x40>
    4d3a:	2307      	movs	r3, #7
    4d3c:	9300      	str	r3, [sp, #0]
    4d3e:	e0a5      	b.n	4e8c <f_read+0x18c>
    4d40:	68e3      	ldr	r3, [r4, #12]
    4d42:	68a2      	ldr	r2, [r4, #8]
    4d44:	1a9e      	subs	r6, r3, r2
    4d46:	42ae      	cmp	r6, r5
    4d48:	d900      	bls.n	4d4c <f_read+0x4c>
    4d4a:	002e      	movs	r6, r5
    4d4c:	2e00      	cmp	r6, #0
    4d4e:	d153      	bne.n	4df8 <f_read+0xf8>
    4d50:	e09c      	b.n	4e8c <f_read+0x18c>
    4d52:	6961      	ldr	r1, [r4, #20]
    4d54:	4b52      	ldr	r3, [pc, #328]	; (4ea0 <f_read+0x1a0>)
    4d56:	4798      	blx	r3
    4d58:	e05c      	b.n	4e14 <f_read+0x114>
    4d5a:	79a2      	ldrb	r2, [r4, #6]
    4d5c:	2380      	movs	r3, #128	; 0x80
    4d5e:	425b      	negs	r3, r3
    4d60:	4313      	orrs	r3, r2
    4d62:	71a3      	strb	r3, [r4, #6]
    4d64:	2302      	movs	r3, #2
    4d66:	9300      	str	r3, [sp, #0]
    4d68:	e090      	b.n	4e8c <f_read+0x18c>
    4d6a:	79a2      	ldrb	r2, [r4, #6]
    4d6c:	2380      	movs	r3, #128	; 0x80
    4d6e:	425b      	negs	r3, r3
    4d70:	4313      	orrs	r3, r2
    4d72:	71a3      	strb	r3, [r4, #6]
    4d74:	2301      	movs	r3, #1
    4d76:	9300      	str	r3, [sp, #0]
    4d78:	e088      	b.n	4e8c <f_read+0x18c>
    4d7a:	79a2      	ldrb	r2, [r4, #6]
    4d7c:	2380      	movs	r3, #128	; 0x80
    4d7e:	425b      	negs	r3, r3
    4d80:	4313      	orrs	r3, r2
    4d82:	71a3      	strb	r3, [r4, #6]
    4d84:	2302      	movs	r3, #2
    4d86:	9300      	str	r3, [sp, #0]
    4d88:	e080      	b.n	4e8c <f_read+0x18c>
    4d8a:	79a2      	ldrb	r2, [r4, #6]
    4d8c:	2380      	movs	r3, #128	; 0x80
    4d8e:	425b      	negs	r3, r3
    4d90:	4313      	orrs	r3, r2
    4d92:	71a3      	strb	r3, [r4, #6]
    4d94:	2301      	movs	r3, #1
    4d96:	9300      	str	r3, [sp, #0]
    4d98:	e078      	b.n	4e8c <f_read+0x18c>
    4d9a:	3130      	adds	r1, #48	; 0x30
    4d9c:	0240      	lsls	r0, r0, #9
    4d9e:	1838      	adds	r0, r7, r0
    4da0:	2280      	movs	r2, #128	; 0x80
    4da2:	0092      	lsls	r2, r2, #2
    4da4:	4b3f      	ldr	r3, [pc, #252]	; (4ea4 <f_read+0x1a4>)
    4da6:	4798      	blx	r3
    4da8:	e063      	b.n	4e72 <f_read+0x172>
    4daa:	4643      	mov	r3, r8
    4dac:	61a3      	str	r3, [r4, #24]
    4dae:	68a3      	ldr	r3, [r4, #8]
    4db0:	05dd      	lsls	r5, r3, #23
    4db2:	0ded      	lsrs	r5, r5, #23
    4db4:	2380      	movs	r3, #128	; 0x80
    4db6:	009b      	lsls	r3, r3, #2
    4db8:	1b5d      	subs	r5, r3, r5
    4dba:	42b5      	cmp	r5, r6
    4dbc:	d900      	bls.n	4dc0 <f_read+0xc0>
    4dbe:	0035      	movs	r5, r6
    4dc0:	69a1      	ldr	r1, [r4, #24]
    4dc2:	6820      	ldr	r0, [r4, #0]
    4dc4:	4b38      	ldr	r3, [pc, #224]	; (4ea8 <f_read+0x1a8>)
    4dc6:	4798      	blx	r3
    4dc8:	2800      	cmp	r0, #0
    4dca:	d155      	bne.n	4e78 <f_read+0x178>
    4dcc:	68a3      	ldr	r3, [r4, #8]
    4dce:	05d9      	lsls	r1, r3, #23
    4dd0:	0dc9      	lsrs	r1, r1, #23
    4dd2:	3130      	adds	r1, #48	; 0x30
    4dd4:	6823      	ldr	r3, [r4, #0]
    4dd6:	469c      	mov	ip, r3
    4dd8:	4461      	add	r1, ip
    4dda:	002a      	movs	r2, r5
    4ddc:	0038      	movs	r0, r7
    4dde:	4b31      	ldr	r3, [pc, #196]	; (4ea4 <f_read+0x1a4>)
    4de0:	4798      	blx	r3
    4de2:	197f      	adds	r7, r7, r5
    4de4:	68a3      	ldr	r3, [r4, #8]
    4de6:	195b      	adds	r3, r3, r5
    4de8:	60a3      	str	r3, [r4, #8]
    4dea:	464b      	mov	r3, r9
    4dec:	681b      	ldr	r3, [r3, #0]
    4dee:	195b      	adds	r3, r3, r5
    4df0:	464a      	mov	r2, r9
    4df2:	6013      	str	r3, [r2, #0]
    4df4:	1b76      	subs	r6, r6, r5
    4df6:	d049      	beq.n	4e8c <f_read+0x18c>
    4df8:	68a3      	ldr	r3, [r4, #8]
    4dfa:	05da      	lsls	r2, r3, #23
    4dfc:	d1d7      	bne.n	4dae <f_read+0xae>
    4dfe:	6820      	ldr	r0, [r4, #0]
    4e00:	7882      	ldrb	r2, [r0, #2]
    4e02:	3a01      	subs	r2, #1
    4e04:	0a5d      	lsrs	r5, r3, #9
    4e06:	4015      	ands	r5, r2
    4e08:	b2ed      	uxtb	r5, r5
    4e0a:	2d00      	cmp	r5, #0
    4e0c:	d107      	bne.n	4e1e <f_read+0x11e>
    4e0e:	2b00      	cmp	r3, #0
    4e10:	d19f      	bne.n	4d52 <f_read+0x52>
    4e12:	6920      	ldr	r0, [r4, #16]
    4e14:	2801      	cmp	r0, #1
    4e16:	d9a0      	bls.n	4d5a <f_read+0x5a>
    4e18:	1c43      	adds	r3, r0, #1
    4e1a:	d0a6      	beq.n	4d6a <f_read+0x6a>
    4e1c:	6160      	str	r0, [r4, #20]
    4e1e:	6823      	ldr	r3, [r4, #0]
    4e20:	469a      	mov	sl, r3
    4e22:	6961      	ldr	r1, [r4, #20]
    4e24:	0018      	movs	r0, r3
    4e26:	4b21      	ldr	r3, [pc, #132]	; (4eac <f_read+0x1ac>)
    4e28:	4798      	blx	r3
    4e2a:	2800      	cmp	r0, #0
    4e2c:	d0a5      	beq.n	4d7a <f_read+0x7a>
    4e2e:	4680      	mov	r8, r0
    4e30:	44a8      	add	r8, r5
    4e32:	0a73      	lsrs	r3, r6, #9
    4e34:	469b      	mov	fp, r3
    4e36:	d0b8      	beq.n	4daa <f_read+0xaa>
    4e38:	4653      	mov	r3, sl
    4e3a:	789b      	ldrb	r3, [r3, #2]
    4e3c:	465a      	mov	r2, fp
    4e3e:	18aa      	adds	r2, r5, r2
    4e40:	429a      	cmp	r2, r3
    4e42:	d901      	bls.n	4e48 <f_read+0x148>
    4e44:	1b5b      	subs	r3, r3, r5
    4e46:	469b      	mov	fp, r3
    4e48:	465b      	mov	r3, fp
    4e4a:	466a      	mov	r2, sp
    4e4c:	71d3      	strb	r3, [r2, #7]
    4e4e:	79d3      	ldrb	r3, [r2, #7]
    4e50:	4652      	mov	r2, sl
    4e52:	7850      	ldrb	r0, [r2, #1]
    4e54:	4642      	mov	r2, r8
    4e56:	0039      	movs	r1, r7
    4e58:	4d15      	ldr	r5, [pc, #84]	; (4eb0 <f_read+0x1b0>)
    4e5a:	47a8      	blx	r5
    4e5c:	2800      	cmp	r0, #0
    4e5e:	d194      	bne.n	4d8a <f_read+0x8a>
    4e60:	6821      	ldr	r1, [r4, #0]
    4e62:	790b      	ldrb	r3, [r1, #4]
    4e64:	2b00      	cmp	r3, #0
    4e66:	d004      	beq.n	4e72 <f_read+0x172>
    4e68:	6acb      	ldr	r3, [r1, #44]	; 0x2c
    4e6a:	4642      	mov	r2, r8
    4e6c:	1a98      	subs	r0, r3, r2
    4e6e:	4583      	cmp	fp, r0
    4e70:	d893      	bhi.n	4d9a <f_read+0x9a>
    4e72:	465b      	mov	r3, fp
    4e74:	025d      	lsls	r5, r3, #9
    4e76:	e7b4      	b.n	4de2 <f_read+0xe2>
    4e78:	79a2      	ldrb	r2, [r4, #6]
    4e7a:	2380      	movs	r3, #128	; 0x80
    4e7c:	425b      	negs	r3, r3
    4e7e:	4313      	orrs	r3, r2
    4e80:	71a3      	strb	r3, [r4, #6]
    4e82:	2301      	movs	r3, #1
    4e84:	9300      	str	r3, [sp, #0]
    4e86:	e001      	b.n	4e8c <f_read+0x18c>
    4e88:	2302      	movs	r3, #2
    4e8a:	9300      	str	r3, [sp, #0]
    4e8c:	9800      	ldr	r0, [sp, #0]
    4e8e:	b003      	add	sp, #12
    4e90:	bc3c      	pop	{r2, r3, r4, r5}
    4e92:	4690      	mov	r8, r2
    4e94:	4699      	mov	r9, r3
    4e96:	46a2      	mov	sl, r4
    4e98:	46ab      	mov	fp, r5
    4e9a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    4e9c:	00003835 	.word	0x00003835
    4ea0:	00003d59 	.word	0x00003d59
    4ea4:	000037d9 	.word	0x000037d9
    4ea8:	00003cb9 	.word	0x00003cb9
    4eac:	000037ff 	.word	0x000037ff
    4eb0:	00003615 	.word	0x00003615

00004eb4 <f_sync>:
    4eb4:	b570      	push	{r4, r5, r6, lr}
    4eb6:	0004      	movs	r4, r0
    4eb8:	8881      	ldrh	r1, [r0, #4]
    4eba:	6800      	ldr	r0, [r0, #0]
    4ebc:	4b1c      	ldr	r3, [pc, #112]	; (4f30 <f_sync+0x7c>)
    4ebe:	4798      	blx	r3
    4ec0:	2800      	cmp	r0, #0
    4ec2:	d102      	bne.n	4eca <f_sync+0x16>
    4ec4:	79a3      	ldrb	r3, [r4, #6]
    4ec6:	069b      	lsls	r3, r3, #26
    4ec8:	d400      	bmi.n	4ecc <f_sync+0x18>
    4eca:	bd70      	pop	{r4, r5, r6, pc}
    4ecc:	69e1      	ldr	r1, [r4, #28]
    4ece:	6820      	ldr	r0, [r4, #0]
    4ed0:	4b18      	ldr	r3, [pc, #96]	; (4f34 <f_sync+0x80>)
    4ed2:	4798      	blx	r3
    4ed4:	2800      	cmp	r0, #0
    4ed6:	d1f8      	bne.n	4eca <f_sync+0x16>
    4ed8:	6a25      	ldr	r5, [r4, #32]
    4eda:	7aeb      	ldrb	r3, [r5, #11]
    4edc:	2220      	movs	r2, #32
    4ede:	4313      	orrs	r3, r2
    4ee0:	72eb      	strb	r3, [r5, #11]
    4ee2:	7b23      	ldrb	r3, [r4, #12]
    4ee4:	772b      	strb	r3, [r5, #28]
    4ee6:	89a3      	ldrh	r3, [r4, #12]
    4ee8:	0a1b      	lsrs	r3, r3, #8
    4eea:	776b      	strb	r3, [r5, #29]
    4eec:	89e3      	ldrh	r3, [r4, #14]
    4eee:	77ab      	strb	r3, [r5, #30]
    4ef0:	7be3      	ldrb	r3, [r4, #15]
    4ef2:	77eb      	strb	r3, [r5, #31]
    4ef4:	7c23      	ldrb	r3, [r4, #16]
    4ef6:	76ab      	strb	r3, [r5, #26]
    4ef8:	8a23      	ldrh	r3, [r4, #16]
    4efa:	0a1b      	lsrs	r3, r3, #8
    4efc:	76eb      	strb	r3, [r5, #27]
    4efe:	8a63      	ldrh	r3, [r4, #18]
    4f00:	752b      	strb	r3, [r5, #20]
    4f02:	8a63      	ldrh	r3, [r4, #18]
    4f04:	0a1b      	lsrs	r3, r3, #8
    4f06:	756b      	strb	r3, [r5, #21]
    4f08:	4b0b      	ldr	r3, [pc, #44]	; (4f38 <f_sync+0x84>)
    4f0a:	4798      	blx	r3
    4f0c:	75a8      	strb	r0, [r5, #22]
    4f0e:	0a03      	lsrs	r3, r0, #8
    4f10:	75eb      	strb	r3, [r5, #23]
    4f12:	0c03      	lsrs	r3, r0, #16
    4f14:	762b      	strb	r3, [r5, #24]
    4f16:	0e00      	lsrs	r0, r0, #24
    4f18:	7668      	strb	r0, [r5, #25]
    4f1a:	79a3      	ldrb	r3, [r4, #6]
    4f1c:	2220      	movs	r2, #32
    4f1e:	4393      	bics	r3, r2
    4f20:	71a3      	strb	r3, [r4, #6]
    4f22:	2301      	movs	r3, #1
    4f24:	6822      	ldr	r2, [r4, #0]
    4f26:	7113      	strb	r3, [r2, #4]
    4f28:	6820      	ldr	r0, [r4, #0]
    4f2a:	4b04      	ldr	r3, [pc, #16]	; (4f3c <f_sync+0x88>)
    4f2c:	4798      	blx	r3
    4f2e:	e7cc      	b.n	4eca <f_sync+0x16>
    4f30:	00003835 	.word	0x00003835
    4f34:	00003cb9 	.word	0x00003cb9
    4f38:	00003789 	.word	0x00003789
    4f3c:	00004711 	.word	0x00004711

00004f40 <f_close>:
    4f40:	b510      	push	{r4, lr}
    4f42:	0004      	movs	r4, r0
    4f44:	4b03      	ldr	r3, [pc, #12]	; (4f54 <f_close+0x14>)
    4f46:	4798      	blx	r3
    4f48:	2800      	cmp	r0, #0
    4f4a:	d101      	bne.n	4f50 <f_close+0x10>
    4f4c:	2300      	movs	r3, #0
    4f4e:	6023      	str	r3, [r4, #0]
    4f50:	bd10      	pop	{r4, pc}
    4f52:	46c0      	nop			; (mov r8, r8)
    4f54:	00004eb5 	.word	0x00004eb5

00004f58 <f_gets>:
    4f58:	b5f0      	push	{r4, r5, r6, r7, lr}
    4f5a:	46c6      	mov	lr, r8
    4f5c:	b500      	push	{lr}
    4f5e:	b084      	sub	sp, #16
    4f60:	0007      	movs	r7, r0
    4f62:	9201      	str	r2, [sp, #4]
    4f64:	0005      	movs	r5, r0
    4f66:	2400      	movs	r4, #0
    4f68:	1e4b      	subs	r3, r1, #1
    4f6a:	4698      	mov	r8, r3
    4f6c:	4e0e      	ldr	r6, [pc, #56]	; (4fa8 <f_gets+0x50>)
    4f6e:	4544      	cmp	r4, r8
    4f70:	da0e      	bge.n	4f90 <f_gets+0x38>
    4f72:	ab02      	add	r3, sp, #8
    4f74:	2201      	movs	r2, #1
    4f76:	a903      	add	r1, sp, #12
    4f78:	9801      	ldr	r0, [sp, #4]
    4f7a:	47b0      	blx	r6
    4f7c:	9b02      	ldr	r3, [sp, #8]
    4f7e:	2b01      	cmp	r3, #1
    4f80:	d106      	bne.n	4f90 <f_gets+0x38>
    4f82:	ab03      	add	r3, sp, #12
    4f84:	781b      	ldrb	r3, [r3, #0]
    4f86:	3501      	adds	r5, #1
    4f88:	553b      	strb	r3, [r7, r4]
    4f8a:	3401      	adds	r4, #1
    4f8c:	2b0a      	cmp	r3, #10
    4f8e:	d1ee      	bne.n	4f6e <f_gets+0x16>
    4f90:	2300      	movs	r3, #0
    4f92:	702b      	strb	r3, [r5, #0]
    4f94:	1e63      	subs	r3, r4, #1
    4f96:	419c      	sbcs	r4, r3
    4f98:	4264      	negs	r4, r4
    4f9a:	4027      	ands	r7, r4
    4f9c:	0038      	movs	r0, r7
    4f9e:	b004      	add	sp, #16
    4fa0:	bc04      	pop	{r2}
    4fa2:	4690      	mov	r8, r2
    4fa4:	bdf0      	pop	{r4, r5, r6, r7, pc}
    4fa6:	46c0      	nop			; (mov r8, r8)
    4fa8:	00004d01 	.word	0x00004d01

00004fac <ff_convert>:
    4fac:	0003      	movs	r3, r0
    4fae:	287f      	cmp	r0, #127	; 0x7f
    4fb0:	d911      	bls.n	4fd6 <ff_convert+0x2a>
    4fb2:	2900      	cmp	r1, #0
    4fb4:	d111      	bne.n	4fda <ff_convert+0x2e>
    4fb6:	28c7      	cmp	r0, #199	; 0xc7
    4fb8:	d017      	beq.n	4fea <ff_convert+0x3e>
    4fba:	4a0d      	ldr	r2, [pc, #52]	; (4ff0 <ff_convert+0x44>)
    4fbc:	3202      	adds	r2, #2
    4fbe:	2301      	movs	r3, #1
    4fc0:	8811      	ldrh	r1, [r2, #0]
    4fc2:	4281      	cmp	r1, r0
    4fc4:	d004      	beq.n	4fd0 <ff_convert+0x24>
    4fc6:	3301      	adds	r3, #1
    4fc8:	b29b      	uxth	r3, r3
    4fca:	3202      	adds	r2, #2
    4fcc:	2b80      	cmp	r3, #128	; 0x80
    4fce:	d1f7      	bne.n	4fc0 <ff_convert+0x14>
    4fd0:	3380      	adds	r3, #128	; 0x80
    4fd2:	20ff      	movs	r0, #255	; 0xff
    4fd4:	4003      	ands	r3, r0
    4fd6:	0018      	movs	r0, r3
    4fd8:	4770      	bx	lr
    4fda:	2300      	movs	r3, #0
    4fdc:	28ff      	cmp	r0, #255	; 0xff
    4fde:	d8fa      	bhi.n	4fd6 <ff_convert+0x2a>
    4fe0:	3880      	subs	r0, #128	; 0x80
    4fe2:	0040      	lsls	r0, r0, #1
    4fe4:	4b02      	ldr	r3, [pc, #8]	; (4ff0 <ff_convert+0x44>)
    4fe6:	5ac3      	ldrh	r3, [r0, r3]
    4fe8:	e7f5      	b.n	4fd6 <ff_convert+0x2a>
    4fea:	2300      	movs	r3, #0
    4fec:	e7f0      	b.n	4fd0 <ff_convert+0x24>
    4fee:	46c0      	nop			; (mov r8, r8)
    4ff0:	00006fd4 	.word	0x00006fd4

00004ff4 <ff_wtoupper>:
    4ff4:	2861      	cmp	r0, #97	; 0x61
    4ff6:	d014      	beq.n	5022 <ff_wtoupper+0x2e>
    4ff8:	4b0b      	ldr	r3, [pc, #44]	; (5028 <ff_wtoupper+0x34>)
    4ffa:	3304      	adds	r3, #4
    4ffc:	2101      	movs	r1, #1
    4ffe:	2262      	movs	r2, #98	; 0x62
    5000:	4290      	cmp	r0, r2
    5002:	d007      	beq.n	5014 <ff_wtoupper+0x20>
    5004:	3101      	adds	r1, #1
    5006:	3302      	adds	r3, #2
    5008:	1e9a      	subs	r2, r3, #2
    500a:	8812      	ldrh	r2, [r2, #0]
    500c:	2a00      	cmp	r2, #0
    500e:	d1f7      	bne.n	5000 <ff_wtoupper+0xc>
    5010:	0003      	movs	r3, r0
    5012:	e004      	b.n	501e <ff_wtoupper+0x2a>
    5014:	1e03      	subs	r3, r0, #0
    5016:	d002      	beq.n	501e <ff_wtoupper+0x2a>
    5018:	0049      	lsls	r1, r1, #1
    501a:	4b04      	ldr	r3, [pc, #16]	; (502c <ff_wtoupper+0x38>)
    501c:	5acb      	ldrh	r3, [r1, r3]
    501e:	0018      	movs	r0, r3
    5020:	4770      	bx	lr
    5022:	2100      	movs	r1, #0
    5024:	e7f8      	b.n	5018 <ff_wtoupper+0x24>
    5026:	46c0      	nop			; (mov r8, r8)
    5028:	000070d4 	.word	0x000070d4
    502c:	000072b4 	.word	0x000072b4

00005030 <SysTick_Handler>:
		}
	}
}

void SysTick_Handler(void){
	MilliTimer++;
    5030:	4a02      	ldr	r2, [pc, #8]	; (503c <SysTick_Handler+0xc>)
    5032:	6813      	ldr	r3, [r2, #0]
    5034:	3301      	adds	r3, #1
    5036:	6013      	str	r3, [r2, #0]
}
    5038:	4770      	bx	lr
    503a:	46c0      	nop			; (mov r8, r8)
    503c:	2000030c 	.word	0x2000030c

00005040 <extint_detection_callback>:


volatile bool isPressed = false;
void extint_detection_callback(void)
{
	isPressed = true;
    5040:	2201      	movs	r2, #1
    5042:	4b01      	ldr	r3, [pc, #4]	; (5048 <extint_detection_callback+0x8>)
    5044:	701a      	strb	r2, [r3, #0]
}
    5046:	4770      	bx	lr
    5048:	20000598 	.word	0x20000598

0000504c <usart_serial_getchar>:
 * \param[out]    c       Destination for the read character.
 */
static inline void usart_serial_getchar(
		struct usart_module *const module,
		uint8_t *c)
{
    504c:	b570      	push	{r4, r5, r6, lr}
    504e:	b082      	sub	sp, #8
    5050:	0005      	movs	r5, r0
    5052:	000e      	movs	r6, r1
	uint16_t temp = 0;
    5054:	2200      	movs	r2, #0
    5056:	466b      	mov	r3, sp
    5058:	80da      	strh	r2, [r3, #6]

	while(STATUS_OK != usart_read_wait(module, &temp));
    505a:	4c06      	ldr	r4, [pc, #24]	; (5074 <usart_serial_getchar+0x28>)
    505c:	466b      	mov	r3, sp
    505e:	1d99      	adds	r1, r3, #6
    5060:	0028      	movs	r0, r5
    5062:	47a0      	blx	r4
    5064:	2800      	cmp	r0, #0
    5066:	d1f9      	bne.n	505c <usart_serial_getchar+0x10>

	*c = temp;
    5068:	466b      	mov	r3, sp
    506a:	3306      	adds	r3, #6
    506c:	881b      	ldrh	r3, [r3, #0]
    506e:	7033      	strb	r3, [r6, #0]
}
    5070:	b002      	add	sp, #8
    5072:	bd70      	pop	{r4, r5, r6, pc}
    5074:	00002a01 	.word	0x00002a01

00005078 <usart_serial_putchar>:
{
    5078:	b570      	push	{r4, r5, r6, lr}
    507a:	0005      	movs	r5, r0
	while(STATUS_OK !=usart_write_wait(module, c));
    507c:	b28c      	uxth	r4, r1
    507e:	4e03      	ldr	r6, [pc, #12]	; (508c <usart_serial_putchar+0x14>)
    5080:	0021      	movs	r1, r4
    5082:	0028      	movs	r0, r5
    5084:	47b0      	blx	r6
    5086:	2800      	cmp	r0, #0
    5088:	d1fa      	bne.n	5080 <usart_serial_putchar+0x8>
}
    508a:	bd70      	pop	{r4, r5, r6, pc}
    508c:	000029d5 	.word	0x000029d5

00005090 <configure_extint_channel>:
{
    5090:	b510      	push	{r4, lr}
    extint_chan_get_config_defaults(&config_extint_chan);
    5092:	4c08      	ldr	r4, [pc, #32]	; (50b4 <configure_extint_channel+0x24>)
    5094:	0020      	movs	r0, r4
    5096:	4b08      	ldr	r3, [pc, #32]	; (50b8 <configure_extint_channel+0x28>)
    5098:	4798      	blx	r3
    config_extint_chan.gpio_pin           = BUTTON_0_EIC_PIN;
    509a:	2337      	movs	r3, #55	; 0x37
    509c:	6023      	str	r3, [r4, #0]
    config_extint_chan.gpio_pin_mux       = BUTTON_0_EIC_MUX;
    509e:	2300      	movs	r3, #0
    50a0:	6063      	str	r3, [r4, #4]
    config_extint_chan.gpio_pin_pull      = EXTINT_PULL_UP;
    50a2:	3301      	adds	r3, #1
    50a4:	7223      	strb	r3, [r4, #8]
    config_extint_chan.detection_criteria = EXTINT_DETECT_FALLING;
    50a6:	3301      	adds	r3, #1
    50a8:	72e3      	strb	r3, [r4, #11]
    extint_chan_set_config(BUTTON_0_EIC_LINE, &config_extint_chan);
    50aa:	0021      	movs	r1, r4
    50ac:	2007      	movs	r0, #7
    50ae:	4b03      	ldr	r3, [pc, #12]	; (50bc <configure_extint_channel+0x2c>)
    50b0:	4798      	blx	r3
}
    50b2:	bd10      	pop	{r4, pc}
    50b4:	200006c0 	.word	0x200006c0
    50b8:	00001589 	.word	0x00001589
    50bc:	0000159d 	.word	0x0000159d

000050c0 <configure_extint_callbacks>:
{
    50c0:	b510      	push	{r4, lr}
    extint_register_callback(extint_detection_callback,
    50c2:	2200      	movs	r2, #0
    50c4:	2107      	movs	r1, #7
    50c6:	4804      	ldr	r0, [pc, #16]	; (50d8 <configure_extint_callbacks+0x18>)
    50c8:	4b04      	ldr	r3, [pc, #16]	; (50dc <configure_extint_callbacks+0x1c>)
    50ca:	4798      	blx	r3
    extint_chan_enable_callback(BUTTON_0_EIC_LINE,
    50cc:	2100      	movs	r1, #0
    50ce:	2007      	movs	r0, #7
    50d0:	4b03      	ldr	r3, [pc, #12]	; (50e0 <configure_extint_callbacks+0x20>)
    50d2:	4798      	blx	r3
}
    50d4:	bd10      	pop	{r4, pc}
    50d6:	46c0      	nop			; (mov r8, r8)
    50d8:	00005041 	.word	0x00005041
    50dc:	00001465 	.word	0x00001465
    50e0:	00001491 	.word	0x00001491

000050e4 <configure_nvm>:

/**
* NVM CONFIGURATION
*/
void configure_nvm(void)
{
    50e4:	b510      	push	{r4, lr}
{
	/* Sanity check the parameters */
	Assert(config);

	/* Write the default configuration for the NVM configuration */
	config->sleep_power_mode  = NVM_SLEEP_POWER_MODE_WAKEONACCESS;
    50e6:	4807      	ldr	r0, [pc, #28]	; (5104 <configure_nvm+0x20>)
    50e8:	2200      	movs	r2, #0
    50ea:	7002      	strb	r2, [r0, #0]
	config->manual_page_write = true;
	config->wait_states       = NVMCTRL->CTRLB.bit.RWS;
    50ec:	4b06      	ldr	r3, [pc, #24]	; (5108 <configure_nvm+0x24>)
    50ee:	685b      	ldr	r3, [r3, #4]
    50f0:	06db      	lsls	r3, r3, #27
    50f2:	0f1b      	lsrs	r3, r3, #28
    50f4:	7083      	strb	r3, [r0, #2]
	config->disable_cache     = false;
    50f6:	70c2      	strb	r2, [r0, #3]
#if (SAMC20) || (SAMC21)
	config->disable_rww_cache = false;
#endif
	config->cache_readmode    = NVM_CACHE_READMODE_NO_MISS_PENALTY;
    50f8:	7102      	strb	r2, [r0, #4]
	nvm_get_config_defaults(&nvm_cfg);	
	nvm_cfg.manual_page_write = false;
    50fa:	7042      	strb	r2, [r0, #1]
	nvm_set_config(&nvm_cfg);
    50fc:	4b03      	ldr	r3, [pc, #12]	; (510c <configure_nvm+0x28>)
    50fe:	4798      	blx	r3
}
    5100:	bd10      	pop	{r4, pc}
    5102:	46c0      	nop			; (mov r8, r8)
    5104:	20000670 	.word	0x20000670
    5108:	41004000 	.word	0x41004000
    510c:	00001615 	.word	0x00001615

00005110 <check_boot_mode>:

/* 
* CHECK BOOT MODE 
*/ 
int check_boot_mode()
{
    5110:	b510      	push	{r4, lr}
	printf("boot mode: checking if bootloader or app code is to run ....\n\r");
    5112:	4814      	ldr	r0, [pc, #80]	; (5164 <check_boot_mode+0x54>)
    5114:	4b14      	ldr	r3, [pc, #80]	; (5168 <check_boot_mode+0x58>)
    5116:	4798      	blx	r3
	
	ver_check_address = VERSION_ADDRESS;
	ver_check_address_ptr = (uint8_t *)ver_check_address;
	

	if (isPressed == true)						// Button is pressed, run bootloader
    5118:	4b14      	ldr	r3, [pc, #80]	; (516c <check_boot_mode+0x5c>)
    511a:	781b      	ldrb	r3, [r3, #0]
    511c:	2b00      	cmp	r3, #0
    511e:	d10b      	bne.n	5138 <check_boot_mode+0x28>
		printf("boot mode: >> Bootloader Button pressed \n\r");	
		isPressed = false;
		return 0;
	}

	if (*otafu_check_address_ptr != 0xFF)		// OTAFU requested; run bootloader
    5120:	239b      	movs	r3, #155	; 0x9b
    5122:	021b      	lsls	r3, r3, #8
    5124:	781b      	ldrb	r3, [r3, #0]
    5126:	2bff      	cmp	r3, #255	; 0xff
    5128:	d10e      	bne.n	5148 <check_boot_mode+0x38>
		printf("boot mode: >> OTAFU \n\r");
		otafu_flag = true;
		return 0;
	}

	if (*app_check_address_ptr == 0xFFFFFFFF) 	// No application; run bootloader
    512a:	239c      	movs	r3, #156	; 0x9c
    512c:	021b      	lsls	r3, r3, #8
    512e:	681b      	ldr	r3, [r3, #0]
// 	if (*ver_check_address_ptr == 0xFF)			// Even if application is present, version flag is empty
// 	{
// 		printf("boot mode: >> NO VERSION FLAG \n\r");
// 		return 0;
// 	}
	return 1;
    5130:	2001      	movs	r0, #1
	if (*app_check_address_ptr == 0xFFFFFFFF) 	// No application; run bootloader
    5132:	3301      	adds	r3, #1
    5134:	d010      	beq.n	5158 <check_boot_mode+0x48>
}
    5136:	bd10      	pop	{r4, pc}
		printf("boot mode: >> Bootloader Button pressed \n\r");	
    5138:	480d      	ldr	r0, [pc, #52]	; (5170 <check_boot_mode+0x60>)
    513a:	4b0b      	ldr	r3, [pc, #44]	; (5168 <check_boot_mode+0x58>)
    513c:	4798      	blx	r3
		isPressed = false;
    513e:	2200      	movs	r2, #0
    5140:	4b0a      	ldr	r3, [pc, #40]	; (516c <check_boot_mode+0x5c>)
    5142:	701a      	strb	r2, [r3, #0]
		return 0;
    5144:	2000      	movs	r0, #0
    5146:	e7f6      	b.n	5136 <check_boot_mode+0x26>
		printf("boot mode: >> OTAFU \n\r");
    5148:	480a      	ldr	r0, [pc, #40]	; (5174 <check_boot_mode+0x64>)
    514a:	4b07      	ldr	r3, [pc, #28]	; (5168 <check_boot_mode+0x58>)
    514c:	4798      	blx	r3
		otafu_flag = true;
    514e:	2201      	movs	r2, #1
    5150:	4b09      	ldr	r3, [pc, #36]	; (5178 <check_boot_mode+0x68>)
    5152:	701a      	strb	r2, [r3, #0]
		return 0;
    5154:	2000      	movs	r0, #0
    5156:	e7ee      	b.n	5136 <check_boot_mode+0x26>
		printf("boot mode: >> NO APP AVAILABLE \n\r");
    5158:	4808      	ldr	r0, [pc, #32]	; (517c <check_boot_mode+0x6c>)
    515a:	4b03      	ldr	r3, [pc, #12]	; (5168 <check_boot_mode+0x58>)
    515c:	4798      	blx	r3
		return 0;
    515e:	2000      	movs	r0, #0
    5160:	e7e9      	b.n	5136 <check_boot_mode+0x26>
    5162:	46c0      	nop			; (mov r8, r8)
    5164:	00007494 	.word	0x00007494
    5168:	00005af1 	.word	0x00005af1
    516c:	20000598 	.word	0x20000598
    5170:	000074d4 	.word	0x000074d4
    5174:	00007500 	.word	0x00007500
    5178:	200006bc 	.word	0x200006bc
    517c:	00007518 	.word	0x00007518

00005180 <disable_console>:
///////////////////////////////////////////
/**
 * \DISABLE UART console.
 */
void disable_console()
{
    5180:	b570      	push	{r4, r5, r6, lr}
	/* Sanity check arguments */
	Assert(module);
	Assert(module->hw);

	/* Get a pointer to the hardware module instance */
	SercomUsart *const usart_hw = &(module->hw->USART);
    5182:	4d0a      	ldr	r5, [pc, #40]	; (51ac <disable_console+0x2c>)
    5184:	682c      	ldr	r4, [r5, #0]

#if USART_CALLBACK_MODE == true
	/* Disable Global interrupt for module */
	system_interrupt_disable(_sercom_get_interrupt_vector(module->hw));
    5186:	0020      	movs	r0, r4
    5188:	4b09      	ldr	r3, [pc, #36]	; (51b0 <disable_console+0x30>)
    518a:	4798      	blx	r3
 * \param[in] vector  Interrupt vector to disable
 */
static inline void system_interrupt_disable(
		const enum system_interrupt_vector vector)
{
	NVIC->ICER[0] = (uint32_t)(1 << ((uint32_t)vector & 0x0000001f));
    518c:	231f      	movs	r3, #31
    518e:	4018      	ands	r0, r3
    5190:	3b1e      	subs	r3, #30
    5192:	4083      	lsls	r3, r0
    5194:	2280      	movs	r2, #128	; 0x80
    5196:	4907      	ldr	r1, [pc, #28]	; (51b4 <disable_console+0x34>)
    5198:	508b      	str	r3, [r1, r2]
	SercomUsart *const usart_hw = &(module->hw->USART);
    519a:	682a      	ldr	r2, [r5, #0]
	return (usart_hw->SYNCBUSY.reg);
    519c:	69d3      	ldr	r3, [r2, #28]
	while (usart_is_syncing(module)) {
    519e:	2b00      	cmp	r3, #0
    51a0:	d1fc      	bne.n	519c <disable_console+0x1c>

	/* Wait until synchronization is complete */
	_usart_wait_for_sync(module);

	/* Disable USART module */
	usart_hw->CTRLA.reg &= ~SERCOM_USART_CTRLA_ENABLE;
    51a2:	6823      	ldr	r3, [r4, #0]
    51a4:	2202      	movs	r2, #2
    51a6:	4393      	bics	r3, r2
    51a8:	6023      	str	r3, [r4, #0]
	usart_disable(&cdc_uart_module);
}
    51aa:	bd70      	pop	{r4, r5, r6, pc}
    51ac:	20000310 	.word	0x20000310
    51b0:	00001ec1 	.word	0x00001ec1
    51b4:	e000e100 	.word	0xe000e100

000051b8 <disable_peripherals>:

/* 
* DEINITIALIZE HARDWARE & PERIPHERALS
*/
void disable_peripherals()
{
    51b8:	b510      	push	{r4, lr}
 	printf("disable peripherals: Deinitializing peripherals \n\rJumping to app..... \n\r");
    51ba:	4809      	ldr	r0, [pc, #36]	; (51e0 <disable_peripherals+0x28>)
    51bc:	4b09      	ldr	r3, [pc, #36]	; (51e4 <disable_peripherals+0x2c>)
    51be:	4798      	blx	r3

 	delay_s(2);
    51c0:	20fa      	movs	r0, #250	; 0xfa
    51c2:	00c0      	lsls	r0, r0, #3
    51c4:	4b08      	ldr	r3, [pc, #32]	; (51e8 <disable_peripherals+0x30>)
    51c6:	4798      	blx	r3
  __ASM volatile ("cpsid i" : : : "memory");
    51c8:	b672      	cpsid	i
    51ca:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
    51ce:	2200      	movs	r2, #0
    51d0:	4b06      	ldr	r3, [pc, #24]	; (51ec <disable_peripherals+0x34>)
    51d2:	701a      	strb	r2, [r3, #0]

 	system_interrupt_disable_global();
	
 	disable_console();
    51d4:	4b06      	ldr	r3, [pc, #24]	; (51f0 <disable_peripherals+0x38>)
    51d6:	4798      	blx	r3
 	sd_deinit();
    51d8:	4b06      	ldr	r3, [pc, #24]	; (51f4 <disable_peripherals+0x3c>)
    51da:	4798      	blx	r3
	
}
    51dc:	bd10      	pop	{r4, pc}
    51de:	46c0      	nop			; (mov r8, r8)
    51e0:	0000753c 	.word	0x0000753c
    51e4:	00005af1 	.word	0x00005af1
    51e8:	00001225 	.word	0x00001225
    51ec:	2000000c 	.word	0x2000000c
    51f0:	00005181 	.word	0x00005181
    51f4:	00000cbd 	.word	0x00000cbd

000051f8 <jump_to_app>:

/* 
* JUMP TO APPLICATION CODE 
*/ 
static void jump_to_app(void)
{
    51f8:	b580      	push	{r7, lr}
    51fa:	af00      	add	r7, sp, #0
	disable_peripherals();
    51fc:	4b06      	ldr	r3, [pc, #24]	; (5218 <jump_to_app+0x20>)
    51fe:	4798      	blx	r3
	
	/// Function pointer to application section
	void (*applicationCodeEntry)(void);
	
	/// Rebase stack pointer
	__set_MSP(*(uint32_t *) APP_START_ADDRESS);
    5200:	239c      	movs	r3, #156	; 0x9c
    5202:	021b      	lsls	r3, r3, #8
  __ASM volatile ("MSR msp, %0\n" : : "r" (topOfMainStack) : "sp");
    5204:	681a      	ldr	r2, [r3, #0]
    5206:	f382 8808 	msr	MSP, r2

	/// Rebase vector table
	SCB->VTOR = ((uint32_t) APP_START_ADDRESS & SCB_VTOR_TBLOFF_Msk);
    520a:	4a04      	ldr	r2, [pc, #16]	; (521c <jump_to_app+0x24>)
    520c:	6093      	str	r3, [r2, #8]
	
	/// Set pointer to application section
	applicationCodeEntry = (void (*)(void))(unsigned *)(*(unsigned *)(APP_START_RESET_VEC_ADDRESS));
    520e:	4b04      	ldr	r3, [pc, #16]	; (5220 <jump_to_app+0x28>)
	
	/// Jump to application
	applicationCodeEntry();
    5210:	681b      	ldr	r3, [r3, #0]
    5212:	4798      	blx	r3
}	
    5214:	46bd      	mov	sp, r7
    5216:	bd80      	pop	{r7, pc}
    5218:	000051b9 	.word	0x000051b9
    521c:	e000ed00 	.word	0xe000ed00
    5220:	00009c04 	.word	0x00009c04

00005224 <sd_card_to_nvm_copy>:

/* 
* ALL SD CARD OPERATIONS 
*/ 
int sd_card_to_nvm_copy()
{	
    5224:	b5f0      	push	{r4, r5, r6, r7, lr}
    5226:	46de      	mov	lr, fp
    5228:	4657      	mov	r7, sl
    522a:	464e      	mov	r6, r9
    522c:	4645      	mov	r5, r8
    522e:	b5e0      	push	{r5, r6, r7, lr}
    5230:	b083      	sub	sp, #12
	printf("sd_card_to_nvm_copy: Reading card ..... \n\r");
    5232:	4884      	ldr	r0, [pc, #528]	; (5444 <sd_card_to_nvm_copy+0x220>)
    5234:	4b84      	ldr	r3, [pc, #528]	; (5448 <sd_card_to_nvm_copy+0x224>)
    5236:	4798      	blx	r3
	
	/************* Check for Firmware version on SD Card ***************/
	
	ver_file_name[0] = LUN_ID_SD_MMC_0_MEM + '0';
    5238:	4984      	ldr	r1, [pc, #528]	; (544c <sd_card_to_nvm_copy+0x228>)
    523a:	2330      	movs	r3, #48	; 0x30
    523c:	700b      	strb	r3, [r1, #0]
	res1 = f_open(&file_object,(char const *)ver_file_name,FA_READ);
    523e:	4c84      	ldr	r4, [pc, #528]	; (5450 <sd_card_to_nvm_copy+0x22c>)
    5240:	2201      	movs	r2, #1
    5242:	0020      	movs	r0, r4
    5244:	4b83      	ldr	r3, [pc, #524]	; (5454 <sd_card_to_nvm_copy+0x230>)
    5246:	4798      	blx	r3
    5248:	4b83      	ldr	r3, [pc, #524]	; (5458 <sd_card_to_nvm_copy+0x234>)
    524a:	7018      	strb	r0, [r3, #0]
	f_gets(sd_version_num,&file_object.fsize,&file_object);
    524c:	0021      	movs	r1, r4
    524e:	310c      	adds	r1, #12
    5250:	4d82      	ldr	r5, [pc, #520]	; (545c <sd_card_to_nvm_copy+0x238>)
    5252:	0022      	movs	r2, r4
    5254:	0028      	movs	r0, r5
    5256:	4b82      	ldr	r3, [pc, #520]	; (5460 <sd_card_to_nvm_copy+0x23c>)
    5258:	4798      	blx	r3
	f_close(&file_object);	
    525a:	0020      	movs	r0, r4
    525c:	4b81      	ldr	r3, [pc, #516]	; (5464 <sd_card_to_nvm_copy+0x240>)
    525e:	4798      	blx	r3
	
	uint8_t sd_version_num1 = atoi(sd_version_num);		
    5260:	0028      	movs	r0, r5
    5262:	4b81      	ldr	r3, [pc, #516]	; (5468 <sd_card_to_nvm_copy+0x244>)
    5264:	4798      	blx	r3
    5266:	466b      	mov	r3, sp
    5268:	71d8      	strb	r0, [r3, #7]
	
	do
	{
		error_code = nvm_read_buffer(VERSION_ADDRESS,&nvm_version_num,1);			
    526a:	4e80      	ldr	r6, [pc, #512]	; (546c <sd_card_to_nvm_copy+0x248>)
    526c:	4d80      	ldr	r5, [pc, #512]	; (5470 <sd_card_to_nvm_copy+0x24c>)
    526e:	4c81      	ldr	r4, [pc, #516]	; (5474 <sd_card_to_nvm_copy+0x250>)
    5270:	2201      	movs	r2, #1
    5272:	0031      	movs	r1, r6
    5274:	209a      	movs	r0, #154	; 0x9a
    5276:	0200      	lsls	r0, r0, #8
    5278:	47a8      	blx	r5
    527a:	7020      	strb	r0, [r4, #0]
	} while (error_code == STATUS_BUSY);
    527c:	2805      	cmp	r0, #5
    527e:	d0f7      	beq.n	5270 <sd_card_to_nvm_copy+0x4c>
		
	printf("SD_VER = %u\n\r", (uint8_t)sd_version_num1);
    5280:	466b      	mov	r3, sp
    5282:	79d9      	ldrb	r1, [r3, #7]
    5284:	487c      	ldr	r0, [pc, #496]	; (5478 <sd_card_to_nvm_copy+0x254>)
    5286:	4d70      	ldr	r5, [pc, #448]	; (5448 <sd_card_to_nvm_copy+0x224>)
    5288:	47a8      	blx	r5
	printf("NVM_VER = %u\n\r", (uint8_t)nvm_version_num);
    528a:	4c78      	ldr	r4, [pc, #480]	; (546c <sd_card_to_nvm_copy+0x248>)
    528c:	7821      	ldrb	r1, [r4, #0]
    528e:	487b      	ldr	r0, [pc, #492]	; (547c <sd_card_to_nvm_copy+0x258>)
    5290:	47a8      	blx	r5

	if ((nvm_version_num == 255) || (nvm_version_num < sd_version_num1))
    5292:	7823      	ldrb	r3, [r4, #0]
    5294:	2bff      	cmp	r3, #255	; 0xff
    5296:	d004      	beq.n	52a2 <sd_card_to_nvm_copy+0x7e>
    5298:	466a      	mov	r2, sp
    529a:	3207      	adds	r2, #7
    529c:	7812      	ldrb	r2, [r2, #0]
    529e:	429a      	cmp	r2, r3
    52a0:	d942      	bls.n	5328 <sd_card_to_nvm_copy+0x104>
	{
		printf("sd_card_to_nvm_copy: Version Different, Writing new code ..... \n\r");
    52a2:	4877      	ldr	r0, [pc, #476]	; (5480 <sd_card_to_nvm_copy+0x25c>)
    52a4:	4b68      	ldr	r3, [pc, #416]	; (5448 <sd_card_to_nvm_copy+0x224>)
    52a6:	4798      	blx	r3
	/*---------------------------------------Version Check Complete ----------------------------*/	
	
	///////////////////////////////////////////////////////////////////
		
	/**************** Open Firmware File ******************/
	test_file_name[0] = LUN_ID_SD_MMC_0_MEM + '0';
    52a8:	4976      	ldr	r1, [pc, #472]	; (5484 <sd_card_to_nvm_copy+0x260>)
    52aa:	2330      	movs	r3, #48	; 0x30
    52ac:	700b      	strb	r3, [r1, #0]
	res1 = f_open(&file_object,(char const*)test_file_name,FA_READ);
    52ae:	2201      	movs	r2, #1
    52b0:	4867      	ldr	r0, [pc, #412]	; (5450 <sd_card_to_nvm_copy+0x22c>)
    52b2:	4b68      	ldr	r3, [pc, #416]	; (5454 <sd_card_to_nvm_copy+0x230>)
    52b4:	4798      	blx	r3
    52b6:	4b68      	ldr	r3, [pc, #416]	; (5458 <sd_card_to_nvm_copy+0x234>)
    52b8:	7018      	strb	r0, [r3, #0]
	if (res1 != FR_OK)
    52ba:	2800      	cmp	r0, #0
    52bc:	d13a      	bne.n	5334 <sd_card_to_nvm_copy+0x110>
		{
			printf("sd operation: >> Opening a file failed\n\r");
			return 1;
		}
	printf("sd operation: >> File open success\n\r");
    52be:	4872      	ldr	r0, [pc, #456]	; (5488 <sd_card_to_nvm_copy+0x264>)
    52c0:	4c61      	ldr	r4, [pc, #388]	; (5448 <sd_card_to_nvm_copy+0x224>)
    52c2:	47a0      	blx	r4
	
	
	/**************** Read one Page at a time, Erase NVM and write to NVM ******************/
	
	printf("sd operation: initiating firmware write to nvm ....... \n\r");
    52c4:	4871      	ldr	r0, [pc, #452]	; (548c <sd_card_to_nvm_copy+0x268>)
    52c6:	47a0      	blx	r4

	uint32_t bytes_read = 0;
    52c8:	2300      	movs	r3, #0
    52ca:	9300      	str	r3, [sp, #0]
	uint32_t num_pages=0;
	uint32_t off_set=0;
	uint32_t fw_size= f_size(&file_object);
    52cc:	4b60      	ldr	r3, [pc, #384]	; (5450 <sd_card_to_nvm_copy+0x22c>)
    52ce:	68db      	ldr	r3, [r3, #12]
	uint32_t rem = fw_size%NVMCTRL_PAGE_SIZE;
    52d0:	223f      	movs	r2, #63	; 0x3f
    52d2:	401a      	ands	r2, r3
    52d4:	4692      	mov	sl, r2
		num_pages = (fw_size/NVMCTRL_PAGE_SIZE)+1;
		off_set = fw_size - ((num_pages-1) * NVMCTRL_PAGE_SIZE);
	}
	else
	{
		num_pages = (fw_size/NVMCTRL_PAGE_SIZE);
    52d6:	0999      	lsrs	r1, r3, #6
    52d8:	4688      	mov	r8, r1
	if(rem!=0)
    52da:	2a00      	cmp	r2, #0
    52dc:	d005      	beq.n	52ea <sd_card_to_nvm_copy+0xc6>
		num_pages = (fw_size/NVMCTRL_PAGE_SIZE)+1;
    52de:	000a      	movs	r2, r1
    52e0:	3101      	adds	r1, #1
    52e2:	4688      	mov	r8, r1
		off_set = fw_size - ((num_pages-1) * NVMCTRL_PAGE_SIZE);
    52e4:	0192      	lsls	r2, r2, #6
    52e6:	1a9a      	subs	r2, r3, r2
    52e8:	4692      	mov	sl, r2
		off_set = 0;
	}
		
	if (fw_size != 0)
    52ea:	2b00      	cmp	r3, #0
    52ec:	d100      	bne.n	52f0 <sd_card_to_nvm_copy+0xcc>
    52ee:	e080      	b.n	53f2 <sd_card_to_nvm_copy+0x1ce>
	{
		uint32_t current_page = 0;
		uint32_t curr_address = 0;
		uint16_t rows_clear = fw_size / NVMCTRL_ROW_SIZE;
    52f0:	0a1b      	lsrs	r3, r3, #8
    52f2:	b29b      	uxth	r3, r3
    52f4:	4699      	mov	r9, r3
		uint16_t i;
			
		//Clear NVM
		/** -------------- NVM clearing ----------------------------- */
		//printf("sd operation: erasing nvm location ....... \n\r");
		for (i = 0; i <= rows_clear; i++)
    52f6:	2700      	movs	r7, #0
		{
			do
			{
				error_code = nvm_erase_row((APP_START_ADDRESS) + (NVMCTRL_ROW_SIZE * i));	
    52f8:	4e65      	ldr	r6, [pc, #404]	; (5490 <sd_card_to_nvm_copy+0x26c>)
    52fa:	4d5e      	ldr	r5, [pc, #376]	; (5474 <sd_card_to_nvm_copy+0x250>)
    52fc:	023c      	lsls	r4, r7, #8
    52fe:	239c      	movs	r3, #156	; 0x9c
    5300:	021b      	lsls	r3, r3, #8
    5302:	469c      	mov	ip, r3
    5304:	4464      	add	r4, ip
    5306:	0020      	movs	r0, r4
    5308:	47b0      	blx	r6
    530a:	7028      	strb	r0, [r5, #0]
			} while (error_code == STATUS_BUSY);
    530c:	2805      	cmp	r0, #5
    530e:	d0fa      	beq.n	5306 <sd_card_to_nvm_copy+0xe2>
		for (i = 0; i <= rows_clear; i++)
    5310:	3701      	adds	r7, #1
    5312:	b2bf      	uxth	r7, r7
    5314:	45b9      	cmp	r9, r7
    5316:	d2f1      	bcs.n	52fc <sd_card_to_nvm_copy+0xd8>
		}
			
		//Write to NVM
		/** -------------- NVM writing ----------------------------- */
		//printf("sd operation: writing firmware to nvm ....... \n\r");
		for(uint16_t j=0;j<num_pages;j++)
    5318:	4643      	mov	r3, r8
    531a:	2b00      	cmp	r3, #0
    531c:	d069      	beq.n	53f2 <sd_card_to_nvm_copy+0x1ce>
    531e:	2400      	movs	r4, #0
    5320:	2500      	movs	r5, #0
		{
				f_read(&file_object,page_buffer,NVMCTRL_PAGE_SIZE,&bytes_read);
    5322:	4b5c      	ldr	r3, [pc, #368]	; (5494 <sd_card_to_nvm_copy+0x270>)
    5324:	469b      	mov	fp, r3
    5326:	e029      	b.n	537c <sd_card_to_nvm_copy+0x158>
		printf("sd_card_to_nvm_copy: >> Version Same \n\r");
    5328:	485b      	ldr	r0, [pc, #364]	; (5498 <sd_card_to_nvm_copy+0x274>)
    532a:	4b47      	ldr	r3, [pc, #284]	; (5448 <sd_card_to_nvm_copy+0x224>)
    532c:	4798      	blx	r3
		jump_to_app();
    532e:	4b5b      	ldr	r3, [pc, #364]	; (549c <sd_card_to_nvm_copy+0x278>)
    5330:	4798      	blx	r3
    5332:	e7b9      	b.n	52a8 <sd_card_to_nvm_copy+0x84>
			printf("sd operation: >> Opening a file failed\n\r");
    5334:	485a      	ldr	r0, [pc, #360]	; (54a0 <sd_card_to_nvm_copy+0x27c>)
    5336:	4b44      	ldr	r3, [pc, #272]	; (5448 <sd_card_to_nvm_copy+0x224>)
    5338:	4798      	blx	r3
    533a:	2001      	movs	r0, #1
	else
	{
		printf("sd operation: >> NEW FIRMWARE WRITE FAILED\n\r");
		return 1;
	}
}
    533c:	b003      	add	sp, #12
    533e:	bc3c      	pop	{r2, r3, r4, r5}
    5340:	4690      	mov	r8, r2
    5342:	4699      	mov	r9, r3
    5344:	46a2      	mov	sl, r4
    5346:	46ab      	mov	fp, r5
    5348:	bdf0      	pop	{r4, r5, r6, r7, pc}
					crc32_recalculate(page_buffer,NVMCTRL_PAGE_SIZE,&crc_mem);
    534a:	4a56      	ldr	r2, [pc, #344]	; (54a4 <sd_card_to_nvm_copy+0x280>)
    534c:	2140      	movs	r1, #64	; 0x40
    534e:	4856      	ldr	r0, [pc, #344]	; (54a8 <sd_card_to_nvm_copy+0x284>)
    5350:	4b56      	ldr	r3, [pc, #344]	; (54ac <sd_card_to_nvm_copy+0x288>)
    5352:	4798      	blx	r3
					error_code = nvm_write_buffer(APP_START_ADDRESS+(j*NVMCTRL_PAGE_SIZE),page_buffer,bytes_read);
    5354:	01ac      	lsls	r4, r5, #6
    5356:	239c      	movs	r3, #156	; 0x9c
    5358:	021b      	lsls	r3, r3, #8
    535a:	469c      	mov	ip, r3
    535c:	4464      	add	r4, ip
    535e:	4f54      	ldr	r7, [pc, #336]	; (54b0 <sd_card_to_nvm_copy+0x28c>)
    5360:	4e44      	ldr	r6, [pc, #272]	; (5474 <sd_card_to_nvm_copy+0x250>)
    5362:	466b      	mov	r3, sp
    5364:	881a      	ldrh	r2, [r3, #0]
    5366:	4950      	ldr	r1, [pc, #320]	; (54a8 <sd_card_to_nvm_copy+0x284>)
    5368:	0020      	movs	r0, r4
    536a:	47b8      	blx	r7
    536c:	7030      	strb	r0, [r6, #0]
				} while (error_code == STATUS_BUSY);
    536e:	2805      	cmp	r0, #5
    5370:	d0f7      	beq.n	5362 <sd_card_to_nvm_copy+0x13e>
		for(uint16_t j=0;j<num_pages;j++)
    5372:	3501      	adds	r5, #1
    5374:	b2ad      	uxth	r5, r5
    5376:	002c      	movs	r4, r5
    5378:	45a8      	cmp	r8, r5
    537a:	d913      	bls.n	53a4 <sd_card_to_nvm_copy+0x180>
				f_read(&file_object,page_buffer,NVMCTRL_PAGE_SIZE,&bytes_read);
    537c:	466b      	mov	r3, sp
    537e:	2240      	movs	r2, #64	; 0x40
    5380:	4949      	ldr	r1, [pc, #292]	; (54a8 <sd_card_to_nvm_copy+0x284>)
    5382:	4833      	ldr	r0, [pc, #204]	; (5450 <sd_card_to_nvm_copy+0x22c>)
    5384:	47d8      	blx	fp
				if((j==(num_pages-1)) && off_set!=0)
    5386:	2301      	movs	r3, #1
    5388:	425b      	negs	r3, r3
    538a:	4443      	add	r3, r8
    538c:	4699      	mov	r9, r3
    538e:	42a3      	cmp	r3, r4
    5390:	d1db      	bne.n	534a <sd_card_to_nvm_copy+0x126>
    5392:	4653      	mov	r3, sl
    5394:	2b00      	cmp	r3, #0
    5396:	d0d8      	beq.n	534a <sd_card_to_nvm_copy+0x126>
					crc32_recalculate(page_buffer,off_set,&crc_mem);
    5398:	4a42      	ldr	r2, [pc, #264]	; (54a4 <sd_card_to_nvm_copy+0x280>)
    539a:	4651      	mov	r1, sl
    539c:	4842      	ldr	r0, [pc, #264]	; (54a8 <sd_card_to_nvm_copy+0x284>)
    539e:	4b43      	ldr	r3, [pc, #268]	; (54ac <sd_card_to_nvm_copy+0x288>)
    53a0:	4798      	blx	r3
    53a2:	e7d7      	b.n	5354 <sd_card_to_nvm_copy+0x130>
    53a4:	2300      	movs	r3, #0
    53a6:	469b      	mov	fp, r3
    53a8:	2700      	movs	r7, #0
					error_code = nvm_read_buffer(APP_START_ADDRESS+(k*NVMCTRL_PAGE_SIZE),page_buffer1,NVMCTRL_PAGE_SIZE);	
    53aa:	4e31      	ldr	r6, [pc, #196]	; (5470 <sd_card_to_nvm_copy+0x24c>)
    53ac:	4d31      	ldr	r5, [pc, #196]	; (5474 <sd_card_to_nvm_copy+0x250>)
    53ae:	e009      	b.n	53c4 <sd_card_to_nvm_copy+0x1a0>
					crc32_recalculate(page_buffer1,NVMCTRL_PAGE_SIZE,&crc_mem1);
    53b0:	4a40      	ldr	r2, [pc, #256]	; (54b4 <sd_card_to_nvm_copy+0x290>)
    53b2:	2140      	movs	r1, #64	; 0x40
    53b4:	4840      	ldr	r0, [pc, #256]	; (54b8 <sd_card_to_nvm_copy+0x294>)
    53b6:	4b3d      	ldr	r3, [pc, #244]	; (54ac <sd_card_to_nvm_copy+0x288>)
    53b8:	4798      	blx	r3
		for(uint16_t k=0;k<num_pages;k++)
    53ba:	3701      	adds	r7, #1
    53bc:	b2bf      	uxth	r7, r7
    53be:	46bb      	mov	fp, r7
    53c0:	45b8      	cmp	r8, r7
    53c2:	d916      	bls.n	53f2 <sd_card_to_nvm_copy+0x1ce>
					error_code = nvm_read_buffer(APP_START_ADDRESS+(k*NVMCTRL_PAGE_SIZE),page_buffer1,NVMCTRL_PAGE_SIZE);	
    53c4:	01bc      	lsls	r4, r7, #6
    53c6:	239c      	movs	r3, #156	; 0x9c
    53c8:	021b      	lsls	r3, r3, #8
    53ca:	469c      	mov	ip, r3
    53cc:	4464      	add	r4, ip
    53ce:	2240      	movs	r2, #64	; 0x40
    53d0:	4939      	ldr	r1, [pc, #228]	; (54b8 <sd_card_to_nvm_copy+0x294>)
    53d2:	0020      	movs	r0, r4
    53d4:	47b0      	blx	r6
    53d6:	7028      	strb	r0, [r5, #0]
				} while (error_code == STATUS_BUSY);
    53d8:	2805      	cmp	r0, #5
    53da:	d0f8      	beq.n	53ce <sd_card_to_nvm_copy+0x1aa>
				if((k==(num_pages-1)) && off_set!=0)
    53dc:	45d9      	cmp	r9, fp
    53de:	d1e7      	bne.n	53b0 <sd_card_to_nvm_copy+0x18c>
    53e0:	4653      	mov	r3, sl
    53e2:	2b00      	cmp	r3, #0
    53e4:	d0e4      	beq.n	53b0 <sd_card_to_nvm_copy+0x18c>
					crc32_recalculate(page_buffer1,off_set,&crc_mem1);
    53e6:	4a33      	ldr	r2, [pc, #204]	; (54b4 <sd_card_to_nvm_copy+0x290>)
    53e8:	4651      	mov	r1, sl
    53ea:	4833      	ldr	r0, [pc, #204]	; (54b8 <sd_card_to_nvm_copy+0x294>)
    53ec:	4b2f      	ldr	r3, [pc, #188]	; (54ac <sd_card_to_nvm_copy+0x288>)
    53ee:	4798      	blx	r3
    53f0:	e7e3      	b.n	53ba <sd_card_to_nvm_copy+0x196>
	f_close(&file_object);
    53f2:	4817      	ldr	r0, [pc, #92]	; (5450 <sd_card_to_nvm_copy+0x22c>)
    53f4:	4b1b      	ldr	r3, [pc, #108]	; (5464 <sd_card_to_nvm_copy+0x240>)
    53f6:	4798      	blx	r3
	if(crc_mem == crc_mem1)
    53f8:	4b2a      	ldr	r3, [pc, #168]	; (54a4 <sd_card_to_nvm_copy+0x280>)
    53fa:	681a      	ldr	r2, [r3, #0]
    53fc:	4b2d      	ldr	r3, [pc, #180]	; (54b4 <sd_card_to_nvm_copy+0x290>)
    53fe:	681b      	ldr	r3, [r3, #0]
    5400:	429a      	cmp	r2, r3
    5402:	d003      	beq.n	540c <sd_card_to_nvm_copy+0x1e8>
		printf("sd operation: >> NEW FIRMWARE WRITE FAILED\n\r");
    5404:	482d      	ldr	r0, [pc, #180]	; (54bc <sd_card_to_nvm_copy+0x298>)
    5406:	4b10      	ldr	r3, [pc, #64]	; (5448 <sd_card_to_nvm_copy+0x224>)
    5408:	4798      	blx	r3
		return 1;
    540a:	e796      	b.n	533a <sd_card_to_nvm_copy+0x116>
			error_code = nvm_erase_row(VERSION_ADDRESS);
    540c:	269a      	movs	r6, #154	; 0x9a
    540e:	0236      	lsls	r6, r6, #8
    5410:	4d1f      	ldr	r5, [pc, #124]	; (5490 <sd_card_to_nvm_copy+0x26c>)
    5412:	4c18      	ldr	r4, [pc, #96]	; (5474 <sd_card_to_nvm_copy+0x250>)
    5414:	0030      	movs	r0, r6
    5416:	47a8      	blx	r5
    5418:	7020      	strb	r0, [r4, #0]
		} while (error_code == STATUS_BUSY);		
    541a:	2805      	cmp	r0, #5
    541c:	d0fa      	beq.n	5414 <sd_card_to_nvm_copy+0x1f0>
			error_code = nvm_write_buffer(VERSION_ADDRESS,&sd_version_num1,1);
    541e:	4d24      	ldr	r5, [pc, #144]	; (54b0 <sd_card_to_nvm_copy+0x28c>)
    5420:	4c14      	ldr	r4, [pc, #80]	; (5474 <sd_card_to_nvm_copy+0x250>)
    5422:	2201      	movs	r2, #1
    5424:	466b      	mov	r3, sp
    5426:	1dd9      	adds	r1, r3, #7
    5428:	209a      	movs	r0, #154	; 0x9a
    542a:	0200      	lsls	r0, r0, #8
    542c:	47a8      	blx	r5
    542e:	7020      	strb	r0, [r4, #0]
		} while (error_code == STATUS_BUSY);
    5430:	2805      	cmp	r0, #5
    5432:	d0f6      	beq.n	5422 <sd_card_to_nvm_copy+0x1fe>
		printf("sd operation: >> NEW FIRMWARE VERSION UPDATED \n\r");		
    5434:	4822      	ldr	r0, [pc, #136]	; (54c0 <sd_card_to_nvm_copy+0x29c>)
    5436:	4c04      	ldr	r4, [pc, #16]	; (5448 <sd_card_to_nvm_copy+0x224>)
    5438:	47a0      	blx	r4
		printf("sd operation: >> NEW FIRMWARE WRITTEN SUCCESSFULLY \n\r");
    543a:	4822      	ldr	r0, [pc, #136]	; (54c4 <sd_card_to_nvm_copy+0x2a0>)
    543c:	47a0      	blx	r4
		jump_to_app();
    543e:	4b17      	ldr	r3, [pc, #92]	; (549c <sd_card_to_nvm_copy+0x278>)
    5440:	4798      	blx	r3
}
    5442:	e77b      	b.n	533c <sd_card_to_nvm_copy+0x118>
    5444:	000077c0 	.word	0x000077c0
    5448:	00005af1 	.word	0x00005af1
    544c:	20000020 	.word	0x20000020
    5450:	20000574 	.word	0x20000574
    5454:	00004b79 	.word	0x00004b79
    5458:	2000066c 	.word	0x2000066c
    545c:	20000678 	.word	0x20000678
    5460:	00004f59 	.word	0x00004f59
    5464:	00004f41 	.word	0x00004f41
    5468:	00005a8d 	.word	0x00005a8d
    546c:	20000628 	.word	0x20000628
    5470:	000017e5 	.word	0x000017e5
    5474:	200006cd 	.word	0x200006cd
    5478:	000077ec 	.word	0x000077ec
    547c:	000077fc 	.word	0x000077fc
    5480:	0000780c 	.word	0x0000780c
    5484:	20000010 	.word	0x20000010
    5488:	000078a4 	.word	0x000078a4
    548c:	000078cc 	.word	0x000078cc
    5490:	00001851 	.word	0x00001851
    5494:	00004d01 	.word	0x00004d01
    5498:	00007850 	.word	0x00007850
    549c:	000051f9 	.word	0x000051f9
    54a0:	00007878 	.word	0x00007878
    54a4:	200006d4 	.word	0x200006d4
    54a8:	2000067c 	.word	0x2000067c
    54ac:	00001251 	.word	0x00001251
    54b0:	0000173d 	.word	0x0000173d
    54b4:	200006d0 	.word	0x200006d0
    54b8:	2000062c 	.word	0x2000062c
    54bc:	00007974 	.word	0x00007974
    54c0:	00007908 	.word	0x00007908
    54c4:	0000793c 	.word	0x0000793c

000054c8 <main>:
/////////////////////////////////////////////////////////////////////////////
///* ...... MAIN ........ *
////////////////////////////////////////////////////////////////////////////

int main(void)
{
    54c8:	b5f0      	push	{r4, r5, r6, r7, lr}
    54ca:	46c6      	mov	lr, r8
    54cc:	b500      	push	{lr}
    54ce:	b090      	sub	sp, #64	; 0x40
	/** INITIALIZATING THE BOARD AND PERIPHERALS */

	system_init();						/* Initialize the board. */	
    54d0:	4b6d      	ldr	r3, [pc, #436]	; (5688 <main+0x1c0>)
    54d2:	4798      	blx	r3
	config->data_order       = USART_DATAORDER_LSB;
    54d4:	2380      	movs	r3, #128	; 0x80
    54d6:	05db      	lsls	r3, r3, #23
    54d8:	9300      	str	r3, [sp, #0]
	config->transfer_mode    = USART_TRANSFER_ASYNCHRONOUSLY;
    54da:	2300      	movs	r3, #0
    54dc:	9301      	str	r3, [sp, #4]
	config->parity           = USART_PARITY_NONE;
    54de:	22ff      	movs	r2, #255	; 0xff
    54e0:	4669      	mov	r1, sp
    54e2:	810a      	strh	r2, [r1, #8]
	config->stopbits         = USART_STOPBITS_1;
    54e4:	2200      	movs	r2, #0
    54e6:	728b      	strb	r3, [r1, #10]
	config->character_size   = USART_CHARACTER_SIZE_8BIT;
    54e8:	72cb      	strb	r3, [r1, #11]
	config->receiver_enable  = true;
    54ea:	2401      	movs	r4, #1
    54ec:	2124      	movs	r1, #36	; 0x24
    54ee:	4668      	mov	r0, sp
    54f0:	5444      	strb	r4, [r0, r1]
	config->transmitter_enable = true;
    54f2:	3101      	adds	r1, #1
    54f4:	5444      	strb	r4, [r0, r1]
	config->clock_polarity_inverted = false;
    54f6:	3101      	adds	r1, #1
    54f8:	5443      	strb	r3, [r0, r1]
	config->use_external_clock = false;
    54fa:	3101      	adds	r1, #1
    54fc:	5443      	strb	r3, [r0, r1]
	config->ext_clock_freq   = 0;
    54fe:	930a      	str	r3, [sp, #40]	; 0x28
	config->run_in_standby   = false;
    5500:	3105      	adds	r1, #5
    5502:	5443      	strb	r3, [r0, r1]
	config->generator_source = GCLK_GENERATOR_0;
    5504:	3101      	adds	r1, #1
    5506:	5443      	strb	r3, [r0, r1]
	config->sample_adjustment     = USART_SAMPLE_ADJUSTMENT_7_8_9;
    5508:	9305      	str	r3, [sp, #20]
	config->sample_rate           = USART_SAMPLE_RATE_16X_ARITHMETIC;
    550a:	8203      	strh	r3, [r0, #16]
	config->lin_slave_enable      = false;
    550c:	76c3      	strb	r3, [r0, #27]
	config->immediate_buffer_overflow_notification  = false;
    550e:	7602      	strb	r2, [r0, #24]
	config->start_frame_detection_enable            = false;
    5510:	7702      	strb	r2, [r0, #28]
	config->encoding_format_enable                  = false;
    5512:	7642      	strb	r2, [r0, #25]
	config->receive_pulse_length                    = 19;
    5514:	2313      	movs	r3, #19
    5516:	7683      	strb	r3, [r0, #26]
	config->collision_detection_enable              = false;
    5518:	7742      	strb	r2, [r0, #29]
	usart_conf.mux_setting = EDBG_CDC_SERCOM_MUX_SETTING;
    551a:	23c4      	movs	r3, #196	; 0xc4
    551c:	039b      	lsls	r3, r3, #14
    551e:	9303      	str	r3, [sp, #12]
	usart_conf.pinmux_pad0 = EDBG_CDC_SERCOM_PINMUX_PAD0;
    5520:	2301      	movs	r3, #1
    5522:	425b      	negs	r3, r3
    5524:	930c      	str	r3, [sp, #48]	; 0x30
	usart_conf.pinmux_pad1 = EDBG_CDC_SERCOM_PINMUX_PAD1;
    5526:	930d      	str	r3, [sp, #52]	; 0x34
	usart_conf.pinmux_pad2 = EDBG_CDC_SERCOM_PINMUX_PAD2;
    5528:	4b58      	ldr	r3, [pc, #352]	; (568c <main+0x1c4>)
    552a:	930e      	str	r3, [sp, #56]	; 0x38
	usart_conf.pinmux_pad3 = EDBG_CDC_SERCOM_PINMUX_PAD3;
    552c:	4b58      	ldr	r3, [pc, #352]	; (5690 <main+0x1c8>)
    552e:	930f      	str	r3, [sp, #60]	; 0x3c
	usart_conf.baudrate    = 115200;
    5530:	23e1      	movs	r3, #225	; 0xe1
    5532:	025b      	lsls	r3, r3, #9
    5534:	9308      	str	r3, [sp, #32]
static inline void stdio_serial_init(
		struct usart_module *const module,
		usart_inst_t const hw,
		const struct usart_config *const config)
{
	stdio_base = (void *)module;
    5536:	4d57      	ldr	r5, [pc, #348]	; (5694 <main+0x1cc>)
    5538:	4b57      	ldr	r3, [pc, #348]	; (5698 <main+0x1d0>)
    553a:	601d      	str	r5, [r3, #0]
	ptr_put = (int (*)(void volatile*,char))&usart_serial_putchar;
    553c:	4a57      	ldr	r2, [pc, #348]	; (569c <main+0x1d4>)
    553e:	4b58      	ldr	r3, [pc, #352]	; (56a0 <main+0x1d8>)
    5540:	601a      	str	r2, [r3, #0]
	ptr_get = (void (*)(void volatile*,char*))&usart_serial_getchar;
    5542:	4a58      	ldr	r2, [pc, #352]	; (56a4 <main+0x1dc>)
    5544:	4b58      	ldr	r3, [pc, #352]	; (56a8 <main+0x1e0>)
    5546:	601a      	str	r2, [r3, #0]
	if (usart_init(module, hw, config) == STATUS_OK) {
    5548:	466a      	mov	r2, sp
    554a:	4958      	ldr	r1, [pc, #352]	; (56ac <main+0x1e4>)
    554c:	0028      	movs	r0, r5
    554e:	4b58      	ldr	r3, [pc, #352]	; (56b0 <main+0x1e8>)
    5550:	4798      	blx	r3

	usart_serial_init(module, hw, config);
# if defined(__GNUC__)
	// Specify that stdout and stdin should not be buffered.
	setbuf(stdout, NULL);
    5552:	4f58      	ldr	r7, [pc, #352]	; (56b4 <main+0x1ec>)
    5554:	683b      	ldr	r3, [r7, #0]
    5556:	6898      	ldr	r0, [r3, #8]
    5558:	2100      	movs	r1, #0
    555a:	4e57      	ldr	r6, [pc, #348]	; (56b8 <main+0x1f0>)
    555c:	47b0      	blx	r6
	setbuf(stdin, NULL);
    555e:	683b      	ldr	r3, [r7, #0]
    5560:	6858      	ldr	r0, [r3, #4]
    5562:	2100      	movs	r1, #0
    5564:	47b0      	blx	r6
	SercomUsart *const usart_hw = &(module->hw->USART);
    5566:	682e      	ldr	r6, [r5, #0]
	system_interrupt_enable(_sercom_get_interrupt_vector(module->hw));
    5568:	0030      	movs	r0, r6
    556a:	4b54      	ldr	r3, [pc, #336]	; (56bc <main+0x1f4>)
    556c:	4798      	blx	r3
	NVIC->ISER[0] = (uint32_t)(1 << ((uint32_t)vector & 0x0000001f));
    556e:	231f      	movs	r3, #31
    5570:	4018      	ands	r0, r3
    5572:	4084      	lsls	r4, r0
    5574:	4b52      	ldr	r3, [pc, #328]	; (56c0 <main+0x1f8>)
    5576:	601c      	str	r4, [r3, #0]
	SercomUsart *const usart_hw = &(module->hw->USART);
    5578:	682b      	ldr	r3, [r5, #0]
	return (usart_hw->SYNCBUSY.reg);
    557a:	69da      	ldr	r2, [r3, #28]
	while (usart_is_syncing(module)) {
    557c:	2a00      	cmp	r2, #0
    557e:	d1fc      	bne.n	557a <main+0xb2>
	usart_hw->CTRLA.reg |= SERCOM_USART_CTRLA_ENABLE;
    5580:	6833      	ldr	r3, [r6, #0]
    5582:	3202      	adds	r2, #2
    5584:	4313      	orrs	r3, r2
    5586:	6033      	str	r3, [r6, #0]
	configure_console();				/* Initialize the UART console. */
	
	printf(STRING_HEADER);
    5588:	484e      	ldr	r0, [pc, #312]	; (56c4 <main+0x1fc>)
    558a:	4c4f      	ldr	r4, [pc, #316]	; (56c8 <main+0x200>)
    558c:	47a0      	blx	r4
	delay_init();
    558e:	4b4f      	ldr	r3, [pc, #316]	; (56cc <main+0x204>)
    5590:	4798      	blx	r3
	
	printf("\r\nmain: Initializing Board and peripherals ...... \r\n\r\n");
    5592:	484f      	ldr	r0, [pc, #316]	; (56d0 <main+0x208>)
    5594:	47a0      	blx	r4
	sd_mmc_init();
    5596:	4b4f      	ldr	r3, [pc, #316]	; (56d4 <main+0x20c>)
    5598:	4798      	blx	r3
		printf("init_storage: please plug an SD/MMC card in slot...\r\n");
    559a:	484f      	ldr	r0, [pc, #316]	; (56d8 <main+0x210>)
    559c:	47a0      	blx	r4
			status = sd_mmc_test_unit_ready(0);
    559e:	4d4f      	ldr	r5, [pc, #316]	; (56dc <main+0x214>)
				printf("init_storage: SD Card install failed.\r\n");
    55a0:	4c49      	ldr	r4, [pc, #292]	; (56c8 <main+0x200>)
			status = sd_mmc_test_unit_ready(0);
    55a2:	2000      	movs	r0, #0
    55a4:	47a8      	blx	r5
			if (CTRL_FAIL == status) {
    55a6:	2801      	cmp	r0, #1
    55a8:	d109      	bne.n	55be <main+0xf6>
				printf("init_storage: SD Card install failed.\r\n");
    55aa:	484d      	ldr	r0, [pc, #308]	; (56e0 <main+0x218>)
    55ac:	47a0      	blx	r4
				printf("init_storage: try unplug and re-plug the card.\r\n");
    55ae:	484d      	ldr	r0, [pc, #308]	; (56e4 <main+0x21c>)
    55b0:	47a0      	blx	r4
				while (CTRL_NO_PRESENT != sd_mmc_check(0)) {
    55b2:	4e4d      	ldr	r6, [pc, #308]	; (56e8 <main+0x220>)
    55b4:	2000      	movs	r0, #0
    55b6:	47b0      	blx	r6
    55b8:	2802      	cmp	r0, #2
    55ba:	d1fb      	bne.n	55b4 <main+0xec>
    55bc:	e7f1      	b.n	55a2 <main+0xda>
		} while (CTRL_GOOD != status);
    55be:	2800      	cmp	r0, #0
    55c0:	d1ef      	bne.n	55a2 <main+0xda>
		printf("init_storage: mounting SD card...\r\n");
    55c2:	484a      	ldr	r0, [pc, #296]	; (56ec <main+0x224>)
    55c4:	4b40      	ldr	r3, [pc, #256]	; (56c8 <main+0x200>)
    55c6:	4798      	blx	r3
		memset(&fatfs, 0, sizeof(FATFS));
    55c8:	4c49      	ldr	r4, [pc, #292]	; (56f0 <main+0x228>)
    55ca:	228c      	movs	r2, #140	; 0x8c
    55cc:	0092      	lsls	r2, r2, #2
    55ce:	2100      	movs	r1, #0
    55d0:	0020      	movs	r0, r4
    55d2:	4b48      	ldr	r3, [pc, #288]	; (56f4 <main+0x22c>)
    55d4:	4798      	blx	r3
		res = f_mount(LUN_ID_SD_MMC_0_MEM, &fatfs);
    55d6:	0021      	movs	r1, r4
    55d8:	2000      	movs	r0, #0
    55da:	4b47      	ldr	r3, [pc, #284]	; (56f8 <main+0x230>)
    55dc:	4798      	blx	r3
		if (FR_INVALID_DRIVE == res) {
    55de:	280b      	cmp	r0, #11
    55e0:	d116      	bne.n	5610 <main+0x148>
			printf("init_storage: SD card mount failed! (res %d)\r\n", res);
    55e2:	210b      	movs	r1, #11
    55e4:	4845      	ldr	r0, [pc, #276]	; (56fc <main+0x234>)
    55e6:	4b46      	ldr	r3, [pc, #280]	; (5700 <main+0x238>)
    55e8:	4798      	blx	r3
	
	init_storage();							/* Initialize SD/MMC storage. */
	
	configure_extint_channel();				/*Initialize BUTTON 0 as an external interrupt*/
    55ea:	4b46      	ldr	r3, [pc, #280]	; (5704 <main+0x23c>)
    55ec:	4798      	blx	r3
	configure_extint_callbacks();
    55ee:	4b46      	ldr	r3, [pc, #280]	; (5708 <main+0x240>)
    55f0:	4798      	blx	r3

	configure_nvm();						/*Initialize NVM */
    55f2:	4b46      	ldr	r3, [pc, #280]	; (570c <main+0x244>)
    55f4:	4798      	blx	r3
	cpu_irq_enable();
    55f6:	2201      	movs	r2, #1
    55f8:	4b45      	ldr	r3, [pc, #276]	; (5710 <main+0x248>)
    55fa:	701a      	strb	r2, [r3, #0]
    55fc:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
    5600:	b662      	cpsie	i
	
	system_interrupt_enable_global();		

	printf("\n\rmain: >> Board and peripherals initialized\n\r");
    5602:	4844      	ldr	r0, [pc, #272]	; (5714 <main+0x24c>)
    5604:	4b3e      	ldr	r3, [pc, #248]	; (5700 <main+0x238>)
    5606:	4798      	blx	r3
	//////////////////////////////////////////////////////////////////////////////////
	/** ----------------BOOTLAODER CODE---------------------*/
	
	while(1)
	{
		printf("main: Selecting Bootmode (Press button to force boot) \n\r");
    5608:	4b3d      	ldr	r3, [pc, #244]	; (5700 <main+0x238>)
    560a:	4698      	mov	r8, r3
		delay_s(2);
    560c:	4f42      	ldr	r7, [pc, #264]	; (5718 <main+0x250>)
    560e:	e00d      	b.n	562c <main+0x164>
		printf("init_storage: SD card mount OK.\r\n");
    5610:	4842      	ldr	r0, [pc, #264]	; (571c <main+0x254>)
    5612:	4b2d      	ldr	r3, [pc, #180]	; (56c8 <main+0x200>)
    5614:	4798      	blx	r3
    5616:	e7e8      	b.n	55ea <main+0x122>
		if (check_boot_mode() == 1)
		{
			printf("main: >> APP present \n\r");
    5618:	4841      	ldr	r0, [pc, #260]	; (5720 <main+0x258>)
    561a:	4b39      	ldr	r3, [pc, #228]	; (5700 <main+0x238>)
    561c:	4798      	blx	r3
			jump_to_app();
    561e:	4b41      	ldr	r3, [pc, #260]	; (5724 <main+0x25c>)
    5620:	4798      	blx	r3
    5622:	e00c      	b.n	563e <main+0x176>
			
			otafu_flag = false;
		}

		// SD card operation
		if(sd_card_to_nvm_copy() != 1)		
    5624:	4b40      	ldr	r3, [pc, #256]	; (5728 <main+0x260>)
    5626:	4798      	blx	r3
    5628:	2801      	cmp	r0, #1
    562a:	d12a      	bne.n	5682 <main+0x1ba>
		printf("main: Selecting Bootmode (Press button to force boot) \n\r");
    562c:	483f      	ldr	r0, [pc, #252]	; (572c <main+0x264>)
    562e:	47c0      	blx	r8
		delay_s(2);
    5630:	20fa      	movs	r0, #250	; 0xfa
    5632:	00c0      	lsls	r0, r0, #3
    5634:	47b8      	blx	r7
		if (check_boot_mode() == 1)
    5636:	4b3e      	ldr	r3, [pc, #248]	; (5730 <main+0x268>)
    5638:	4798      	blx	r3
    563a:	2801      	cmp	r0, #1
    563c:	d0ec      	beq.n	5618 <main+0x150>
		if (otafu_flag == true)
    563e:	4b3d      	ldr	r3, [pc, #244]	; (5734 <main+0x26c>)
    5640:	781b      	ldrb	r3, [r3, #0]
    5642:	2b00      	cmp	r3, #0
    5644:	d0ee      	beq.n	5624 <main+0x15c>
			printf("main: OTA Firmware detected ..... \n\r");
    5646:	483c      	ldr	r0, [pc, #240]	; (5738 <main+0x270>)
    5648:	4b2d      	ldr	r3, [pc, #180]	; (5700 <main+0x238>)
    564a:	4798      	blx	r3
			nvm_otafu_flag = 255;
    564c:	22ff      	movs	r2, #255	; 0xff
    564e:	4b3b      	ldr	r3, [pc, #236]	; (573c <main+0x274>)
    5650:	701a      	strb	r2, [r3, #0]
				error_code = nvm_erase_row(OTAFU_ADDRESS);
    5652:	269b      	movs	r6, #155	; 0x9b
    5654:	0236      	lsls	r6, r6, #8
    5656:	4d3a      	ldr	r5, [pc, #232]	; (5740 <main+0x278>)
    5658:	4c3a      	ldr	r4, [pc, #232]	; (5744 <main+0x27c>)
    565a:	0030      	movs	r0, r6
    565c:	47a8      	blx	r5
    565e:	7020      	strb	r0, [r4, #0]
			} while (error_code == STATUS_BUSY);
    5660:	2805      	cmp	r0, #5
    5662:	d0fa      	beq.n	565a <main+0x192>
				error_code = nvm_write_buffer(OTAFU_ADDRESS,&nvm_otafu_flag,1);
    5664:	4c35      	ldr	r4, [pc, #212]	; (573c <main+0x274>)
    5666:	4d38      	ldr	r5, [pc, #224]	; (5748 <main+0x280>)
    5668:	4e36      	ldr	r6, [pc, #216]	; (5744 <main+0x27c>)
    566a:	2201      	movs	r2, #1
    566c:	0021      	movs	r1, r4
    566e:	209b      	movs	r0, #155	; 0x9b
    5670:	0200      	lsls	r0, r0, #8
    5672:	47a8      	blx	r5
    5674:	7030      	strb	r0, [r6, #0]
			} while (error_code == STATUS_BUSY);
    5676:	2805      	cmp	r0, #5
    5678:	d0f7      	beq.n	566a <main+0x1a2>
			otafu_flag = false;
    567a:	2200      	movs	r2, #0
    567c:	4b2d      	ldr	r3, [pc, #180]	; (5734 <main+0x26c>)
    567e:	701a      	strb	r2, [r3, #0]
    5680:	e7d0      	b.n	5624 <main+0x15c>
			jump_to_app();
    5682:	4b28      	ldr	r3, [pc, #160]	; (5724 <main+0x25c>)
    5684:	4798      	blx	r3
    5686:	e7d1      	b.n	562c <main+0x164>
    5688:	00003379 	.word	0x00003379
    568c:	002a0003 	.word	0x002a0003
    5690:	002b0003 	.word	0x002b0003
    5694:	20000310 	.word	0x20000310
    5698:	20000610 	.word	0x20000610
    569c:	00005079 	.word	0x00005079
    56a0:	2000060c 	.word	0x2000060c
    56a4:	0000504d 	.word	0x0000504d
    56a8:	20000608 	.word	0x20000608
    56ac:	42001800 	.word	0x42001800
    56b0:	00002691 	.word	0x00002691
    56b4:	20000030 	.word	0x20000030
    56b8:	00005bf9 	.word	0x00005bf9
    56bc:	00001ec1 	.word	0x00001ec1
    56c0:	e000e100 	.word	0xe000e100
    56c4:	00007588 	.word	0x00007588
    56c8:	00005be5 	.word	0x00005be5
    56cc:	000011e5 	.word	0x000011e5
    56d0:	000075d4 	.word	0x000075d4
    56d4:	00000239 	.word	0x00000239
    56d8:	0000760c 	.word	0x0000760c
    56dc:	0000096d 	.word	0x0000096d
    56e0:	00007644 	.word	0x00007644
    56e4:	0000766c 	.word	0x0000766c
    56e8:	00000259 	.word	0x00000259
    56ec:	0000769c 	.word	0x0000769c
    56f0:	20000344 	.word	0x20000344
    56f4:	00005ae1 	.word	0x00005ae1
    56f8:	00004b49 	.word	0x00004b49
    56fc:	000076c0 	.word	0x000076c0
    5700:	00005af1 	.word	0x00005af1
    5704:	00005091 	.word	0x00005091
    5708:	000050c1 	.word	0x000050c1
    570c:	000050e5 	.word	0x000050e5
    5710:	2000000c 	.word	0x2000000c
    5714:	00007714 	.word	0x00007714
    5718:	00001225 	.word	0x00001225
    571c:	000076f0 	.word	0x000076f0
    5720:	00007780 	.word	0x00007780
    5724:	000051f9 	.word	0x000051f9
    5728:	00005225 	.word	0x00005225
    572c:	00007744 	.word	0x00007744
    5730:	00005111 	.word	0x00005111
    5734:	200006bc 	.word	0x200006bc
    5738:	00007798 	.word	0x00007798
    573c:	200006cc 	.word	0x200006cc
    5740:	00001851 	.word	0x00001851
    5744:	200006cd 	.word	0x200006cd
    5748:	0000173d 	.word	0x0000173d

0000574c <__udivsi3>:
    574c:	2200      	movs	r2, #0
    574e:	0843      	lsrs	r3, r0, #1
    5750:	428b      	cmp	r3, r1
    5752:	d374      	bcc.n	583e <__udivsi3+0xf2>
    5754:	0903      	lsrs	r3, r0, #4
    5756:	428b      	cmp	r3, r1
    5758:	d35f      	bcc.n	581a <__udivsi3+0xce>
    575a:	0a03      	lsrs	r3, r0, #8
    575c:	428b      	cmp	r3, r1
    575e:	d344      	bcc.n	57ea <__udivsi3+0x9e>
    5760:	0b03      	lsrs	r3, r0, #12
    5762:	428b      	cmp	r3, r1
    5764:	d328      	bcc.n	57b8 <__udivsi3+0x6c>
    5766:	0c03      	lsrs	r3, r0, #16
    5768:	428b      	cmp	r3, r1
    576a:	d30d      	bcc.n	5788 <__udivsi3+0x3c>
    576c:	22ff      	movs	r2, #255	; 0xff
    576e:	0209      	lsls	r1, r1, #8
    5770:	ba12      	rev	r2, r2
    5772:	0c03      	lsrs	r3, r0, #16
    5774:	428b      	cmp	r3, r1
    5776:	d302      	bcc.n	577e <__udivsi3+0x32>
    5778:	1212      	asrs	r2, r2, #8
    577a:	0209      	lsls	r1, r1, #8
    577c:	d065      	beq.n	584a <__udivsi3+0xfe>
    577e:	0b03      	lsrs	r3, r0, #12
    5780:	428b      	cmp	r3, r1
    5782:	d319      	bcc.n	57b8 <__udivsi3+0x6c>
    5784:	e000      	b.n	5788 <__udivsi3+0x3c>
    5786:	0a09      	lsrs	r1, r1, #8
    5788:	0bc3      	lsrs	r3, r0, #15
    578a:	428b      	cmp	r3, r1
    578c:	d301      	bcc.n	5792 <__udivsi3+0x46>
    578e:	03cb      	lsls	r3, r1, #15
    5790:	1ac0      	subs	r0, r0, r3
    5792:	4152      	adcs	r2, r2
    5794:	0b83      	lsrs	r3, r0, #14
    5796:	428b      	cmp	r3, r1
    5798:	d301      	bcc.n	579e <__udivsi3+0x52>
    579a:	038b      	lsls	r3, r1, #14
    579c:	1ac0      	subs	r0, r0, r3
    579e:	4152      	adcs	r2, r2
    57a0:	0b43      	lsrs	r3, r0, #13
    57a2:	428b      	cmp	r3, r1
    57a4:	d301      	bcc.n	57aa <__udivsi3+0x5e>
    57a6:	034b      	lsls	r3, r1, #13
    57a8:	1ac0      	subs	r0, r0, r3
    57aa:	4152      	adcs	r2, r2
    57ac:	0b03      	lsrs	r3, r0, #12
    57ae:	428b      	cmp	r3, r1
    57b0:	d301      	bcc.n	57b6 <__udivsi3+0x6a>
    57b2:	030b      	lsls	r3, r1, #12
    57b4:	1ac0      	subs	r0, r0, r3
    57b6:	4152      	adcs	r2, r2
    57b8:	0ac3      	lsrs	r3, r0, #11
    57ba:	428b      	cmp	r3, r1
    57bc:	d301      	bcc.n	57c2 <__udivsi3+0x76>
    57be:	02cb      	lsls	r3, r1, #11
    57c0:	1ac0      	subs	r0, r0, r3
    57c2:	4152      	adcs	r2, r2
    57c4:	0a83      	lsrs	r3, r0, #10
    57c6:	428b      	cmp	r3, r1
    57c8:	d301      	bcc.n	57ce <__udivsi3+0x82>
    57ca:	028b      	lsls	r3, r1, #10
    57cc:	1ac0      	subs	r0, r0, r3
    57ce:	4152      	adcs	r2, r2
    57d0:	0a43      	lsrs	r3, r0, #9
    57d2:	428b      	cmp	r3, r1
    57d4:	d301      	bcc.n	57da <__udivsi3+0x8e>
    57d6:	024b      	lsls	r3, r1, #9
    57d8:	1ac0      	subs	r0, r0, r3
    57da:	4152      	adcs	r2, r2
    57dc:	0a03      	lsrs	r3, r0, #8
    57de:	428b      	cmp	r3, r1
    57e0:	d301      	bcc.n	57e6 <__udivsi3+0x9a>
    57e2:	020b      	lsls	r3, r1, #8
    57e4:	1ac0      	subs	r0, r0, r3
    57e6:	4152      	adcs	r2, r2
    57e8:	d2cd      	bcs.n	5786 <__udivsi3+0x3a>
    57ea:	09c3      	lsrs	r3, r0, #7
    57ec:	428b      	cmp	r3, r1
    57ee:	d301      	bcc.n	57f4 <__udivsi3+0xa8>
    57f0:	01cb      	lsls	r3, r1, #7
    57f2:	1ac0      	subs	r0, r0, r3
    57f4:	4152      	adcs	r2, r2
    57f6:	0983      	lsrs	r3, r0, #6
    57f8:	428b      	cmp	r3, r1
    57fa:	d301      	bcc.n	5800 <__udivsi3+0xb4>
    57fc:	018b      	lsls	r3, r1, #6
    57fe:	1ac0      	subs	r0, r0, r3
    5800:	4152      	adcs	r2, r2
    5802:	0943      	lsrs	r3, r0, #5
    5804:	428b      	cmp	r3, r1
    5806:	d301      	bcc.n	580c <__udivsi3+0xc0>
    5808:	014b      	lsls	r3, r1, #5
    580a:	1ac0      	subs	r0, r0, r3
    580c:	4152      	adcs	r2, r2
    580e:	0903      	lsrs	r3, r0, #4
    5810:	428b      	cmp	r3, r1
    5812:	d301      	bcc.n	5818 <__udivsi3+0xcc>
    5814:	010b      	lsls	r3, r1, #4
    5816:	1ac0      	subs	r0, r0, r3
    5818:	4152      	adcs	r2, r2
    581a:	08c3      	lsrs	r3, r0, #3
    581c:	428b      	cmp	r3, r1
    581e:	d301      	bcc.n	5824 <__udivsi3+0xd8>
    5820:	00cb      	lsls	r3, r1, #3
    5822:	1ac0      	subs	r0, r0, r3
    5824:	4152      	adcs	r2, r2
    5826:	0883      	lsrs	r3, r0, #2
    5828:	428b      	cmp	r3, r1
    582a:	d301      	bcc.n	5830 <__udivsi3+0xe4>
    582c:	008b      	lsls	r3, r1, #2
    582e:	1ac0      	subs	r0, r0, r3
    5830:	4152      	adcs	r2, r2
    5832:	0843      	lsrs	r3, r0, #1
    5834:	428b      	cmp	r3, r1
    5836:	d301      	bcc.n	583c <__udivsi3+0xf0>
    5838:	004b      	lsls	r3, r1, #1
    583a:	1ac0      	subs	r0, r0, r3
    583c:	4152      	adcs	r2, r2
    583e:	1a41      	subs	r1, r0, r1
    5840:	d200      	bcs.n	5844 <__udivsi3+0xf8>
    5842:	4601      	mov	r1, r0
    5844:	4152      	adcs	r2, r2
    5846:	4610      	mov	r0, r2
    5848:	4770      	bx	lr
    584a:	e7ff      	b.n	584c <__udivsi3+0x100>
    584c:	b501      	push	{r0, lr}
    584e:	2000      	movs	r0, #0
    5850:	f000 f8f0 	bl	5a34 <__aeabi_idiv0>
    5854:	bd02      	pop	{r1, pc}
    5856:	46c0      	nop			; (mov r8, r8)

00005858 <__aeabi_uidivmod>:
    5858:	2900      	cmp	r1, #0
    585a:	d0f7      	beq.n	584c <__udivsi3+0x100>
    585c:	e776      	b.n	574c <__udivsi3>
    585e:	4770      	bx	lr

00005860 <__divsi3>:
    5860:	4603      	mov	r3, r0
    5862:	430b      	orrs	r3, r1
    5864:	d47f      	bmi.n	5966 <__divsi3+0x106>
    5866:	2200      	movs	r2, #0
    5868:	0843      	lsrs	r3, r0, #1
    586a:	428b      	cmp	r3, r1
    586c:	d374      	bcc.n	5958 <__divsi3+0xf8>
    586e:	0903      	lsrs	r3, r0, #4
    5870:	428b      	cmp	r3, r1
    5872:	d35f      	bcc.n	5934 <__divsi3+0xd4>
    5874:	0a03      	lsrs	r3, r0, #8
    5876:	428b      	cmp	r3, r1
    5878:	d344      	bcc.n	5904 <__divsi3+0xa4>
    587a:	0b03      	lsrs	r3, r0, #12
    587c:	428b      	cmp	r3, r1
    587e:	d328      	bcc.n	58d2 <__divsi3+0x72>
    5880:	0c03      	lsrs	r3, r0, #16
    5882:	428b      	cmp	r3, r1
    5884:	d30d      	bcc.n	58a2 <__divsi3+0x42>
    5886:	22ff      	movs	r2, #255	; 0xff
    5888:	0209      	lsls	r1, r1, #8
    588a:	ba12      	rev	r2, r2
    588c:	0c03      	lsrs	r3, r0, #16
    588e:	428b      	cmp	r3, r1
    5890:	d302      	bcc.n	5898 <__divsi3+0x38>
    5892:	1212      	asrs	r2, r2, #8
    5894:	0209      	lsls	r1, r1, #8
    5896:	d065      	beq.n	5964 <__divsi3+0x104>
    5898:	0b03      	lsrs	r3, r0, #12
    589a:	428b      	cmp	r3, r1
    589c:	d319      	bcc.n	58d2 <__divsi3+0x72>
    589e:	e000      	b.n	58a2 <__divsi3+0x42>
    58a0:	0a09      	lsrs	r1, r1, #8
    58a2:	0bc3      	lsrs	r3, r0, #15
    58a4:	428b      	cmp	r3, r1
    58a6:	d301      	bcc.n	58ac <__divsi3+0x4c>
    58a8:	03cb      	lsls	r3, r1, #15
    58aa:	1ac0      	subs	r0, r0, r3
    58ac:	4152      	adcs	r2, r2
    58ae:	0b83      	lsrs	r3, r0, #14
    58b0:	428b      	cmp	r3, r1
    58b2:	d301      	bcc.n	58b8 <__divsi3+0x58>
    58b4:	038b      	lsls	r3, r1, #14
    58b6:	1ac0      	subs	r0, r0, r3
    58b8:	4152      	adcs	r2, r2
    58ba:	0b43      	lsrs	r3, r0, #13
    58bc:	428b      	cmp	r3, r1
    58be:	d301      	bcc.n	58c4 <__divsi3+0x64>
    58c0:	034b      	lsls	r3, r1, #13
    58c2:	1ac0      	subs	r0, r0, r3
    58c4:	4152      	adcs	r2, r2
    58c6:	0b03      	lsrs	r3, r0, #12
    58c8:	428b      	cmp	r3, r1
    58ca:	d301      	bcc.n	58d0 <__divsi3+0x70>
    58cc:	030b      	lsls	r3, r1, #12
    58ce:	1ac0      	subs	r0, r0, r3
    58d0:	4152      	adcs	r2, r2
    58d2:	0ac3      	lsrs	r3, r0, #11
    58d4:	428b      	cmp	r3, r1
    58d6:	d301      	bcc.n	58dc <__divsi3+0x7c>
    58d8:	02cb      	lsls	r3, r1, #11
    58da:	1ac0      	subs	r0, r0, r3
    58dc:	4152      	adcs	r2, r2
    58de:	0a83      	lsrs	r3, r0, #10
    58e0:	428b      	cmp	r3, r1
    58e2:	d301      	bcc.n	58e8 <__divsi3+0x88>
    58e4:	028b      	lsls	r3, r1, #10
    58e6:	1ac0      	subs	r0, r0, r3
    58e8:	4152      	adcs	r2, r2
    58ea:	0a43      	lsrs	r3, r0, #9
    58ec:	428b      	cmp	r3, r1
    58ee:	d301      	bcc.n	58f4 <__divsi3+0x94>
    58f0:	024b      	lsls	r3, r1, #9
    58f2:	1ac0      	subs	r0, r0, r3
    58f4:	4152      	adcs	r2, r2
    58f6:	0a03      	lsrs	r3, r0, #8
    58f8:	428b      	cmp	r3, r1
    58fa:	d301      	bcc.n	5900 <__divsi3+0xa0>
    58fc:	020b      	lsls	r3, r1, #8
    58fe:	1ac0      	subs	r0, r0, r3
    5900:	4152      	adcs	r2, r2
    5902:	d2cd      	bcs.n	58a0 <__divsi3+0x40>
    5904:	09c3      	lsrs	r3, r0, #7
    5906:	428b      	cmp	r3, r1
    5908:	d301      	bcc.n	590e <__divsi3+0xae>
    590a:	01cb      	lsls	r3, r1, #7
    590c:	1ac0      	subs	r0, r0, r3
    590e:	4152      	adcs	r2, r2
    5910:	0983      	lsrs	r3, r0, #6
    5912:	428b      	cmp	r3, r1
    5914:	d301      	bcc.n	591a <__divsi3+0xba>
    5916:	018b      	lsls	r3, r1, #6
    5918:	1ac0      	subs	r0, r0, r3
    591a:	4152      	adcs	r2, r2
    591c:	0943      	lsrs	r3, r0, #5
    591e:	428b      	cmp	r3, r1
    5920:	d301      	bcc.n	5926 <__divsi3+0xc6>
    5922:	014b      	lsls	r3, r1, #5
    5924:	1ac0      	subs	r0, r0, r3
    5926:	4152      	adcs	r2, r2
    5928:	0903      	lsrs	r3, r0, #4
    592a:	428b      	cmp	r3, r1
    592c:	d301      	bcc.n	5932 <__divsi3+0xd2>
    592e:	010b      	lsls	r3, r1, #4
    5930:	1ac0      	subs	r0, r0, r3
    5932:	4152      	adcs	r2, r2
    5934:	08c3      	lsrs	r3, r0, #3
    5936:	428b      	cmp	r3, r1
    5938:	d301      	bcc.n	593e <__divsi3+0xde>
    593a:	00cb      	lsls	r3, r1, #3
    593c:	1ac0      	subs	r0, r0, r3
    593e:	4152      	adcs	r2, r2
    5940:	0883      	lsrs	r3, r0, #2
    5942:	428b      	cmp	r3, r1
    5944:	d301      	bcc.n	594a <__divsi3+0xea>
    5946:	008b      	lsls	r3, r1, #2
    5948:	1ac0      	subs	r0, r0, r3
    594a:	4152      	adcs	r2, r2
    594c:	0843      	lsrs	r3, r0, #1
    594e:	428b      	cmp	r3, r1
    5950:	d301      	bcc.n	5956 <__divsi3+0xf6>
    5952:	004b      	lsls	r3, r1, #1
    5954:	1ac0      	subs	r0, r0, r3
    5956:	4152      	adcs	r2, r2
    5958:	1a41      	subs	r1, r0, r1
    595a:	d200      	bcs.n	595e <__divsi3+0xfe>
    595c:	4601      	mov	r1, r0
    595e:	4152      	adcs	r2, r2
    5960:	4610      	mov	r0, r2
    5962:	4770      	bx	lr
    5964:	e05d      	b.n	5a22 <__divsi3+0x1c2>
    5966:	0fca      	lsrs	r2, r1, #31
    5968:	d000      	beq.n	596c <__divsi3+0x10c>
    596a:	4249      	negs	r1, r1
    596c:	1003      	asrs	r3, r0, #32
    596e:	d300      	bcc.n	5972 <__divsi3+0x112>
    5970:	4240      	negs	r0, r0
    5972:	4053      	eors	r3, r2
    5974:	2200      	movs	r2, #0
    5976:	469c      	mov	ip, r3
    5978:	0903      	lsrs	r3, r0, #4
    597a:	428b      	cmp	r3, r1
    597c:	d32d      	bcc.n	59da <__divsi3+0x17a>
    597e:	0a03      	lsrs	r3, r0, #8
    5980:	428b      	cmp	r3, r1
    5982:	d312      	bcc.n	59aa <__divsi3+0x14a>
    5984:	22fc      	movs	r2, #252	; 0xfc
    5986:	0189      	lsls	r1, r1, #6
    5988:	ba12      	rev	r2, r2
    598a:	0a03      	lsrs	r3, r0, #8
    598c:	428b      	cmp	r3, r1
    598e:	d30c      	bcc.n	59aa <__divsi3+0x14a>
    5990:	0189      	lsls	r1, r1, #6
    5992:	1192      	asrs	r2, r2, #6
    5994:	428b      	cmp	r3, r1
    5996:	d308      	bcc.n	59aa <__divsi3+0x14a>
    5998:	0189      	lsls	r1, r1, #6
    599a:	1192      	asrs	r2, r2, #6
    599c:	428b      	cmp	r3, r1
    599e:	d304      	bcc.n	59aa <__divsi3+0x14a>
    59a0:	0189      	lsls	r1, r1, #6
    59a2:	d03a      	beq.n	5a1a <__divsi3+0x1ba>
    59a4:	1192      	asrs	r2, r2, #6
    59a6:	e000      	b.n	59aa <__divsi3+0x14a>
    59a8:	0989      	lsrs	r1, r1, #6
    59aa:	09c3      	lsrs	r3, r0, #7
    59ac:	428b      	cmp	r3, r1
    59ae:	d301      	bcc.n	59b4 <__divsi3+0x154>
    59b0:	01cb      	lsls	r3, r1, #7
    59b2:	1ac0      	subs	r0, r0, r3
    59b4:	4152      	adcs	r2, r2
    59b6:	0983      	lsrs	r3, r0, #6
    59b8:	428b      	cmp	r3, r1
    59ba:	d301      	bcc.n	59c0 <__divsi3+0x160>
    59bc:	018b      	lsls	r3, r1, #6
    59be:	1ac0      	subs	r0, r0, r3
    59c0:	4152      	adcs	r2, r2
    59c2:	0943      	lsrs	r3, r0, #5
    59c4:	428b      	cmp	r3, r1
    59c6:	d301      	bcc.n	59cc <__divsi3+0x16c>
    59c8:	014b      	lsls	r3, r1, #5
    59ca:	1ac0      	subs	r0, r0, r3
    59cc:	4152      	adcs	r2, r2
    59ce:	0903      	lsrs	r3, r0, #4
    59d0:	428b      	cmp	r3, r1
    59d2:	d301      	bcc.n	59d8 <__divsi3+0x178>
    59d4:	010b      	lsls	r3, r1, #4
    59d6:	1ac0      	subs	r0, r0, r3
    59d8:	4152      	adcs	r2, r2
    59da:	08c3      	lsrs	r3, r0, #3
    59dc:	428b      	cmp	r3, r1
    59de:	d301      	bcc.n	59e4 <__divsi3+0x184>
    59e0:	00cb      	lsls	r3, r1, #3
    59e2:	1ac0      	subs	r0, r0, r3
    59e4:	4152      	adcs	r2, r2
    59e6:	0883      	lsrs	r3, r0, #2
    59e8:	428b      	cmp	r3, r1
    59ea:	d301      	bcc.n	59f0 <__divsi3+0x190>
    59ec:	008b      	lsls	r3, r1, #2
    59ee:	1ac0      	subs	r0, r0, r3
    59f0:	4152      	adcs	r2, r2
    59f2:	d2d9      	bcs.n	59a8 <__divsi3+0x148>
    59f4:	0843      	lsrs	r3, r0, #1
    59f6:	428b      	cmp	r3, r1
    59f8:	d301      	bcc.n	59fe <__divsi3+0x19e>
    59fa:	004b      	lsls	r3, r1, #1
    59fc:	1ac0      	subs	r0, r0, r3
    59fe:	4152      	adcs	r2, r2
    5a00:	1a41      	subs	r1, r0, r1
    5a02:	d200      	bcs.n	5a06 <__divsi3+0x1a6>
    5a04:	4601      	mov	r1, r0
    5a06:	4663      	mov	r3, ip
    5a08:	4152      	adcs	r2, r2
    5a0a:	105b      	asrs	r3, r3, #1
    5a0c:	4610      	mov	r0, r2
    5a0e:	d301      	bcc.n	5a14 <__divsi3+0x1b4>
    5a10:	4240      	negs	r0, r0
    5a12:	2b00      	cmp	r3, #0
    5a14:	d500      	bpl.n	5a18 <__divsi3+0x1b8>
    5a16:	4249      	negs	r1, r1
    5a18:	4770      	bx	lr
    5a1a:	4663      	mov	r3, ip
    5a1c:	105b      	asrs	r3, r3, #1
    5a1e:	d300      	bcc.n	5a22 <__divsi3+0x1c2>
    5a20:	4240      	negs	r0, r0
    5a22:	b501      	push	{r0, lr}
    5a24:	2000      	movs	r0, #0
    5a26:	f000 f805 	bl	5a34 <__aeabi_idiv0>
    5a2a:	bd02      	pop	{r1, pc}

00005a2c <__aeabi_idivmod>:
    5a2c:	2900      	cmp	r1, #0
    5a2e:	d0f8      	beq.n	5a22 <__divsi3+0x1c2>
    5a30:	e716      	b.n	5860 <__divsi3>
    5a32:	4770      	bx	lr

00005a34 <__aeabi_idiv0>:
    5a34:	4770      	bx	lr
    5a36:	46c0      	nop			; (mov r8, r8)

00005a38 <__aeabi_lmul>:
    5a38:	b5f0      	push	{r4, r5, r6, r7, lr}
    5a3a:	46ce      	mov	lr, r9
    5a3c:	4647      	mov	r7, r8
    5a3e:	0415      	lsls	r5, r2, #16
    5a40:	0c2d      	lsrs	r5, r5, #16
    5a42:	002e      	movs	r6, r5
    5a44:	b580      	push	{r7, lr}
    5a46:	0407      	lsls	r7, r0, #16
    5a48:	0c14      	lsrs	r4, r2, #16
    5a4a:	0c3f      	lsrs	r7, r7, #16
    5a4c:	4699      	mov	r9, r3
    5a4e:	0c03      	lsrs	r3, r0, #16
    5a50:	437e      	muls	r6, r7
    5a52:	435d      	muls	r5, r3
    5a54:	4367      	muls	r7, r4
    5a56:	4363      	muls	r3, r4
    5a58:	197f      	adds	r7, r7, r5
    5a5a:	0c34      	lsrs	r4, r6, #16
    5a5c:	19e4      	adds	r4, r4, r7
    5a5e:	469c      	mov	ip, r3
    5a60:	42a5      	cmp	r5, r4
    5a62:	d903      	bls.n	5a6c <__aeabi_lmul+0x34>
    5a64:	2380      	movs	r3, #128	; 0x80
    5a66:	025b      	lsls	r3, r3, #9
    5a68:	4698      	mov	r8, r3
    5a6a:	44c4      	add	ip, r8
    5a6c:	464b      	mov	r3, r9
    5a6e:	4351      	muls	r1, r2
    5a70:	4343      	muls	r3, r0
    5a72:	0436      	lsls	r6, r6, #16
    5a74:	0c36      	lsrs	r6, r6, #16
    5a76:	0c25      	lsrs	r5, r4, #16
    5a78:	0424      	lsls	r4, r4, #16
    5a7a:	4465      	add	r5, ip
    5a7c:	19a4      	adds	r4, r4, r6
    5a7e:	1859      	adds	r1, r3, r1
    5a80:	1949      	adds	r1, r1, r5
    5a82:	0020      	movs	r0, r4
    5a84:	bc0c      	pop	{r2, r3}
    5a86:	4690      	mov	r8, r2
    5a88:	4699      	mov	r9, r3
    5a8a:	bdf0      	pop	{r4, r5, r6, r7, pc}

00005a8c <atoi>:
    5a8c:	b510      	push	{r4, lr}
    5a8e:	220a      	movs	r2, #10
    5a90:	2100      	movs	r1, #0
    5a92:	f000 f9ed 	bl	5e70 <strtol>
    5a96:	bd10      	pop	{r4, pc}

00005a98 <__libc_init_array>:
    5a98:	b570      	push	{r4, r5, r6, lr}
    5a9a:	2600      	movs	r6, #0
    5a9c:	4d0c      	ldr	r5, [pc, #48]	; (5ad0 <__libc_init_array+0x38>)
    5a9e:	4c0d      	ldr	r4, [pc, #52]	; (5ad4 <__libc_init_array+0x3c>)
    5aa0:	1b64      	subs	r4, r4, r5
    5aa2:	10a4      	asrs	r4, r4, #2
    5aa4:	42a6      	cmp	r6, r4
    5aa6:	d109      	bne.n	5abc <__libc_init_array+0x24>
    5aa8:	2600      	movs	r6, #0
    5aaa:	f002 f84d 	bl	7b48 <_init>
    5aae:	4d0a      	ldr	r5, [pc, #40]	; (5ad8 <__libc_init_array+0x40>)
    5ab0:	4c0a      	ldr	r4, [pc, #40]	; (5adc <__libc_init_array+0x44>)
    5ab2:	1b64      	subs	r4, r4, r5
    5ab4:	10a4      	asrs	r4, r4, #2
    5ab6:	42a6      	cmp	r6, r4
    5ab8:	d105      	bne.n	5ac6 <__libc_init_array+0x2e>
    5aba:	bd70      	pop	{r4, r5, r6, pc}
    5abc:	00b3      	lsls	r3, r6, #2
    5abe:	58eb      	ldr	r3, [r5, r3]
    5ac0:	4798      	blx	r3
    5ac2:	3601      	adds	r6, #1
    5ac4:	e7ee      	b.n	5aa4 <__libc_init_array+0xc>
    5ac6:	00b3      	lsls	r3, r6, #2
    5ac8:	58eb      	ldr	r3, [r5, r3]
    5aca:	4798      	blx	r3
    5acc:	3601      	adds	r6, #1
    5ace:	e7f2      	b.n	5ab6 <__libc_init_array+0x1e>
    5ad0:	00007b54 	.word	0x00007b54
    5ad4:	00007b54 	.word	0x00007b54
    5ad8:	00007b54 	.word	0x00007b54
    5adc:	00007b58 	.word	0x00007b58

00005ae0 <memset>:
    5ae0:	0003      	movs	r3, r0
    5ae2:	1882      	adds	r2, r0, r2
    5ae4:	4293      	cmp	r3, r2
    5ae6:	d100      	bne.n	5aea <memset+0xa>
    5ae8:	4770      	bx	lr
    5aea:	7019      	strb	r1, [r3, #0]
    5aec:	3301      	adds	r3, #1
    5aee:	e7f9      	b.n	5ae4 <memset+0x4>

00005af0 <iprintf>:
    5af0:	b40f      	push	{r0, r1, r2, r3}
    5af2:	4b0b      	ldr	r3, [pc, #44]	; (5b20 <iprintf+0x30>)
    5af4:	b513      	push	{r0, r1, r4, lr}
    5af6:	681c      	ldr	r4, [r3, #0]
    5af8:	2c00      	cmp	r4, #0
    5afa:	d005      	beq.n	5b08 <iprintf+0x18>
    5afc:	69a3      	ldr	r3, [r4, #24]
    5afe:	2b00      	cmp	r3, #0
    5b00:	d102      	bne.n	5b08 <iprintf+0x18>
    5b02:	0020      	movs	r0, r4
    5b04:	f000 fb8c 	bl	6220 <__sinit>
    5b08:	ab05      	add	r3, sp, #20
    5b0a:	9a04      	ldr	r2, [sp, #16]
    5b0c:	68a1      	ldr	r1, [r4, #8]
    5b0e:	0020      	movs	r0, r4
    5b10:	9301      	str	r3, [sp, #4]
    5b12:	f000 fd75 	bl	6600 <_vfiprintf_r>
    5b16:	bc16      	pop	{r1, r2, r4}
    5b18:	bc08      	pop	{r3}
    5b1a:	b004      	add	sp, #16
    5b1c:	4718      	bx	r3
    5b1e:	46c0      	nop			; (mov r8, r8)
    5b20:	20000030 	.word	0x20000030

00005b24 <_puts_r>:
    5b24:	b570      	push	{r4, r5, r6, lr}
    5b26:	0005      	movs	r5, r0
    5b28:	000e      	movs	r6, r1
    5b2a:	2800      	cmp	r0, #0
    5b2c:	d004      	beq.n	5b38 <_puts_r+0x14>
    5b2e:	6983      	ldr	r3, [r0, #24]
    5b30:	2b00      	cmp	r3, #0
    5b32:	d101      	bne.n	5b38 <_puts_r+0x14>
    5b34:	f000 fb74 	bl	6220 <__sinit>
    5b38:	69ab      	ldr	r3, [r5, #24]
    5b3a:	68ac      	ldr	r4, [r5, #8]
    5b3c:	2b00      	cmp	r3, #0
    5b3e:	d102      	bne.n	5b46 <_puts_r+0x22>
    5b40:	0028      	movs	r0, r5
    5b42:	f000 fb6d 	bl	6220 <__sinit>
    5b46:	4b24      	ldr	r3, [pc, #144]	; (5bd8 <_puts_r+0xb4>)
    5b48:	429c      	cmp	r4, r3
    5b4a:	d10f      	bne.n	5b6c <_puts_r+0x48>
    5b4c:	686c      	ldr	r4, [r5, #4]
    5b4e:	89a3      	ldrh	r3, [r4, #12]
    5b50:	071b      	lsls	r3, r3, #28
    5b52:	d502      	bpl.n	5b5a <_puts_r+0x36>
    5b54:	6923      	ldr	r3, [r4, #16]
    5b56:	2b00      	cmp	r3, #0
    5b58:	d120      	bne.n	5b9c <_puts_r+0x78>
    5b5a:	0021      	movs	r1, r4
    5b5c:	0028      	movs	r0, r5
    5b5e:	f000 f9f1 	bl	5f44 <__swsetup_r>
    5b62:	2800      	cmp	r0, #0
    5b64:	d01a      	beq.n	5b9c <_puts_r+0x78>
    5b66:	2001      	movs	r0, #1
    5b68:	4240      	negs	r0, r0
    5b6a:	bd70      	pop	{r4, r5, r6, pc}
    5b6c:	4b1b      	ldr	r3, [pc, #108]	; (5bdc <_puts_r+0xb8>)
    5b6e:	429c      	cmp	r4, r3
    5b70:	d101      	bne.n	5b76 <_puts_r+0x52>
    5b72:	68ac      	ldr	r4, [r5, #8]
    5b74:	e7eb      	b.n	5b4e <_puts_r+0x2a>
    5b76:	4b1a      	ldr	r3, [pc, #104]	; (5be0 <_puts_r+0xbc>)
    5b78:	429c      	cmp	r4, r3
    5b7a:	d1e8      	bne.n	5b4e <_puts_r+0x2a>
    5b7c:	68ec      	ldr	r4, [r5, #12]
    5b7e:	e7e6      	b.n	5b4e <_puts_r+0x2a>
    5b80:	3b01      	subs	r3, #1
    5b82:	3601      	adds	r6, #1
    5b84:	60a3      	str	r3, [r4, #8]
    5b86:	2b00      	cmp	r3, #0
    5b88:	da04      	bge.n	5b94 <_puts_r+0x70>
    5b8a:	69a2      	ldr	r2, [r4, #24]
    5b8c:	4293      	cmp	r3, r2
    5b8e:	db16      	blt.n	5bbe <_puts_r+0x9a>
    5b90:	290a      	cmp	r1, #10
    5b92:	d014      	beq.n	5bbe <_puts_r+0x9a>
    5b94:	6823      	ldr	r3, [r4, #0]
    5b96:	1c5a      	adds	r2, r3, #1
    5b98:	6022      	str	r2, [r4, #0]
    5b9a:	7019      	strb	r1, [r3, #0]
    5b9c:	7831      	ldrb	r1, [r6, #0]
    5b9e:	68a3      	ldr	r3, [r4, #8]
    5ba0:	2900      	cmp	r1, #0
    5ba2:	d1ed      	bne.n	5b80 <_puts_r+0x5c>
    5ba4:	3b01      	subs	r3, #1
    5ba6:	60a3      	str	r3, [r4, #8]
    5ba8:	2b00      	cmp	r3, #0
    5baa:	da0f      	bge.n	5bcc <_puts_r+0xa8>
    5bac:	0022      	movs	r2, r4
    5bae:	310a      	adds	r1, #10
    5bb0:	0028      	movs	r0, r5
    5bb2:	f000 f971 	bl	5e98 <__swbuf_r>
    5bb6:	1c43      	adds	r3, r0, #1
    5bb8:	d0d5      	beq.n	5b66 <_puts_r+0x42>
    5bba:	200a      	movs	r0, #10
    5bbc:	e7d5      	b.n	5b6a <_puts_r+0x46>
    5bbe:	0022      	movs	r2, r4
    5bc0:	0028      	movs	r0, r5
    5bc2:	f000 f969 	bl	5e98 <__swbuf_r>
    5bc6:	1c43      	adds	r3, r0, #1
    5bc8:	d1e8      	bne.n	5b9c <_puts_r+0x78>
    5bca:	e7cc      	b.n	5b66 <_puts_r+0x42>
    5bcc:	200a      	movs	r0, #10
    5bce:	6823      	ldr	r3, [r4, #0]
    5bd0:	1c5a      	adds	r2, r3, #1
    5bd2:	6022      	str	r2, [r4, #0]
    5bd4:	7018      	strb	r0, [r3, #0]
    5bd6:	e7c8      	b.n	5b6a <_puts_r+0x46>
    5bd8:	000079c8 	.word	0x000079c8
    5bdc:	000079e8 	.word	0x000079e8
    5be0:	000079a8 	.word	0x000079a8

00005be4 <puts>:
    5be4:	b510      	push	{r4, lr}
    5be6:	4b03      	ldr	r3, [pc, #12]	; (5bf4 <puts+0x10>)
    5be8:	0001      	movs	r1, r0
    5bea:	6818      	ldr	r0, [r3, #0]
    5bec:	f7ff ff9a 	bl	5b24 <_puts_r>
    5bf0:	bd10      	pop	{r4, pc}
    5bf2:	46c0      	nop			; (mov r8, r8)
    5bf4:	20000030 	.word	0x20000030

00005bf8 <setbuf>:
    5bf8:	424a      	negs	r2, r1
    5bfa:	414a      	adcs	r2, r1
    5bfc:	2380      	movs	r3, #128	; 0x80
    5bfe:	b510      	push	{r4, lr}
    5c00:	0052      	lsls	r2, r2, #1
    5c02:	00db      	lsls	r3, r3, #3
    5c04:	f000 f802 	bl	5c0c <setvbuf>
    5c08:	bd10      	pop	{r4, pc}
	...

00005c0c <setvbuf>:
    5c0c:	b5f0      	push	{r4, r5, r6, r7, lr}
    5c0e:	001d      	movs	r5, r3
    5c10:	4b4f      	ldr	r3, [pc, #316]	; (5d50 <setvbuf+0x144>)
    5c12:	b085      	sub	sp, #20
    5c14:	681e      	ldr	r6, [r3, #0]
    5c16:	0004      	movs	r4, r0
    5c18:	000f      	movs	r7, r1
    5c1a:	9200      	str	r2, [sp, #0]
    5c1c:	2e00      	cmp	r6, #0
    5c1e:	d005      	beq.n	5c2c <setvbuf+0x20>
    5c20:	69b3      	ldr	r3, [r6, #24]
    5c22:	2b00      	cmp	r3, #0
    5c24:	d102      	bne.n	5c2c <setvbuf+0x20>
    5c26:	0030      	movs	r0, r6
    5c28:	f000 fafa 	bl	6220 <__sinit>
    5c2c:	4b49      	ldr	r3, [pc, #292]	; (5d54 <setvbuf+0x148>)
    5c2e:	429c      	cmp	r4, r3
    5c30:	d150      	bne.n	5cd4 <setvbuf+0xc8>
    5c32:	6874      	ldr	r4, [r6, #4]
    5c34:	9b00      	ldr	r3, [sp, #0]
    5c36:	2b02      	cmp	r3, #2
    5c38:	d005      	beq.n	5c46 <setvbuf+0x3a>
    5c3a:	2b01      	cmp	r3, #1
    5c3c:	d900      	bls.n	5c40 <setvbuf+0x34>
    5c3e:	e084      	b.n	5d4a <setvbuf+0x13e>
    5c40:	2d00      	cmp	r5, #0
    5c42:	da00      	bge.n	5c46 <setvbuf+0x3a>
    5c44:	e081      	b.n	5d4a <setvbuf+0x13e>
    5c46:	0021      	movs	r1, r4
    5c48:	0030      	movs	r0, r6
    5c4a:	f000 fa7b 	bl	6144 <_fflush_r>
    5c4e:	6b61      	ldr	r1, [r4, #52]	; 0x34
    5c50:	2900      	cmp	r1, #0
    5c52:	d008      	beq.n	5c66 <setvbuf+0x5a>
    5c54:	0023      	movs	r3, r4
    5c56:	3344      	adds	r3, #68	; 0x44
    5c58:	4299      	cmp	r1, r3
    5c5a:	d002      	beq.n	5c62 <setvbuf+0x56>
    5c5c:	0030      	movs	r0, r6
    5c5e:	f000 fbff 	bl	6460 <_free_r>
    5c62:	2300      	movs	r3, #0
    5c64:	6363      	str	r3, [r4, #52]	; 0x34
    5c66:	2300      	movs	r3, #0
    5c68:	61a3      	str	r3, [r4, #24]
    5c6a:	6063      	str	r3, [r4, #4]
    5c6c:	89a3      	ldrh	r3, [r4, #12]
    5c6e:	061b      	lsls	r3, r3, #24
    5c70:	d503      	bpl.n	5c7a <setvbuf+0x6e>
    5c72:	6921      	ldr	r1, [r4, #16]
    5c74:	0030      	movs	r0, r6
    5c76:	f000 fbf3 	bl	6460 <_free_r>
    5c7a:	89a3      	ldrh	r3, [r4, #12]
    5c7c:	4a36      	ldr	r2, [pc, #216]	; (5d58 <setvbuf+0x14c>)
    5c7e:	4013      	ands	r3, r2
    5c80:	81a3      	strh	r3, [r4, #12]
    5c82:	9b00      	ldr	r3, [sp, #0]
    5c84:	2b02      	cmp	r3, #2
    5c86:	d05a      	beq.n	5d3e <setvbuf+0x132>
    5c88:	ab03      	add	r3, sp, #12
    5c8a:	aa02      	add	r2, sp, #8
    5c8c:	0021      	movs	r1, r4
    5c8e:	0030      	movs	r0, r6
    5c90:	f000 fb5e 	bl	6350 <__swhatbuf_r>
    5c94:	89a3      	ldrh	r3, [r4, #12]
    5c96:	4318      	orrs	r0, r3
    5c98:	81a0      	strh	r0, [r4, #12]
    5c9a:	2d00      	cmp	r5, #0
    5c9c:	d124      	bne.n	5ce8 <setvbuf+0xdc>
    5c9e:	9d02      	ldr	r5, [sp, #8]
    5ca0:	0028      	movs	r0, r5
    5ca2:	f000 fbc1 	bl	6428 <malloc>
    5ca6:	9501      	str	r5, [sp, #4]
    5ca8:	1e07      	subs	r7, r0, #0
    5caa:	d142      	bne.n	5d32 <setvbuf+0x126>
    5cac:	9b02      	ldr	r3, [sp, #8]
    5cae:	9301      	str	r3, [sp, #4]
    5cb0:	42ab      	cmp	r3, r5
    5cb2:	d139      	bne.n	5d28 <setvbuf+0x11c>
    5cb4:	2001      	movs	r0, #1
    5cb6:	4240      	negs	r0, r0
    5cb8:	2302      	movs	r3, #2
    5cba:	89a2      	ldrh	r2, [r4, #12]
    5cbc:	4313      	orrs	r3, r2
    5cbe:	81a3      	strh	r3, [r4, #12]
    5cc0:	2300      	movs	r3, #0
    5cc2:	60a3      	str	r3, [r4, #8]
    5cc4:	0023      	movs	r3, r4
    5cc6:	3347      	adds	r3, #71	; 0x47
    5cc8:	6023      	str	r3, [r4, #0]
    5cca:	6123      	str	r3, [r4, #16]
    5ccc:	2301      	movs	r3, #1
    5cce:	6163      	str	r3, [r4, #20]
    5cd0:	b005      	add	sp, #20
    5cd2:	bdf0      	pop	{r4, r5, r6, r7, pc}
    5cd4:	4b21      	ldr	r3, [pc, #132]	; (5d5c <setvbuf+0x150>)
    5cd6:	429c      	cmp	r4, r3
    5cd8:	d101      	bne.n	5cde <setvbuf+0xd2>
    5cda:	68b4      	ldr	r4, [r6, #8]
    5cdc:	e7aa      	b.n	5c34 <setvbuf+0x28>
    5cde:	4b20      	ldr	r3, [pc, #128]	; (5d60 <setvbuf+0x154>)
    5ce0:	429c      	cmp	r4, r3
    5ce2:	d1a7      	bne.n	5c34 <setvbuf+0x28>
    5ce4:	68f4      	ldr	r4, [r6, #12]
    5ce6:	e7a5      	b.n	5c34 <setvbuf+0x28>
    5ce8:	2f00      	cmp	r7, #0
    5cea:	d0d9      	beq.n	5ca0 <setvbuf+0x94>
    5cec:	69b3      	ldr	r3, [r6, #24]
    5cee:	2b00      	cmp	r3, #0
    5cf0:	d102      	bne.n	5cf8 <setvbuf+0xec>
    5cf2:	0030      	movs	r0, r6
    5cf4:	f000 fa94 	bl	6220 <__sinit>
    5cf8:	9b00      	ldr	r3, [sp, #0]
    5cfa:	2b01      	cmp	r3, #1
    5cfc:	d103      	bne.n	5d06 <setvbuf+0xfa>
    5cfe:	89a3      	ldrh	r3, [r4, #12]
    5d00:	9a00      	ldr	r2, [sp, #0]
    5d02:	431a      	orrs	r2, r3
    5d04:	81a2      	strh	r2, [r4, #12]
    5d06:	2008      	movs	r0, #8
    5d08:	89a3      	ldrh	r3, [r4, #12]
    5d0a:	6027      	str	r7, [r4, #0]
    5d0c:	6127      	str	r7, [r4, #16]
    5d0e:	6165      	str	r5, [r4, #20]
    5d10:	4018      	ands	r0, r3
    5d12:	d018      	beq.n	5d46 <setvbuf+0x13a>
    5d14:	2001      	movs	r0, #1
    5d16:	4018      	ands	r0, r3
    5d18:	2300      	movs	r3, #0
    5d1a:	4298      	cmp	r0, r3
    5d1c:	d011      	beq.n	5d42 <setvbuf+0x136>
    5d1e:	426d      	negs	r5, r5
    5d20:	60a3      	str	r3, [r4, #8]
    5d22:	61a5      	str	r5, [r4, #24]
    5d24:	0018      	movs	r0, r3
    5d26:	e7d3      	b.n	5cd0 <setvbuf+0xc4>
    5d28:	9801      	ldr	r0, [sp, #4]
    5d2a:	f000 fb7d 	bl	6428 <malloc>
    5d2e:	1e07      	subs	r7, r0, #0
    5d30:	d0c0      	beq.n	5cb4 <setvbuf+0xa8>
    5d32:	2380      	movs	r3, #128	; 0x80
    5d34:	89a2      	ldrh	r2, [r4, #12]
    5d36:	9d01      	ldr	r5, [sp, #4]
    5d38:	4313      	orrs	r3, r2
    5d3a:	81a3      	strh	r3, [r4, #12]
    5d3c:	e7d6      	b.n	5cec <setvbuf+0xe0>
    5d3e:	2000      	movs	r0, #0
    5d40:	e7ba      	b.n	5cb8 <setvbuf+0xac>
    5d42:	60a5      	str	r5, [r4, #8]
    5d44:	e7c4      	b.n	5cd0 <setvbuf+0xc4>
    5d46:	60a0      	str	r0, [r4, #8]
    5d48:	e7c2      	b.n	5cd0 <setvbuf+0xc4>
    5d4a:	2001      	movs	r0, #1
    5d4c:	4240      	negs	r0, r0
    5d4e:	e7bf      	b.n	5cd0 <setvbuf+0xc4>
    5d50:	20000030 	.word	0x20000030
    5d54:	000079c8 	.word	0x000079c8
    5d58:	fffff35c 	.word	0xfffff35c
    5d5c:	000079e8 	.word	0x000079e8
    5d60:	000079a8 	.word	0x000079a8

00005d64 <_strtol_l.isra.0>:
    5d64:	b5f0      	push	{r4, r5, r6, r7, lr}
    5d66:	001f      	movs	r7, r3
    5d68:	000e      	movs	r6, r1
    5d6a:	b087      	sub	sp, #28
    5d6c:	9005      	str	r0, [sp, #20]
    5d6e:	9103      	str	r1, [sp, #12]
    5d70:	9202      	str	r2, [sp, #8]
    5d72:	980c      	ldr	r0, [sp, #48]	; 0x30
    5d74:	7834      	ldrb	r4, [r6, #0]
    5d76:	f000 fae8 	bl	634a <__locale_ctype_ptr_l>
    5d7a:	2208      	movs	r2, #8
    5d7c:	1900      	adds	r0, r0, r4
    5d7e:	7843      	ldrb	r3, [r0, #1]
    5d80:	1c75      	adds	r5, r6, #1
    5d82:	4013      	ands	r3, r2
    5d84:	d10c      	bne.n	5da0 <_strtol_l.isra.0+0x3c>
    5d86:	2c2d      	cmp	r4, #45	; 0x2d
    5d88:	d10c      	bne.n	5da4 <_strtol_l.isra.0+0x40>
    5d8a:	3301      	adds	r3, #1
    5d8c:	782c      	ldrb	r4, [r5, #0]
    5d8e:	9301      	str	r3, [sp, #4]
    5d90:	1cb5      	adds	r5, r6, #2
    5d92:	2f00      	cmp	r7, #0
    5d94:	d00c      	beq.n	5db0 <_strtol_l.isra.0+0x4c>
    5d96:	2f10      	cmp	r7, #16
    5d98:	d114      	bne.n	5dc4 <_strtol_l.isra.0+0x60>
    5d9a:	2c30      	cmp	r4, #48	; 0x30
    5d9c:	d00a      	beq.n	5db4 <_strtol_l.isra.0+0x50>
    5d9e:	e011      	b.n	5dc4 <_strtol_l.isra.0+0x60>
    5da0:	002e      	movs	r6, r5
    5da2:	e7e6      	b.n	5d72 <_strtol_l.isra.0+0xe>
    5da4:	9301      	str	r3, [sp, #4]
    5da6:	2c2b      	cmp	r4, #43	; 0x2b
    5da8:	d1f3      	bne.n	5d92 <_strtol_l.isra.0+0x2e>
    5daa:	782c      	ldrb	r4, [r5, #0]
    5dac:	1cb5      	adds	r5, r6, #2
    5dae:	e7f0      	b.n	5d92 <_strtol_l.isra.0+0x2e>
    5db0:	2c30      	cmp	r4, #48	; 0x30
    5db2:	d12f      	bne.n	5e14 <_strtol_l.isra.0+0xb0>
    5db4:	2220      	movs	r2, #32
    5db6:	782b      	ldrb	r3, [r5, #0]
    5db8:	4393      	bics	r3, r2
    5dba:	2b58      	cmp	r3, #88	; 0x58
    5dbc:	d151      	bne.n	5e62 <_strtol_l.isra.0+0xfe>
    5dbe:	2710      	movs	r7, #16
    5dc0:	786c      	ldrb	r4, [r5, #1]
    5dc2:	3502      	adds	r5, #2
    5dc4:	9b01      	ldr	r3, [sp, #4]
    5dc6:	4a29      	ldr	r2, [pc, #164]	; (5e6c <_strtol_l.isra.0+0x108>)
    5dc8:	0039      	movs	r1, r7
    5dca:	189e      	adds	r6, r3, r2
    5dcc:	0030      	movs	r0, r6
    5dce:	f7ff fd43 	bl	5858 <__aeabi_uidivmod>
    5dd2:	0030      	movs	r0, r6
    5dd4:	9104      	str	r1, [sp, #16]
    5dd6:	0039      	movs	r1, r7
    5dd8:	f7ff fcb8 	bl	574c <__udivsi3>
    5ddc:	2101      	movs	r1, #1
    5dde:	2300      	movs	r3, #0
    5de0:	4249      	negs	r1, r1
    5de2:	0002      	movs	r2, r0
    5de4:	468c      	mov	ip, r1
    5de6:	0018      	movs	r0, r3
    5de8:	0021      	movs	r1, r4
    5dea:	3930      	subs	r1, #48	; 0x30
    5dec:	2909      	cmp	r1, #9
    5dee:	d813      	bhi.n	5e18 <_strtol_l.isra.0+0xb4>
    5df0:	000c      	movs	r4, r1
    5df2:	42a7      	cmp	r7, r4
    5df4:	dd1c      	ble.n	5e30 <_strtol_l.isra.0+0xcc>
    5df6:	1c59      	adds	r1, r3, #1
    5df8:	d009      	beq.n	5e0e <_strtol_l.isra.0+0xaa>
    5dfa:	4663      	mov	r3, ip
    5dfc:	4282      	cmp	r2, r0
    5dfe:	d306      	bcc.n	5e0e <_strtol_l.isra.0+0xaa>
    5e00:	d102      	bne.n	5e08 <_strtol_l.isra.0+0xa4>
    5e02:	9904      	ldr	r1, [sp, #16]
    5e04:	42a1      	cmp	r1, r4
    5e06:	db02      	blt.n	5e0e <_strtol_l.isra.0+0xaa>
    5e08:	2301      	movs	r3, #1
    5e0a:	4378      	muls	r0, r7
    5e0c:	1820      	adds	r0, r4, r0
    5e0e:	782c      	ldrb	r4, [r5, #0]
    5e10:	3501      	adds	r5, #1
    5e12:	e7e9      	b.n	5de8 <_strtol_l.isra.0+0x84>
    5e14:	270a      	movs	r7, #10
    5e16:	e7d5      	b.n	5dc4 <_strtol_l.isra.0+0x60>
    5e18:	0021      	movs	r1, r4
    5e1a:	3941      	subs	r1, #65	; 0x41
    5e1c:	2919      	cmp	r1, #25
    5e1e:	d801      	bhi.n	5e24 <_strtol_l.isra.0+0xc0>
    5e20:	3c37      	subs	r4, #55	; 0x37
    5e22:	e7e6      	b.n	5df2 <_strtol_l.isra.0+0x8e>
    5e24:	0021      	movs	r1, r4
    5e26:	3961      	subs	r1, #97	; 0x61
    5e28:	2919      	cmp	r1, #25
    5e2a:	d801      	bhi.n	5e30 <_strtol_l.isra.0+0xcc>
    5e2c:	3c57      	subs	r4, #87	; 0x57
    5e2e:	e7e0      	b.n	5df2 <_strtol_l.isra.0+0x8e>
    5e30:	1c5a      	adds	r2, r3, #1
    5e32:	d108      	bne.n	5e46 <_strtol_l.isra.0+0xe2>
    5e34:	9a05      	ldr	r2, [sp, #20]
    5e36:	3323      	adds	r3, #35	; 0x23
    5e38:	6013      	str	r3, [r2, #0]
    5e3a:	9b02      	ldr	r3, [sp, #8]
    5e3c:	0030      	movs	r0, r6
    5e3e:	2b00      	cmp	r3, #0
    5e40:	d10b      	bne.n	5e5a <_strtol_l.isra.0+0xf6>
    5e42:	b007      	add	sp, #28
    5e44:	bdf0      	pop	{r4, r5, r6, r7, pc}
    5e46:	9a01      	ldr	r2, [sp, #4]
    5e48:	2a00      	cmp	r2, #0
    5e4a:	d000      	beq.n	5e4e <_strtol_l.isra.0+0xea>
    5e4c:	4240      	negs	r0, r0
    5e4e:	9a02      	ldr	r2, [sp, #8]
    5e50:	2a00      	cmp	r2, #0
    5e52:	d0f6      	beq.n	5e42 <_strtol_l.isra.0+0xde>
    5e54:	9a03      	ldr	r2, [sp, #12]
    5e56:	2b00      	cmp	r3, #0
    5e58:	d000      	beq.n	5e5c <_strtol_l.isra.0+0xf8>
    5e5a:	1e6a      	subs	r2, r5, #1
    5e5c:	9b02      	ldr	r3, [sp, #8]
    5e5e:	601a      	str	r2, [r3, #0]
    5e60:	e7ef      	b.n	5e42 <_strtol_l.isra.0+0xde>
    5e62:	2430      	movs	r4, #48	; 0x30
    5e64:	2f00      	cmp	r7, #0
    5e66:	d1ad      	bne.n	5dc4 <_strtol_l.isra.0+0x60>
    5e68:	3708      	adds	r7, #8
    5e6a:	e7ab      	b.n	5dc4 <_strtol_l.isra.0+0x60>
    5e6c:	7fffffff 	.word	0x7fffffff

00005e70 <strtol>:
    5e70:	b537      	push	{r0, r1, r2, r4, r5, lr}
    5e72:	0013      	movs	r3, r2
    5e74:	4a06      	ldr	r2, [pc, #24]	; (5e90 <strtol+0x20>)
    5e76:	0005      	movs	r5, r0
    5e78:	6810      	ldr	r0, [r2, #0]
    5e7a:	6a04      	ldr	r4, [r0, #32]
    5e7c:	2c00      	cmp	r4, #0
    5e7e:	d100      	bne.n	5e82 <strtol+0x12>
    5e80:	4c04      	ldr	r4, [pc, #16]	; (5e94 <strtol+0x24>)
    5e82:	000a      	movs	r2, r1
    5e84:	9400      	str	r4, [sp, #0]
    5e86:	0029      	movs	r1, r5
    5e88:	f7ff ff6c 	bl	5d64 <_strtol_l.isra.0>
    5e8c:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}
    5e8e:	46c0      	nop			; (mov r8, r8)
    5e90:	20000030 	.word	0x20000030
    5e94:	20000094 	.word	0x20000094

00005e98 <__swbuf_r>:
    5e98:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    5e9a:	0005      	movs	r5, r0
    5e9c:	000e      	movs	r6, r1
    5e9e:	0014      	movs	r4, r2
    5ea0:	2800      	cmp	r0, #0
    5ea2:	d004      	beq.n	5eae <__swbuf_r+0x16>
    5ea4:	6983      	ldr	r3, [r0, #24]
    5ea6:	2b00      	cmp	r3, #0
    5ea8:	d101      	bne.n	5eae <__swbuf_r+0x16>
    5eaa:	f000 f9b9 	bl	6220 <__sinit>
    5eae:	4b22      	ldr	r3, [pc, #136]	; (5f38 <__swbuf_r+0xa0>)
    5eb0:	429c      	cmp	r4, r3
    5eb2:	d12d      	bne.n	5f10 <__swbuf_r+0x78>
    5eb4:	686c      	ldr	r4, [r5, #4]
    5eb6:	69a3      	ldr	r3, [r4, #24]
    5eb8:	60a3      	str	r3, [r4, #8]
    5eba:	89a3      	ldrh	r3, [r4, #12]
    5ebc:	071b      	lsls	r3, r3, #28
    5ebe:	d531      	bpl.n	5f24 <__swbuf_r+0x8c>
    5ec0:	6923      	ldr	r3, [r4, #16]
    5ec2:	2b00      	cmp	r3, #0
    5ec4:	d02e      	beq.n	5f24 <__swbuf_r+0x8c>
    5ec6:	6823      	ldr	r3, [r4, #0]
    5ec8:	6922      	ldr	r2, [r4, #16]
    5eca:	b2f7      	uxtb	r7, r6
    5ecc:	1a98      	subs	r0, r3, r2
    5ece:	6963      	ldr	r3, [r4, #20]
    5ed0:	b2f6      	uxtb	r6, r6
    5ed2:	4298      	cmp	r0, r3
    5ed4:	db05      	blt.n	5ee2 <__swbuf_r+0x4a>
    5ed6:	0021      	movs	r1, r4
    5ed8:	0028      	movs	r0, r5
    5eda:	f000 f933 	bl	6144 <_fflush_r>
    5ede:	2800      	cmp	r0, #0
    5ee0:	d126      	bne.n	5f30 <__swbuf_r+0x98>
    5ee2:	68a3      	ldr	r3, [r4, #8]
    5ee4:	3001      	adds	r0, #1
    5ee6:	3b01      	subs	r3, #1
    5ee8:	60a3      	str	r3, [r4, #8]
    5eea:	6823      	ldr	r3, [r4, #0]
    5eec:	1c5a      	adds	r2, r3, #1
    5eee:	6022      	str	r2, [r4, #0]
    5ef0:	701f      	strb	r7, [r3, #0]
    5ef2:	6963      	ldr	r3, [r4, #20]
    5ef4:	4298      	cmp	r0, r3
    5ef6:	d004      	beq.n	5f02 <__swbuf_r+0x6a>
    5ef8:	89a3      	ldrh	r3, [r4, #12]
    5efa:	07db      	lsls	r3, r3, #31
    5efc:	d51a      	bpl.n	5f34 <__swbuf_r+0x9c>
    5efe:	2e0a      	cmp	r6, #10
    5f00:	d118      	bne.n	5f34 <__swbuf_r+0x9c>
    5f02:	0021      	movs	r1, r4
    5f04:	0028      	movs	r0, r5
    5f06:	f000 f91d 	bl	6144 <_fflush_r>
    5f0a:	2800      	cmp	r0, #0
    5f0c:	d012      	beq.n	5f34 <__swbuf_r+0x9c>
    5f0e:	e00f      	b.n	5f30 <__swbuf_r+0x98>
    5f10:	4b0a      	ldr	r3, [pc, #40]	; (5f3c <__swbuf_r+0xa4>)
    5f12:	429c      	cmp	r4, r3
    5f14:	d101      	bne.n	5f1a <__swbuf_r+0x82>
    5f16:	68ac      	ldr	r4, [r5, #8]
    5f18:	e7cd      	b.n	5eb6 <__swbuf_r+0x1e>
    5f1a:	4b09      	ldr	r3, [pc, #36]	; (5f40 <__swbuf_r+0xa8>)
    5f1c:	429c      	cmp	r4, r3
    5f1e:	d1ca      	bne.n	5eb6 <__swbuf_r+0x1e>
    5f20:	68ec      	ldr	r4, [r5, #12]
    5f22:	e7c8      	b.n	5eb6 <__swbuf_r+0x1e>
    5f24:	0021      	movs	r1, r4
    5f26:	0028      	movs	r0, r5
    5f28:	f000 f80c 	bl	5f44 <__swsetup_r>
    5f2c:	2800      	cmp	r0, #0
    5f2e:	d0ca      	beq.n	5ec6 <__swbuf_r+0x2e>
    5f30:	2601      	movs	r6, #1
    5f32:	4276      	negs	r6, r6
    5f34:	0030      	movs	r0, r6
    5f36:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    5f38:	000079c8 	.word	0x000079c8
    5f3c:	000079e8 	.word	0x000079e8
    5f40:	000079a8 	.word	0x000079a8

00005f44 <__swsetup_r>:
    5f44:	4b36      	ldr	r3, [pc, #216]	; (6020 <__swsetup_r+0xdc>)
    5f46:	b570      	push	{r4, r5, r6, lr}
    5f48:	681d      	ldr	r5, [r3, #0]
    5f4a:	0006      	movs	r6, r0
    5f4c:	000c      	movs	r4, r1
    5f4e:	2d00      	cmp	r5, #0
    5f50:	d005      	beq.n	5f5e <__swsetup_r+0x1a>
    5f52:	69ab      	ldr	r3, [r5, #24]
    5f54:	2b00      	cmp	r3, #0
    5f56:	d102      	bne.n	5f5e <__swsetup_r+0x1a>
    5f58:	0028      	movs	r0, r5
    5f5a:	f000 f961 	bl	6220 <__sinit>
    5f5e:	4b31      	ldr	r3, [pc, #196]	; (6024 <__swsetup_r+0xe0>)
    5f60:	429c      	cmp	r4, r3
    5f62:	d10f      	bne.n	5f84 <__swsetup_r+0x40>
    5f64:	686c      	ldr	r4, [r5, #4]
    5f66:	230c      	movs	r3, #12
    5f68:	5ee2      	ldrsh	r2, [r4, r3]
    5f6a:	b293      	uxth	r3, r2
    5f6c:	0719      	lsls	r1, r3, #28
    5f6e:	d42d      	bmi.n	5fcc <__swsetup_r+0x88>
    5f70:	06d9      	lsls	r1, r3, #27
    5f72:	d411      	bmi.n	5f98 <__swsetup_r+0x54>
    5f74:	2309      	movs	r3, #9
    5f76:	2001      	movs	r0, #1
    5f78:	6033      	str	r3, [r6, #0]
    5f7a:	3337      	adds	r3, #55	; 0x37
    5f7c:	4313      	orrs	r3, r2
    5f7e:	81a3      	strh	r3, [r4, #12]
    5f80:	4240      	negs	r0, r0
    5f82:	bd70      	pop	{r4, r5, r6, pc}
    5f84:	4b28      	ldr	r3, [pc, #160]	; (6028 <__swsetup_r+0xe4>)
    5f86:	429c      	cmp	r4, r3
    5f88:	d101      	bne.n	5f8e <__swsetup_r+0x4a>
    5f8a:	68ac      	ldr	r4, [r5, #8]
    5f8c:	e7eb      	b.n	5f66 <__swsetup_r+0x22>
    5f8e:	4b27      	ldr	r3, [pc, #156]	; (602c <__swsetup_r+0xe8>)
    5f90:	429c      	cmp	r4, r3
    5f92:	d1e8      	bne.n	5f66 <__swsetup_r+0x22>
    5f94:	68ec      	ldr	r4, [r5, #12]
    5f96:	e7e6      	b.n	5f66 <__swsetup_r+0x22>
    5f98:	075b      	lsls	r3, r3, #29
    5f9a:	d513      	bpl.n	5fc4 <__swsetup_r+0x80>
    5f9c:	6b61      	ldr	r1, [r4, #52]	; 0x34
    5f9e:	2900      	cmp	r1, #0
    5fa0:	d008      	beq.n	5fb4 <__swsetup_r+0x70>
    5fa2:	0023      	movs	r3, r4
    5fa4:	3344      	adds	r3, #68	; 0x44
    5fa6:	4299      	cmp	r1, r3
    5fa8:	d002      	beq.n	5fb0 <__swsetup_r+0x6c>
    5faa:	0030      	movs	r0, r6
    5fac:	f000 fa58 	bl	6460 <_free_r>
    5fb0:	2300      	movs	r3, #0
    5fb2:	6363      	str	r3, [r4, #52]	; 0x34
    5fb4:	2224      	movs	r2, #36	; 0x24
    5fb6:	89a3      	ldrh	r3, [r4, #12]
    5fb8:	4393      	bics	r3, r2
    5fba:	81a3      	strh	r3, [r4, #12]
    5fbc:	2300      	movs	r3, #0
    5fbe:	6063      	str	r3, [r4, #4]
    5fc0:	6923      	ldr	r3, [r4, #16]
    5fc2:	6023      	str	r3, [r4, #0]
    5fc4:	2308      	movs	r3, #8
    5fc6:	89a2      	ldrh	r2, [r4, #12]
    5fc8:	4313      	orrs	r3, r2
    5fca:	81a3      	strh	r3, [r4, #12]
    5fcc:	6923      	ldr	r3, [r4, #16]
    5fce:	2b00      	cmp	r3, #0
    5fd0:	d10b      	bne.n	5fea <__swsetup_r+0xa6>
    5fd2:	21a0      	movs	r1, #160	; 0xa0
    5fd4:	2280      	movs	r2, #128	; 0x80
    5fd6:	89a3      	ldrh	r3, [r4, #12]
    5fd8:	0089      	lsls	r1, r1, #2
    5fda:	0092      	lsls	r2, r2, #2
    5fdc:	400b      	ands	r3, r1
    5fde:	4293      	cmp	r3, r2
    5fe0:	d003      	beq.n	5fea <__swsetup_r+0xa6>
    5fe2:	0021      	movs	r1, r4
    5fe4:	0030      	movs	r0, r6
    5fe6:	f000 f9db 	bl	63a0 <__smakebuf_r>
    5fea:	2301      	movs	r3, #1
    5fec:	89a2      	ldrh	r2, [r4, #12]
    5fee:	4013      	ands	r3, r2
    5ff0:	d011      	beq.n	6016 <__swsetup_r+0xd2>
    5ff2:	2300      	movs	r3, #0
    5ff4:	60a3      	str	r3, [r4, #8]
    5ff6:	6963      	ldr	r3, [r4, #20]
    5ff8:	425b      	negs	r3, r3
    5ffa:	61a3      	str	r3, [r4, #24]
    5ffc:	2000      	movs	r0, #0
    5ffe:	6923      	ldr	r3, [r4, #16]
    6000:	4283      	cmp	r3, r0
    6002:	d1be      	bne.n	5f82 <__swsetup_r+0x3e>
    6004:	230c      	movs	r3, #12
    6006:	5ee2      	ldrsh	r2, [r4, r3]
    6008:	0613      	lsls	r3, r2, #24
    600a:	d5ba      	bpl.n	5f82 <__swsetup_r+0x3e>
    600c:	2340      	movs	r3, #64	; 0x40
    600e:	4313      	orrs	r3, r2
    6010:	81a3      	strh	r3, [r4, #12]
    6012:	3801      	subs	r0, #1
    6014:	e7b5      	b.n	5f82 <__swsetup_r+0x3e>
    6016:	0792      	lsls	r2, r2, #30
    6018:	d400      	bmi.n	601c <__swsetup_r+0xd8>
    601a:	6963      	ldr	r3, [r4, #20]
    601c:	60a3      	str	r3, [r4, #8]
    601e:	e7ed      	b.n	5ffc <__swsetup_r+0xb8>
    6020:	20000030 	.word	0x20000030
    6024:	000079c8 	.word	0x000079c8
    6028:	000079e8 	.word	0x000079e8
    602c:	000079a8 	.word	0x000079a8

00006030 <__sflush_r>:
    6030:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    6032:	898a      	ldrh	r2, [r1, #12]
    6034:	0005      	movs	r5, r0
    6036:	000c      	movs	r4, r1
    6038:	0713      	lsls	r3, r2, #28
    603a:	d460      	bmi.n	60fe <__sflush_r+0xce>
    603c:	684b      	ldr	r3, [r1, #4]
    603e:	2b00      	cmp	r3, #0
    6040:	dc04      	bgt.n	604c <__sflush_r+0x1c>
    6042:	6c0b      	ldr	r3, [r1, #64]	; 0x40
    6044:	2b00      	cmp	r3, #0
    6046:	dc01      	bgt.n	604c <__sflush_r+0x1c>
    6048:	2000      	movs	r0, #0
    604a:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
    604c:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
    604e:	2f00      	cmp	r7, #0
    6050:	d0fa      	beq.n	6048 <__sflush_r+0x18>
    6052:	2300      	movs	r3, #0
    6054:	682e      	ldr	r6, [r5, #0]
    6056:	602b      	str	r3, [r5, #0]
    6058:	2380      	movs	r3, #128	; 0x80
    605a:	015b      	lsls	r3, r3, #5
    605c:	401a      	ands	r2, r3
    605e:	d034      	beq.n	60ca <__sflush_r+0x9a>
    6060:	6d60      	ldr	r0, [r4, #84]	; 0x54
    6062:	89a3      	ldrh	r3, [r4, #12]
    6064:	075b      	lsls	r3, r3, #29
    6066:	d506      	bpl.n	6076 <__sflush_r+0x46>
    6068:	6863      	ldr	r3, [r4, #4]
    606a:	1ac0      	subs	r0, r0, r3
    606c:	6b63      	ldr	r3, [r4, #52]	; 0x34
    606e:	2b00      	cmp	r3, #0
    6070:	d001      	beq.n	6076 <__sflush_r+0x46>
    6072:	6c23      	ldr	r3, [r4, #64]	; 0x40
    6074:	1ac0      	subs	r0, r0, r3
    6076:	0002      	movs	r2, r0
    6078:	6a21      	ldr	r1, [r4, #32]
    607a:	2300      	movs	r3, #0
    607c:	0028      	movs	r0, r5
    607e:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
    6080:	47b8      	blx	r7
    6082:	89a1      	ldrh	r1, [r4, #12]
    6084:	1c43      	adds	r3, r0, #1
    6086:	d106      	bne.n	6096 <__sflush_r+0x66>
    6088:	682b      	ldr	r3, [r5, #0]
    608a:	2b1d      	cmp	r3, #29
    608c:	d831      	bhi.n	60f2 <__sflush_r+0xc2>
    608e:	4a2c      	ldr	r2, [pc, #176]	; (6140 <__sflush_r+0x110>)
    6090:	40da      	lsrs	r2, r3
    6092:	07d3      	lsls	r3, r2, #31
    6094:	d52d      	bpl.n	60f2 <__sflush_r+0xc2>
    6096:	2300      	movs	r3, #0
    6098:	6063      	str	r3, [r4, #4]
    609a:	6923      	ldr	r3, [r4, #16]
    609c:	6023      	str	r3, [r4, #0]
    609e:	04cb      	lsls	r3, r1, #19
    60a0:	d505      	bpl.n	60ae <__sflush_r+0x7e>
    60a2:	1c43      	adds	r3, r0, #1
    60a4:	d102      	bne.n	60ac <__sflush_r+0x7c>
    60a6:	682b      	ldr	r3, [r5, #0]
    60a8:	2b00      	cmp	r3, #0
    60aa:	d100      	bne.n	60ae <__sflush_r+0x7e>
    60ac:	6560      	str	r0, [r4, #84]	; 0x54
    60ae:	6b61      	ldr	r1, [r4, #52]	; 0x34
    60b0:	602e      	str	r6, [r5, #0]
    60b2:	2900      	cmp	r1, #0
    60b4:	d0c8      	beq.n	6048 <__sflush_r+0x18>
    60b6:	0023      	movs	r3, r4
    60b8:	3344      	adds	r3, #68	; 0x44
    60ba:	4299      	cmp	r1, r3
    60bc:	d002      	beq.n	60c4 <__sflush_r+0x94>
    60be:	0028      	movs	r0, r5
    60c0:	f000 f9ce 	bl	6460 <_free_r>
    60c4:	2000      	movs	r0, #0
    60c6:	6360      	str	r0, [r4, #52]	; 0x34
    60c8:	e7bf      	b.n	604a <__sflush_r+0x1a>
    60ca:	2301      	movs	r3, #1
    60cc:	6a21      	ldr	r1, [r4, #32]
    60ce:	0028      	movs	r0, r5
    60d0:	47b8      	blx	r7
    60d2:	1c43      	adds	r3, r0, #1
    60d4:	d1c5      	bne.n	6062 <__sflush_r+0x32>
    60d6:	682b      	ldr	r3, [r5, #0]
    60d8:	2b00      	cmp	r3, #0
    60da:	d0c2      	beq.n	6062 <__sflush_r+0x32>
    60dc:	2b1d      	cmp	r3, #29
    60de:	d001      	beq.n	60e4 <__sflush_r+0xb4>
    60e0:	2b16      	cmp	r3, #22
    60e2:	d101      	bne.n	60e8 <__sflush_r+0xb8>
    60e4:	602e      	str	r6, [r5, #0]
    60e6:	e7af      	b.n	6048 <__sflush_r+0x18>
    60e8:	2340      	movs	r3, #64	; 0x40
    60ea:	89a2      	ldrh	r2, [r4, #12]
    60ec:	4313      	orrs	r3, r2
    60ee:	81a3      	strh	r3, [r4, #12]
    60f0:	e7ab      	b.n	604a <__sflush_r+0x1a>
    60f2:	2340      	movs	r3, #64	; 0x40
    60f4:	430b      	orrs	r3, r1
    60f6:	2001      	movs	r0, #1
    60f8:	81a3      	strh	r3, [r4, #12]
    60fa:	4240      	negs	r0, r0
    60fc:	e7a5      	b.n	604a <__sflush_r+0x1a>
    60fe:	690f      	ldr	r7, [r1, #16]
    6100:	2f00      	cmp	r7, #0
    6102:	d0a1      	beq.n	6048 <__sflush_r+0x18>
    6104:	680b      	ldr	r3, [r1, #0]
    6106:	600f      	str	r7, [r1, #0]
    6108:	1bdb      	subs	r3, r3, r7
    610a:	9301      	str	r3, [sp, #4]
    610c:	2300      	movs	r3, #0
    610e:	0792      	lsls	r2, r2, #30
    6110:	d100      	bne.n	6114 <__sflush_r+0xe4>
    6112:	694b      	ldr	r3, [r1, #20]
    6114:	60a3      	str	r3, [r4, #8]
    6116:	9b01      	ldr	r3, [sp, #4]
    6118:	2b00      	cmp	r3, #0
    611a:	dc00      	bgt.n	611e <__sflush_r+0xee>
    611c:	e794      	b.n	6048 <__sflush_r+0x18>
    611e:	9b01      	ldr	r3, [sp, #4]
    6120:	003a      	movs	r2, r7
    6122:	6a21      	ldr	r1, [r4, #32]
    6124:	0028      	movs	r0, r5
    6126:	6aa6      	ldr	r6, [r4, #40]	; 0x28
    6128:	47b0      	blx	r6
    612a:	2800      	cmp	r0, #0
    612c:	dc03      	bgt.n	6136 <__sflush_r+0x106>
    612e:	2340      	movs	r3, #64	; 0x40
    6130:	89a2      	ldrh	r2, [r4, #12]
    6132:	4313      	orrs	r3, r2
    6134:	e7df      	b.n	60f6 <__sflush_r+0xc6>
    6136:	9b01      	ldr	r3, [sp, #4]
    6138:	183f      	adds	r7, r7, r0
    613a:	1a1b      	subs	r3, r3, r0
    613c:	9301      	str	r3, [sp, #4]
    613e:	e7ea      	b.n	6116 <__sflush_r+0xe6>
    6140:	20400001 	.word	0x20400001

00006144 <_fflush_r>:
    6144:	690b      	ldr	r3, [r1, #16]
    6146:	b570      	push	{r4, r5, r6, lr}
    6148:	0005      	movs	r5, r0
    614a:	000c      	movs	r4, r1
    614c:	2b00      	cmp	r3, #0
    614e:	d101      	bne.n	6154 <_fflush_r+0x10>
    6150:	2000      	movs	r0, #0
    6152:	bd70      	pop	{r4, r5, r6, pc}
    6154:	2800      	cmp	r0, #0
    6156:	d004      	beq.n	6162 <_fflush_r+0x1e>
    6158:	6983      	ldr	r3, [r0, #24]
    615a:	2b00      	cmp	r3, #0
    615c:	d101      	bne.n	6162 <_fflush_r+0x1e>
    615e:	f000 f85f 	bl	6220 <__sinit>
    6162:	4b0b      	ldr	r3, [pc, #44]	; (6190 <_fflush_r+0x4c>)
    6164:	429c      	cmp	r4, r3
    6166:	d109      	bne.n	617c <_fflush_r+0x38>
    6168:	686c      	ldr	r4, [r5, #4]
    616a:	220c      	movs	r2, #12
    616c:	5ea3      	ldrsh	r3, [r4, r2]
    616e:	2b00      	cmp	r3, #0
    6170:	d0ee      	beq.n	6150 <_fflush_r+0xc>
    6172:	0021      	movs	r1, r4
    6174:	0028      	movs	r0, r5
    6176:	f7ff ff5b 	bl	6030 <__sflush_r>
    617a:	e7ea      	b.n	6152 <_fflush_r+0xe>
    617c:	4b05      	ldr	r3, [pc, #20]	; (6194 <_fflush_r+0x50>)
    617e:	429c      	cmp	r4, r3
    6180:	d101      	bne.n	6186 <_fflush_r+0x42>
    6182:	68ac      	ldr	r4, [r5, #8]
    6184:	e7f1      	b.n	616a <_fflush_r+0x26>
    6186:	4b04      	ldr	r3, [pc, #16]	; (6198 <_fflush_r+0x54>)
    6188:	429c      	cmp	r4, r3
    618a:	d1ee      	bne.n	616a <_fflush_r+0x26>
    618c:	68ec      	ldr	r4, [r5, #12]
    618e:	e7ec      	b.n	616a <_fflush_r+0x26>
    6190:	000079c8 	.word	0x000079c8
    6194:	000079e8 	.word	0x000079e8
    6198:	000079a8 	.word	0x000079a8

0000619c <_cleanup_r>:
    619c:	b510      	push	{r4, lr}
    619e:	4902      	ldr	r1, [pc, #8]	; (61a8 <_cleanup_r+0xc>)
    61a0:	f000 f8b2 	bl	6308 <_fwalk_reent>
    61a4:	bd10      	pop	{r4, pc}
    61a6:	46c0      	nop			; (mov r8, r8)
    61a8:	00006145 	.word	0x00006145

000061ac <std.isra.0>:
    61ac:	2300      	movs	r3, #0
    61ae:	b510      	push	{r4, lr}
    61b0:	0004      	movs	r4, r0
    61b2:	6003      	str	r3, [r0, #0]
    61b4:	6043      	str	r3, [r0, #4]
    61b6:	6083      	str	r3, [r0, #8]
    61b8:	8181      	strh	r1, [r0, #12]
    61ba:	6643      	str	r3, [r0, #100]	; 0x64
    61bc:	81c2      	strh	r2, [r0, #14]
    61be:	6103      	str	r3, [r0, #16]
    61c0:	6143      	str	r3, [r0, #20]
    61c2:	6183      	str	r3, [r0, #24]
    61c4:	0019      	movs	r1, r3
    61c6:	2208      	movs	r2, #8
    61c8:	305c      	adds	r0, #92	; 0x5c
    61ca:	f7ff fc89 	bl	5ae0 <memset>
    61ce:	4b05      	ldr	r3, [pc, #20]	; (61e4 <std.isra.0+0x38>)
    61d0:	6224      	str	r4, [r4, #32]
    61d2:	6263      	str	r3, [r4, #36]	; 0x24
    61d4:	4b04      	ldr	r3, [pc, #16]	; (61e8 <std.isra.0+0x3c>)
    61d6:	62a3      	str	r3, [r4, #40]	; 0x28
    61d8:	4b04      	ldr	r3, [pc, #16]	; (61ec <std.isra.0+0x40>)
    61da:	62e3      	str	r3, [r4, #44]	; 0x2c
    61dc:	4b04      	ldr	r3, [pc, #16]	; (61f0 <std.isra.0+0x44>)
    61de:	6323      	str	r3, [r4, #48]	; 0x30
    61e0:	bd10      	pop	{r4, pc}
    61e2:	46c0      	nop			; (mov r8, r8)
    61e4:	00006b6d 	.word	0x00006b6d
    61e8:	00006b95 	.word	0x00006b95
    61ec:	00006bcd 	.word	0x00006bcd
    61f0:	00006bf9 	.word	0x00006bf9

000061f4 <__sfmoreglue>:
    61f4:	b570      	push	{r4, r5, r6, lr}
    61f6:	2568      	movs	r5, #104	; 0x68
    61f8:	1e4a      	subs	r2, r1, #1
    61fa:	4355      	muls	r5, r2
    61fc:	000e      	movs	r6, r1
    61fe:	0029      	movs	r1, r5
    6200:	3174      	adds	r1, #116	; 0x74
    6202:	f000 f977 	bl	64f4 <_malloc_r>
    6206:	1e04      	subs	r4, r0, #0
    6208:	d008      	beq.n	621c <__sfmoreglue+0x28>
    620a:	2100      	movs	r1, #0
    620c:	002a      	movs	r2, r5
    620e:	6001      	str	r1, [r0, #0]
    6210:	6046      	str	r6, [r0, #4]
    6212:	300c      	adds	r0, #12
    6214:	60a0      	str	r0, [r4, #8]
    6216:	3268      	adds	r2, #104	; 0x68
    6218:	f7ff fc62 	bl	5ae0 <memset>
    621c:	0020      	movs	r0, r4
    621e:	bd70      	pop	{r4, r5, r6, pc}

00006220 <__sinit>:
    6220:	6983      	ldr	r3, [r0, #24]
    6222:	b513      	push	{r0, r1, r4, lr}
    6224:	0004      	movs	r4, r0
    6226:	2b00      	cmp	r3, #0
    6228:	d128      	bne.n	627c <__sinit+0x5c>
    622a:	6483      	str	r3, [r0, #72]	; 0x48
    622c:	64c3      	str	r3, [r0, #76]	; 0x4c
    622e:	6503      	str	r3, [r0, #80]	; 0x50
    6230:	4b13      	ldr	r3, [pc, #76]	; (6280 <__sinit+0x60>)
    6232:	4a14      	ldr	r2, [pc, #80]	; (6284 <__sinit+0x64>)
    6234:	681b      	ldr	r3, [r3, #0]
    6236:	6282      	str	r2, [r0, #40]	; 0x28
    6238:	9301      	str	r3, [sp, #4]
    623a:	4298      	cmp	r0, r3
    623c:	d101      	bne.n	6242 <__sinit+0x22>
    623e:	2301      	movs	r3, #1
    6240:	6183      	str	r3, [r0, #24]
    6242:	0020      	movs	r0, r4
    6244:	f000 f820 	bl	6288 <__sfp>
    6248:	6060      	str	r0, [r4, #4]
    624a:	0020      	movs	r0, r4
    624c:	f000 f81c 	bl	6288 <__sfp>
    6250:	60a0      	str	r0, [r4, #8]
    6252:	0020      	movs	r0, r4
    6254:	f000 f818 	bl	6288 <__sfp>
    6258:	2200      	movs	r2, #0
    625a:	60e0      	str	r0, [r4, #12]
    625c:	2104      	movs	r1, #4
    625e:	6860      	ldr	r0, [r4, #4]
    6260:	f7ff ffa4 	bl	61ac <std.isra.0>
    6264:	2201      	movs	r2, #1
    6266:	2109      	movs	r1, #9
    6268:	68a0      	ldr	r0, [r4, #8]
    626a:	f7ff ff9f 	bl	61ac <std.isra.0>
    626e:	2202      	movs	r2, #2
    6270:	2112      	movs	r1, #18
    6272:	68e0      	ldr	r0, [r4, #12]
    6274:	f7ff ff9a 	bl	61ac <std.isra.0>
    6278:	2301      	movs	r3, #1
    627a:	61a3      	str	r3, [r4, #24]
    627c:	bd13      	pop	{r0, r1, r4, pc}
    627e:	46c0      	nop			; (mov r8, r8)
    6280:	000079a4 	.word	0x000079a4
    6284:	0000619d 	.word	0x0000619d

00006288 <__sfp>:
    6288:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    628a:	4b1e      	ldr	r3, [pc, #120]	; (6304 <__sfp+0x7c>)
    628c:	0007      	movs	r7, r0
    628e:	681e      	ldr	r6, [r3, #0]
    6290:	69b3      	ldr	r3, [r6, #24]
    6292:	2b00      	cmp	r3, #0
    6294:	d102      	bne.n	629c <__sfp+0x14>
    6296:	0030      	movs	r0, r6
    6298:	f7ff ffc2 	bl	6220 <__sinit>
    629c:	3648      	adds	r6, #72	; 0x48
    629e:	68b4      	ldr	r4, [r6, #8]
    62a0:	6873      	ldr	r3, [r6, #4]
    62a2:	3b01      	subs	r3, #1
    62a4:	d504      	bpl.n	62b0 <__sfp+0x28>
    62a6:	6833      	ldr	r3, [r6, #0]
    62a8:	2b00      	cmp	r3, #0
    62aa:	d007      	beq.n	62bc <__sfp+0x34>
    62ac:	6836      	ldr	r6, [r6, #0]
    62ae:	e7f6      	b.n	629e <__sfp+0x16>
    62b0:	220c      	movs	r2, #12
    62b2:	5ea5      	ldrsh	r5, [r4, r2]
    62b4:	2d00      	cmp	r5, #0
    62b6:	d00d      	beq.n	62d4 <__sfp+0x4c>
    62b8:	3468      	adds	r4, #104	; 0x68
    62ba:	e7f2      	b.n	62a2 <__sfp+0x1a>
    62bc:	2104      	movs	r1, #4
    62be:	0038      	movs	r0, r7
    62c0:	f7ff ff98 	bl	61f4 <__sfmoreglue>
    62c4:	6030      	str	r0, [r6, #0]
    62c6:	2800      	cmp	r0, #0
    62c8:	d1f0      	bne.n	62ac <__sfp+0x24>
    62ca:	230c      	movs	r3, #12
    62cc:	0004      	movs	r4, r0
    62ce:	603b      	str	r3, [r7, #0]
    62d0:	0020      	movs	r0, r4
    62d2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    62d4:	2301      	movs	r3, #1
    62d6:	0020      	movs	r0, r4
    62d8:	425b      	negs	r3, r3
    62da:	81e3      	strh	r3, [r4, #14]
    62dc:	3302      	adds	r3, #2
    62de:	81a3      	strh	r3, [r4, #12]
    62e0:	6665      	str	r5, [r4, #100]	; 0x64
    62e2:	6025      	str	r5, [r4, #0]
    62e4:	60a5      	str	r5, [r4, #8]
    62e6:	6065      	str	r5, [r4, #4]
    62e8:	6125      	str	r5, [r4, #16]
    62ea:	6165      	str	r5, [r4, #20]
    62ec:	61a5      	str	r5, [r4, #24]
    62ee:	2208      	movs	r2, #8
    62f0:	0029      	movs	r1, r5
    62f2:	305c      	adds	r0, #92	; 0x5c
    62f4:	f7ff fbf4 	bl	5ae0 <memset>
    62f8:	6365      	str	r5, [r4, #52]	; 0x34
    62fa:	63a5      	str	r5, [r4, #56]	; 0x38
    62fc:	64a5      	str	r5, [r4, #72]	; 0x48
    62fe:	64e5      	str	r5, [r4, #76]	; 0x4c
    6300:	e7e6      	b.n	62d0 <__sfp+0x48>
    6302:	46c0      	nop			; (mov r8, r8)
    6304:	000079a4 	.word	0x000079a4

00006308 <_fwalk_reent>:
    6308:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    630a:	0004      	movs	r4, r0
    630c:	0007      	movs	r7, r0
    630e:	2600      	movs	r6, #0
    6310:	9101      	str	r1, [sp, #4]
    6312:	3448      	adds	r4, #72	; 0x48
    6314:	2c00      	cmp	r4, #0
    6316:	d101      	bne.n	631c <_fwalk_reent+0x14>
    6318:	0030      	movs	r0, r6
    631a:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
    631c:	6863      	ldr	r3, [r4, #4]
    631e:	68a5      	ldr	r5, [r4, #8]
    6320:	9300      	str	r3, [sp, #0]
    6322:	9b00      	ldr	r3, [sp, #0]
    6324:	3b01      	subs	r3, #1
    6326:	9300      	str	r3, [sp, #0]
    6328:	d501      	bpl.n	632e <_fwalk_reent+0x26>
    632a:	6824      	ldr	r4, [r4, #0]
    632c:	e7f2      	b.n	6314 <_fwalk_reent+0xc>
    632e:	89ab      	ldrh	r3, [r5, #12]
    6330:	2b01      	cmp	r3, #1
    6332:	d908      	bls.n	6346 <_fwalk_reent+0x3e>
    6334:	220e      	movs	r2, #14
    6336:	5eab      	ldrsh	r3, [r5, r2]
    6338:	3301      	adds	r3, #1
    633a:	d004      	beq.n	6346 <_fwalk_reent+0x3e>
    633c:	0029      	movs	r1, r5
    633e:	0038      	movs	r0, r7
    6340:	9b01      	ldr	r3, [sp, #4]
    6342:	4798      	blx	r3
    6344:	4306      	orrs	r6, r0
    6346:	3568      	adds	r5, #104	; 0x68
    6348:	e7eb      	b.n	6322 <_fwalk_reent+0x1a>

0000634a <__locale_ctype_ptr_l>:
    634a:	30ec      	adds	r0, #236	; 0xec
    634c:	6800      	ldr	r0, [r0, #0]
    634e:	4770      	bx	lr

00006350 <__swhatbuf_r>:
    6350:	b570      	push	{r4, r5, r6, lr}
    6352:	000e      	movs	r6, r1
    6354:	001d      	movs	r5, r3
    6356:	230e      	movs	r3, #14
    6358:	5ec9      	ldrsh	r1, [r1, r3]
    635a:	b090      	sub	sp, #64	; 0x40
    635c:	0014      	movs	r4, r2
    635e:	2900      	cmp	r1, #0
    6360:	da07      	bge.n	6372 <__swhatbuf_r+0x22>
    6362:	2300      	movs	r3, #0
    6364:	602b      	str	r3, [r5, #0]
    6366:	89b3      	ldrh	r3, [r6, #12]
    6368:	061b      	lsls	r3, r3, #24
    636a:	d411      	bmi.n	6390 <__swhatbuf_r+0x40>
    636c:	2380      	movs	r3, #128	; 0x80
    636e:	00db      	lsls	r3, r3, #3
    6370:	e00f      	b.n	6392 <__swhatbuf_r+0x42>
    6372:	aa01      	add	r2, sp, #4
    6374:	f000 fc78 	bl	6c68 <_fstat_r>
    6378:	2800      	cmp	r0, #0
    637a:	dbf2      	blt.n	6362 <__swhatbuf_r+0x12>
    637c:	22f0      	movs	r2, #240	; 0xf0
    637e:	9b02      	ldr	r3, [sp, #8]
    6380:	0212      	lsls	r2, r2, #8
    6382:	4013      	ands	r3, r2
    6384:	4a05      	ldr	r2, [pc, #20]	; (639c <__swhatbuf_r+0x4c>)
    6386:	189b      	adds	r3, r3, r2
    6388:	425a      	negs	r2, r3
    638a:	4153      	adcs	r3, r2
    638c:	602b      	str	r3, [r5, #0]
    638e:	e7ed      	b.n	636c <__swhatbuf_r+0x1c>
    6390:	2340      	movs	r3, #64	; 0x40
    6392:	2000      	movs	r0, #0
    6394:	6023      	str	r3, [r4, #0]
    6396:	b010      	add	sp, #64	; 0x40
    6398:	bd70      	pop	{r4, r5, r6, pc}
    639a:	46c0      	nop			; (mov r8, r8)
    639c:	ffffe000 	.word	0xffffe000

000063a0 <__smakebuf_r>:
    63a0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    63a2:	2602      	movs	r6, #2
    63a4:	898b      	ldrh	r3, [r1, #12]
    63a6:	0005      	movs	r5, r0
    63a8:	000c      	movs	r4, r1
    63aa:	4233      	tst	r3, r6
    63ac:	d006      	beq.n	63bc <__smakebuf_r+0x1c>
    63ae:	0023      	movs	r3, r4
    63b0:	3347      	adds	r3, #71	; 0x47
    63b2:	6023      	str	r3, [r4, #0]
    63b4:	6123      	str	r3, [r4, #16]
    63b6:	2301      	movs	r3, #1
    63b8:	6163      	str	r3, [r4, #20]
    63ba:	bdf7      	pop	{r0, r1, r2, r4, r5, r6, r7, pc}
    63bc:	ab01      	add	r3, sp, #4
    63be:	466a      	mov	r2, sp
    63c0:	f7ff ffc6 	bl	6350 <__swhatbuf_r>
    63c4:	9900      	ldr	r1, [sp, #0]
    63c6:	0007      	movs	r7, r0
    63c8:	0028      	movs	r0, r5
    63ca:	f000 f893 	bl	64f4 <_malloc_r>
    63ce:	2800      	cmp	r0, #0
    63d0:	d108      	bne.n	63e4 <__smakebuf_r+0x44>
    63d2:	220c      	movs	r2, #12
    63d4:	5ea3      	ldrsh	r3, [r4, r2]
    63d6:	059a      	lsls	r2, r3, #22
    63d8:	d4ef      	bmi.n	63ba <__smakebuf_r+0x1a>
    63da:	2203      	movs	r2, #3
    63dc:	4393      	bics	r3, r2
    63de:	431e      	orrs	r6, r3
    63e0:	81a6      	strh	r6, [r4, #12]
    63e2:	e7e4      	b.n	63ae <__smakebuf_r+0xe>
    63e4:	4b0f      	ldr	r3, [pc, #60]	; (6424 <__smakebuf_r+0x84>)
    63e6:	62ab      	str	r3, [r5, #40]	; 0x28
    63e8:	2380      	movs	r3, #128	; 0x80
    63ea:	89a2      	ldrh	r2, [r4, #12]
    63ec:	6020      	str	r0, [r4, #0]
    63ee:	4313      	orrs	r3, r2
    63f0:	81a3      	strh	r3, [r4, #12]
    63f2:	9b00      	ldr	r3, [sp, #0]
    63f4:	6120      	str	r0, [r4, #16]
    63f6:	6163      	str	r3, [r4, #20]
    63f8:	9b01      	ldr	r3, [sp, #4]
    63fa:	2b00      	cmp	r3, #0
    63fc:	d00d      	beq.n	641a <__smakebuf_r+0x7a>
    63fe:	230e      	movs	r3, #14
    6400:	5ee1      	ldrsh	r1, [r4, r3]
    6402:	0028      	movs	r0, r5
    6404:	f000 fc42 	bl	6c8c <_isatty_r>
    6408:	2800      	cmp	r0, #0
    640a:	d006      	beq.n	641a <__smakebuf_r+0x7a>
    640c:	2203      	movs	r2, #3
    640e:	89a3      	ldrh	r3, [r4, #12]
    6410:	4393      	bics	r3, r2
    6412:	001a      	movs	r2, r3
    6414:	2301      	movs	r3, #1
    6416:	4313      	orrs	r3, r2
    6418:	81a3      	strh	r3, [r4, #12]
    641a:	89a0      	ldrh	r0, [r4, #12]
    641c:	4338      	orrs	r0, r7
    641e:	81a0      	strh	r0, [r4, #12]
    6420:	e7cb      	b.n	63ba <__smakebuf_r+0x1a>
    6422:	46c0      	nop			; (mov r8, r8)
    6424:	0000619d 	.word	0x0000619d

00006428 <malloc>:
    6428:	b510      	push	{r4, lr}
    642a:	4b03      	ldr	r3, [pc, #12]	; (6438 <malloc+0x10>)
    642c:	0001      	movs	r1, r0
    642e:	6818      	ldr	r0, [r3, #0]
    6430:	f000 f860 	bl	64f4 <_malloc_r>
    6434:	bd10      	pop	{r4, pc}
    6436:	46c0      	nop			; (mov r8, r8)
    6438:	20000030 	.word	0x20000030

0000643c <__ascii_mbtowc>:
    643c:	b082      	sub	sp, #8
    643e:	2900      	cmp	r1, #0
    6440:	d100      	bne.n	6444 <__ascii_mbtowc+0x8>
    6442:	a901      	add	r1, sp, #4
    6444:	1e10      	subs	r0, r2, #0
    6446:	d006      	beq.n	6456 <__ascii_mbtowc+0x1a>
    6448:	2b00      	cmp	r3, #0
    644a:	d006      	beq.n	645a <__ascii_mbtowc+0x1e>
    644c:	7813      	ldrb	r3, [r2, #0]
    644e:	600b      	str	r3, [r1, #0]
    6450:	7810      	ldrb	r0, [r2, #0]
    6452:	1e43      	subs	r3, r0, #1
    6454:	4198      	sbcs	r0, r3
    6456:	b002      	add	sp, #8
    6458:	4770      	bx	lr
    645a:	2002      	movs	r0, #2
    645c:	4240      	negs	r0, r0
    645e:	e7fa      	b.n	6456 <__ascii_mbtowc+0x1a>

00006460 <_free_r>:
    6460:	b570      	push	{r4, r5, r6, lr}
    6462:	0005      	movs	r5, r0
    6464:	2900      	cmp	r1, #0
    6466:	d010      	beq.n	648a <_free_r+0x2a>
    6468:	1f0c      	subs	r4, r1, #4
    646a:	6823      	ldr	r3, [r4, #0]
    646c:	2b00      	cmp	r3, #0
    646e:	da00      	bge.n	6472 <_free_r+0x12>
    6470:	18e4      	adds	r4, r4, r3
    6472:	0028      	movs	r0, r5
    6474:	f000 fc3b 	bl	6cee <__malloc_lock>
    6478:	4a1d      	ldr	r2, [pc, #116]	; (64f0 <_free_r+0x90>)
    647a:	6813      	ldr	r3, [r2, #0]
    647c:	2b00      	cmp	r3, #0
    647e:	d105      	bne.n	648c <_free_r+0x2c>
    6480:	6063      	str	r3, [r4, #4]
    6482:	6014      	str	r4, [r2, #0]
    6484:	0028      	movs	r0, r5
    6486:	f000 fc33 	bl	6cf0 <__malloc_unlock>
    648a:	bd70      	pop	{r4, r5, r6, pc}
    648c:	42a3      	cmp	r3, r4
    648e:	d909      	bls.n	64a4 <_free_r+0x44>
    6490:	6821      	ldr	r1, [r4, #0]
    6492:	1860      	adds	r0, r4, r1
    6494:	4283      	cmp	r3, r0
    6496:	d1f3      	bne.n	6480 <_free_r+0x20>
    6498:	6818      	ldr	r0, [r3, #0]
    649a:	685b      	ldr	r3, [r3, #4]
    649c:	1841      	adds	r1, r0, r1
    649e:	6021      	str	r1, [r4, #0]
    64a0:	e7ee      	b.n	6480 <_free_r+0x20>
    64a2:	0013      	movs	r3, r2
    64a4:	685a      	ldr	r2, [r3, #4]
    64a6:	2a00      	cmp	r2, #0
    64a8:	d001      	beq.n	64ae <_free_r+0x4e>
    64aa:	42a2      	cmp	r2, r4
    64ac:	d9f9      	bls.n	64a2 <_free_r+0x42>
    64ae:	6819      	ldr	r1, [r3, #0]
    64b0:	1858      	adds	r0, r3, r1
    64b2:	42a0      	cmp	r0, r4
    64b4:	d10b      	bne.n	64ce <_free_r+0x6e>
    64b6:	6820      	ldr	r0, [r4, #0]
    64b8:	1809      	adds	r1, r1, r0
    64ba:	1858      	adds	r0, r3, r1
    64bc:	6019      	str	r1, [r3, #0]
    64be:	4282      	cmp	r2, r0
    64c0:	d1e0      	bne.n	6484 <_free_r+0x24>
    64c2:	6810      	ldr	r0, [r2, #0]
    64c4:	6852      	ldr	r2, [r2, #4]
    64c6:	1841      	adds	r1, r0, r1
    64c8:	6019      	str	r1, [r3, #0]
    64ca:	605a      	str	r2, [r3, #4]
    64cc:	e7da      	b.n	6484 <_free_r+0x24>
    64ce:	42a0      	cmp	r0, r4
    64d0:	d902      	bls.n	64d8 <_free_r+0x78>
    64d2:	230c      	movs	r3, #12
    64d4:	602b      	str	r3, [r5, #0]
    64d6:	e7d5      	b.n	6484 <_free_r+0x24>
    64d8:	6821      	ldr	r1, [r4, #0]
    64da:	1860      	adds	r0, r4, r1
    64dc:	4282      	cmp	r2, r0
    64de:	d103      	bne.n	64e8 <_free_r+0x88>
    64e0:	6810      	ldr	r0, [r2, #0]
    64e2:	6852      	ldr	r2, [r2, #4]
    64e4:	1841      	adds	r1, r0, r1
    64e6:	6021      	str	r1, [r4, #0]
    64e8:	6062      	str	r2, [r4, #4]
    64ea:	605c      	str	r4, [r3, #4]
    64ec:	e7ca      	b.n	6484 <_free_r+0x24>
    64ee:	46c0      	nop			; (mov r8, r8)
    64f0:	2000059c 	.word	0x2000059c

000064f4 <_malloc_r>:
    64f4:	2303      	movs	r3, #3
    64f6:	b570      	push	{r4, r5, r6, lr}
    64f8:	1ccd      	adds	r5, r1, #3
    64fa:	439d      	bics	r5, r3
    64fc:	3508      	adds	r5, #8
    64fe:	0006      	movs	r6, r0
    6500:	2d0c      	cmp	r5, #12
    6502:	d21e      	bcs.n	6542 <_malloc_r+0x4e>
    6504:	250c      	movs	r5, #12
    6506:	42a9      	cmp	r1, r5
    6508:	d81d      	bhi.n	6546 <_malloc_r+0x52>
    650a:	0030      	movs	r0, r6
    650c:	f000 fbef 	bl	6cee <__malloc_lock>
    6510:	4a25      	ldr	r2, [pc, #148]	; (65a8 <_malloc_r+0xb4>)
    6512:	6814      	ldr	r4, [r2, #0]
    6514:	0021      	movs	r1, r4
    6516:	2900      	cmp	r1, #0
    6518:	d119      	bne.n	654e <_malloc_r+0x5a>
    651a:	4c24      	ldr	r4, [pc, #144]	; (65ac <_malloc_r+0xb8>)
    651c:	6823      	ldr	r3, [r4, #0]
    651e:	2b00      	cmp	r3, #0
    6520:	d103      	bne.n	652a <_malloc_r+0x36>
    6522:	0030      	movs	r0, r6
    6524:	f000 fb10 	bl	6b48 <_sbrk_r>
    6528:	6020      	str	r0, [r4, #0]
    652a:	0029      	movs	r1, r5
    652c:	0030      	movs	r0, r6
    652e:	f000 fb0b 	bl	6b48 <_sbrk_r>
    6532:	1c43      	adds	r3, r0, #1
    6534:	d12c      	bne.n	6590 <_malloc_r+0x9c>
    6536:	230c      	movs	r3, #12
    6538:	0030      	movs	r0, r6
    653a:	6033      	str	r3, [r6, #0]
    653c:	f000 fbd8 	bl	6cf0 <__malloc_unlock>
    6540:	e003      	b.n	654a <_malloc_r+0x56>
    6542:	2d00      	cmp	r5, #0
    6544:	dadf      	bge.n	6506 <_malloc_r+0x12>
    6546:	230c      	movs	r3, #12
    6548:	6033      	str	r3, [r6, #0]
    654a:	2000      	movs	r0, #0
    654c:	bd70      	pop	{r4, r5, r6, pc}
    654e:	680b      	ldr	r3, [r1, #0]
    6550:	1b5b      	subs	r3, r3, r5
    6552:	d41a      	bmi.n	658a <_malloc_r+0x96>
    6554:	2b0b      	cmp	r3, #11
    6556:	d903      	bls.n	6560 <_malloc_r+0x6c>
    6558:	600b      	str	r3, [r1, #0]
    655a:	18cc      	adds	r4, r1, r3
    655c:	6025      	str	r5, [r4, #0]
    655e:	e003      	b.n	6568 <_malloc_r+0x74>
    6560:	428c      	cmp	r4, r1
    6562:	d10e      	bne.n	6582 <_malloc_r+0x8e>
    6564:	6863      	ldr	r3, [r4, #4]
    6566:	6013      	str	r3, [r2, #0]
    6568:	0030      	movs	r0, r6
    656a:	f000 fbc1 	bl	6cf0 <__malloc_unlock>
    656e:	0020      	movs	r0, r4
    6570:	2207      	movs	r2, #7
    6572:	300b      	adds	r0, #11
    6574:	1d23      	adds	r3, r4, #4
    6576:	4390      	bics	r0, r2
    6578:	1ac3      	subs	r3, r0, r3
    657a:	d0e7      	beq.n	654c <_malloc_r+0x58>
    657c:	425a      	negs	r2, r3
    657e:	50e2      	str	r2, [r4, r3]
    6580:	e7e4      	b.n	654c <_malloc_r+0x58>
    6582:	684b      	ldr	r3, [r1, #4]
    6584:	6063      	str	r3, [r4, #4]
    6586:	000c      	movs	r4, r1
    6588:	e7ee      	b.n	6568 <_malloc_r+0x74>
    658a:	000c      	movs	r4, r1
    658c:	6849      	ldr	r1, [r1, #4]
    658e:	e7c2      	b.n	6516 <_malloc_r+0x22>
    6590:	2303      	movs	r3, #3
    6592:	1cc4      	adds	r4, r0, #3
    6594:	439c      	bics	r4, r3
    6596:	42a0      	cmp	r0, r4
    6598:	d0e0      	beq.n	655c <_malloc_r+0x68>
    659a:	1a21      	subs	r1, r4, r0
    659c:	0030      	movs	r0, r6
    659e:	f000 fad3 	bl	6b48 <_sbrk_r>
    65a2:	1c43      	adds	r3, r0, #1
    65a4:	d1da      	bne.n	655c <_malloc_r+0x68>
    65a6:	e7c6      	b.n	6536 <_malloc_r+0x42>
    65a8:	2000059c 	.word	0x2000059c
    65ac:	200005a0 	.word	0x200005a0

000065b0 <__sfputc_r>:
    65b0:	6893      	ldr	r3, [r2, #8]
    65b2:	b510      	push	{r4, lr}
    65b4:	3b01      	subs	r3, #1
    65b6:	6093      	str	r3, [r2, #8]
    65b8:	2b00      	cmp	r3, #0
    65ba:	da05      	bge.n	65c8 <__sfputc_r+0x18>
    65bc:	6994      	ldr	r4, [r2, #24]
    65be:	42a3      	cmp	r3, r4
    65c0:	db08      	blt.n	65d4 <__sfputc_r+0x24>
    65c2:	b2cb      	uxtb	r3, r1
    65c4:	2b0a      	cmp	r3, #10
    65c6:	d005      	beq.n	65d4 <__sfputc_r+0x24>
    65c8:	6813      	ldr	r3, [r2, #0]
    65ca:	1c58      	adds	r0, r3, #1
    65cc:	6010      	str	r0, [r2, #0]
    65ce:	7019      	strb	r1, [r3, #0]
    65d0:	b2c8      	uxtb	r0, r1
    65d2:	bd10      	pop	{r4, pc}
    65d4:	f7ff fc60 	bl	5e98 <__swbuf_r>
    65d8:	e7fb      	b.n	65d2 <__sfputc_r+0x22>

000065da <__sfputs_r>:
    65da:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    65dc:	0006      	movs	r6, r0
    65de:	000f      	movs	r7, r1
    65e0:	0014      	movs	r4, r2
    65e2:	18d5      	adds	r5, r2, r3
    65e4:	42ac      	cmp	r4, r5
    65e6:	d101      	bne.n	65ec <__sfputs_r+0x12>
    65e8:	2000      	movs	r0, #0
    65ea:	e007      	b.n	65fc <__sfputs_r+0x22>
    65ec:	7821      	ldrb	r1, [r4, #0]
    65ee:	003a      	movs	r2, r7
    65f0:	0030      	movs	r0, r6
    65f2:	f7ff ffdd 	bl	65b0 <__sfputc_r>
    65f6:	3401      	adds	r4, #1
    65f8:	1c43      	adds	r3, r0, #1
    65fa:	d1f3      	bne.n	65e4 <__sfputs_r+0xa>
    65fc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

00006600 <_vfiprintf_r>:
    6600:	b5f0      	push	{r4, r5, r6, r7, lr}
    6602:	b09f      	sub	sp, #124	; 0x7c
    6604:	0006      	movs	r6, r0
    6606:	000f      	movs	r7, r1
    6608:	0014      	movs	r4, r2
    660a:	9305      	str	r3, [sp, #20]
    660c:	2800      	cmp	r0, #0
    660e:	d004      	beq.n	661a <_vfiprintf_r+0x1a>
    6610:	6983      	ldr	r3, [r0, #24]
    6612:	2b00      	cmp	r3, #0
    6614:	d101      	bne.n	661a <_vfiprintf_r+0x1a>
    6616:	f7ff fe03 	bl	6220 <__sinit>
    661a:	4b7f      	ldr	r3, [pc, #508]	; (6818 <_vfiprintf_r+0x218>)
    661c:	429f      	cmp	r7, r3
    661e:	d15c      	bne.n	66da <_vfiprintf_r+0xda>
    6620:	6877      	ldr	r7, [r6, #4]
    6622:	89bb      	ldrh	r3, [r7, #12]
    6624:	071b      	lsls	r3, r3, #28
    6626:	d562      	bpl.n	66ee <_vfiprintf_r+0xee>
    6628:	693b      	ldr	r3, [r7, #16]
    662a:	2b00      	cmp	r3, #0
    662c:	d05f      	beq.n	66ee <_vfiprintf_r+0xee>
    662e:	2300      	movs	r3, #0
    6630:	ad06      	add	r5, sp, #24
    6632:	616b      	str	r3, [r5, #20]
    6634:	3320      	adds	r3, #32
    6636:	766b      	strb	r3, [r5, #25]
    6638:	3310      	adds	r3, #16
    663a:	76ab      	strb	r3, [r5, #26]
    663c:	9402      	str	r4, [sp, #8]
    663e:	9c02      	ldr	r4, [sp, #8]
    6640:	7823      	ldrb	r3, [r4, #0]
    6642:	2b00      	cmp	r3, #0
    6644:	d15d      	bne.n	6702 <_vfiprintf_r+0x102>
    6646:	9b02      	ldr	r3, [sp, #8]
    6648:	1ae3      	subs	r3, r4, r3
    664a:	9304      	str	r3, [sp, #16]
    664c:	d00d      	beq.n	666a <_vfiprintf_r+0x6a>
    664e:	9b04      	ldr	r3, [sp, #16]
    6650:	9a02      	ldr	r2, [sp, #8]
    6652:	0039      	movs	r1, r7
    6654:	0030      	movs	r0, r6
    6656:	f7ff ffc0 	bl	65da <__sfputs_r>
    665a:	1c43      	adds	r3, r0, #1
    665c:	d100      	bne.n	6660 <_vfiprintf_r+0x60>
    665e:	e0cc      	b.n	67fa <_vfiprintf_r+0x1fa>
    6660:	696a      	ldr	r2, [r5, #20]
    6662:	9b04      	ldr	r3, [sp, #16]
    6664:	4694      	mov	ip, r2
    6666:	4463      	add	r3, ip
    6668:	616b      	str	r3, [r5, #20]
    666a:	7823      	ldrb	r3, [r4, #0]
    666c:	2b00      	cmp	r3, #0
    666e:	d100      	bne.n	6672 <_vfiprintf_r+0x72>
    6670:	e0c3      	b.n	67fa <_vfiprintf_r+0x1fa>
    6672:	2201      	movs	r2, #1
    6674:	2300      	movs	r3, #0
    6676:	4252      	negs	r2, r2
    6678:	606a      	str	r2, [r5, #4]
    667a:	a902      	add	r1, sp, #8
    667c:	3254      	adds	r2, #84	; 0x54
    667e:	1852      	adds	r2, r2, r1
    6680:	3401      	adds	r4, #1
    6682:	602b      	str	r3, [r5, #0]
    6684:	60eb      	str	r3, [r5, #12]
    6686:	60ab      	str	r3, [r5, #8]
    6688:	7013      	strb	r3, [r2, #0]
    668a:	65ab      	str	r3, [r5, #88]	; 0x58
    668c:	7821      	ldrb	r1, [r4, #0]
    668e:	2205      	movs	r2, #5
    6690:	4862      	ldr	r0, [pc, #392]	; (681c <_vfiprintf_r+0x21c>)
    6692:	f000 fb21 	bl	6cd8 <memchr>
    6696:	1c63      	adds	r3, r4, #1
    6698:	469c      	mov	ip, r3
    669a:	2800      	cmp	r0, #0
    669c:	d135      	bne.n	670a <_vfiprintf_r+0x10a>
    669e:	6829      	ldr	r1, [r5, #0]
    66a0:	06cb      	lsls	r3, r1, #27
    66a2:	d504      	bpl.n	66ae <_vfiprintf_r+0xae>
    66a4:	2353      	movs	r3, #83	; 0x53
    66a6:	aa02      	add	r2, sp, #8
    66a8:	3020      	adds	r0, #32
    66aa:	189b      	adds	r3, r3, r2
    66ac:	7018      	strb	r0, [r3, #0]
    66ae:	070b      	lsls	r3, r1, #28
    66b0:	d504      	bpl.n	66bc <_vfiprintf_r+0xbc>
    66b2:	2353      	movs	r3, #83	; 0x53
    66b4:	202b      	movs	r0, #43	; 0x2b
    66b6:	aa02      	add	r2, sp, #8
    66b8:	189b      	adds	r3, r3, r2
    66ba:	7018      	strb	r0, [r3, #0]
    66bc:	7823      	ldrb	r3, [r4, #0]
    66be:	2b2a      	cmp	r3, #42	; 0x2a
    66c0:	d02c      	beq.n	671c <_vfiprintf_r+0x11c>
    66c2:	2000      	movs	r0, #0
    66c4:	210a      	movs	r1, #10
    66c6:	9b09      	ldr	r3, [sp, #36]	; 0x24
    66c8:	7822      	ldrb	r2, [r4, #0]
    66ca:	3a30      	subs	r2, #48	; 0x30
    66cc:	2a09      	cmp	r2, #9
    66ce:	d800      	bhi.n	66d2 <_vfiprintf_r+0xd2>
    66d0:	e06b      	b.n	67aa <_vfiprintf_r+0x1aa>
    66d2:	2800      	cmp	r0, #0
    66d4:	d02a      	beq.n	672c <_vfiprintf_r+0x12c>
    66d6:	9309      	str	r3, [sp, #36]	; 0x24
    66d8:	e028      	b.n	672c <_vfiprintf_r+0x12c>
    66da:	4b51      	ldr	r3, [pc, #324]	; (6820 <_vfiprintf_r+0x220>)
    66dc:	429f      	cmp	r7, r3
    66de:	d101      	bne.n	66e4 <_vfiprintf_r+0xe4>
    66e0:	68b7      	ldr	r7, [r6, #8]
    66e2:	e79e      	b.n	6622 <_vfiprintf_r+0x22>
    66e4:	4b4f      	ldr	r3, [pc, #316]	; (6824 <_vfiprintf_r+0x224>)
    66e6:	429f      	cmp	r7, r3
    66e8:	d19b      	bne.n	6622 <_vfiprintf_r+0x22>
    66ea:	68f7      	ldr	r7, [r6, #12]
    66ec:	e799      	b.n	6622 <_vfiprintf_r+0x22>
    66ee:	0039      	movs	r1, r7
    66f0:	0030      	movs	r0, r6
    66f2:	f7ff fc27 	bl	5f44 <__swsetup_r>
    66f6:	2800      	cmp	r0, #0
    66f8:	d099      	beq.n	662e <_vfiprintf_r+0x2e>
    66fa:	2001      	movs	r0, #1
    66fc:	4240      	negs	r0, r0
    66fe:	b01f      	add	sp, #124	; 0x7c
    6700:	bdf0      	pop	{r4, r5, r6, r7, pc}
    6702:	2b25      	cmp	r3, #37	; 0x25
    6704:	d09f      	beq.n	6646 <_vfiprintf_r+0x46>
    6706:	3401      	adds	r4, #1
    6708:	e79a      	b.n	6640 <_vfiprintf_r+0x40>
    670a:	4b44      	ldr	r3, [pc, #272]	; (681c <_vfiprintf_r+0x21c>)
    670c:	6829      	ldr	r1, [r5, #0]
    670e:	1ac0      	subs	r0, r0, r3
    6710:	2301      	movs	r3, #1
    6712:	4083      	lsls	r3, r0
    6714:	430b      	orrs	r3, r1
    6716:	602b      	str	r3, [r5, #0]
    6718:	4664      	mov	r4, ip
    671a:	e7b7      	b.n	668c <_vfiprintf_r+0x8c>
    671c:	9b05      	ldr	r3, [sp, #20]
    671e:	1d18      	adds	r0, r3, #4
    6720:	681b      	ldr	r3, [r3, #0]
    6722:	9005      	str	r0, [sp, #20]
    6724:	2b00      	cmp	r3, #0
    6726:	db3a      	blt.n	679e <_vfiprintf_r+0x19e>
    6728:	9309      	str	r3, [sp, #36]	; 0x24
    672a:	4664      	mov	r4, ip
    672c:	7823      	ldrb	r3, [r4, #0]
    672e:	2b2e      	cmp	r3, #46	; 0x2e
    6730:	d10b      	bne.n	674a <_vfiprintf_r+0x14a>
    6732:	7863      	ldrb	r3, [r4, #1]
    6734:	1c62      	adds	r2, r4, #1
    6736:	2b2a      	cmp	r3, #42	; 0x2a
    6738:	d13f      	bne.n	67ba <_vfiprintf_r+0x1ba>
    673a:	9b05      	ldr	r3, [sp, #20]
    673c:	3402      	adds	r4, #2
    673e:	1d1a      	adds	r2, r3, #4
    6740:	681b      	ldr	r3, [r3, #0]
    6742:	9205      	str	r2, [sp, #20]
    6744:	2b00      	cmp	r3, #0
    6746:	db35      	blt.n	67b4 <_vfiprintf_r+0x1b4>
    6748:	9307      	str	r3, [sp, #28]
    674a:	7821      	ldrb	r1, [r4, #0]
    674c:	2203      	movs	r2, #3
    674e:	4836      	ldr	r0, [pc, #216]	; (6828 <_vfiprintf_r+0x228>)
    6750:	f000 fac2 	bl	6cd8 <memchr>
    6754:	2800      	cmp	r0, #0
    6756:	d007      	beq.n	6768 <_vfiprintf_r+0x168>
    6758:	4b33      	ldr	r3, [pc, #204]	; (6828 <_vfiprintf_r+0x228>)
    675a:	682a      	ldr	r2, [r5, #0]
    675c:	1ac0      	subs	r0, r0, r3
    675e:	2340      	movs	r3, #64	; 0x40
    6760:	4083      	lsls	r3, r0
    6762:	4313      	orrs	r3, r2
    6764:	602b      	str	r3, [r5, #0]
    6766:	3401      	adds	r4, #1
    6768:	7821      	ldrb	r1, [r4, #0]
    676a:	1c63      	adds	r3, r4, #1
    676c:	2206      	movs	r2, #6
    676e:	482f      	ldr	r0, [pc, #188]	; (682c <_vfiprintf_r+0x22c>)
    6770:	9302      	str	r3, [sp, #8]
    6772:	7629      	strb	r1, [r5, #24]
    6774:	f000 fab0 	bl	6cd8 <memchr>
    6778:	2800      	cmp	r0, #0
    677a:	d044      	beq.n	6806 <_vfiprintf_r+0x206>
    677c:	4b2c      	ldr	r3, [pc, #176]	; (6830 <_vfiprintf_r+0x230>)
    677e:	2b00      	cmp	r3, #0
    6780:	d12f      	bne.n	67e2 <_vfiprintf_r+0x1e2>
    6782:	6829      	ldr	r1, [r5, #0]
    6784:	9b05      	ldr	r3, [sp, #20]
    6786:	2207      	movs	r2, #7
    6788:	05c9      	lsls	r1, r1, #23
    678a:	d528      	bpl.n	67de <_vfiprintf_r+0x1de>
    678c:	189b      	adds	r3, r3, r2
    678e:	4393      	bics	r3, r2
    6790:	3308      	adds	r3, #8
    6792:	9305      	str	r3, [sp, #20]
    6794:	696b      	ldr	r3, [r5, #20]
    6796:	9a03      	ldr	r2, [sp, #12]
    6798:	189b      	adds	r3, r3, r2
    679a:	616b      	str	r3, [r5, #20]
    679c:	e74f      	b.n	663e <_vfiprintf_r+0x3e>
    679e:	425b      	negs	r3, r3
    67a0:	60eb      	str	r3, [r5, #12]
    67a2:	2302      	movs	r3, #2
    67a4:	430b      	orrs	r3, r1
    67a6:	602b      	str	r3, [r5, #0]
    67a8:	e7bf      	b.n	672a <_vfiprintf_r+0x12a>
    67aa:	434b      	muls	r3, r1
    67ac:	3401      	adds	r4, #1
    67ae:	189b      	adds	r3, r3, r2
    67b0:	2001      	movs	r0, #1
    67b2:	e789      	b.n	66c8 <_vfiprintf_r+0xc8>
    67b4:	2301      	movs	r3, #1
    67b6:	425b      	negs	r3, r3
    67b8:	e7c6      	b.n	6748 <_vfiprintf_r+0x148>
    67ba:	2300      	movs	r3, #0
    67bc:	0014      	movs	r4, r2
    67be:	200a      	movs	r0, #10
    67c0:	001a      	movs	r2, r3
    67c2:	606b      	str	r3, [r5, #4]
    67c4:	7821      	ldrb	r1, [r4, #0]
    67c6:	3930      	subs	r1, #48	; 0x30
    67c8:	2909      	cmp	r1, #9
    67ca:	d903      	bls.n	67d4 <_vfiprintf_r+0x1d4>
    67cc:	2b00      	cmp	r3, #0
    67ce:	d0bc      	beq.n	674a <_vfiprintf_r+0x14a>
    67d0:	9207      	str	r2, [sp, #28]
    67d2:	e7ba      	b.n	674a <_vfiprintf_r+0x14a>
    67d4:	4342      	muls	r2, r0
    67d6:	3401      	adds	r4, #1
    67d8:	1852      	adds	r2, r2, r1
    67da:	2301      	movs	r3, #1
    67dc:	e7f2      	b.n	67c4 <_vfiprintf_r+0x1c4>
    67de:	3307      	adds	r3, #7
    67e0:	e7d5      	b.n	678e <_vfiprintf_r+0x18e>
    67e2:	ab05      	add	r3, sp, #20
    67e4:	9300      	str	r3, [sp, #0]
    67e6:	003a      	movs	r2, r7
    67e8:	4b12      	ldr	r3, [pc, #72]	; (6834 <_vfiprintf_r+0x234>)
    67ea:	0029      	movs	r1, r5
    67ec:	0030      	movs	r0, r6
    67ee:	e000      	b.n	67f2 <_vfiprintf_r+0x1f2>
    67f0:	bf00      	nop
    67f2:	9003      	str	r0, [sp, #12]
    67f4:	9b03      	ldr	r3, [sp, #12]
    67f6:	3301      	adds	r3, #1
    67f8:	d1cc      	bne.n	6794 <_vfiprintf_r+0x194>
    67fa:	89bb      	ldrh	r3, [r7, #12]
    67fc:	065b      	lsls	r3, r3, #25
    67fe:	d500      	bpl.n	6802 <_vfiprintf_r+0x202>
    6800:	e77b      	b.n	66fa <_vfiprintf_r+0xfa>
    6802:	980b      	ldr	r0, [sp, #44]	; 0x2c
    6804:	e77b      	b.n	66fe <_vfiprintf_r+0xfe>
    6806:	ab05      	add	r3, sp, #20
    6808:	9300      	str	r3, [sp, #0]
    680a:	003a      	movs	r2, r7
    680c:	4b09      	ldr	r3, [pc, #36]	; (6834 <_vfiprintf_r+0x234>)
    680e:	0029      	movs	r1, r5
    6810:	0030      	movs	r0, r6
    6812:	f000 f87f 	bl	6914 <_printf_i>
    6816:	e7ec      	b.n	67f2 <_vfiprintf_r+0x1f2>
    6818:	000079c8 	.word	0x000079c8
    681c:	00007a12 	.word	0x00007a12
    6820:	000079e8 	.word	0x000079e8
    6824:	000079a8 	.word	0x000079a8
    6828:	00007a18 	.word	0x00007a18
    682c:	00007a1c 	.word	0x00007a1c
    6830:	00000000 	.word	0x00000000
    6834:	000065db 	.word	0x000065db

00006838 <_printf_common>:
    6838:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    683a:	0015      	movs	r5, r2
    683c:	9301      	str	r3, [sp, #4]
    683e:	688a      	ldr	r2, [r1, #8]
    6840:	690b      	ldr	r3, [r1, #16]
    6842:	9000      	str	r0, [sp, #0]
    6844:	000c      	movs	r4, r1
    6846:	4293      	cmp	r3, r2
    6848:	da00      	bge.n	684c <_printf_common+0x14>
    684a:	0013      	movs	r3, r2
    684c:	0022      	movs	r2, r4
    684e:	602b      	str	r3, [r5, #0]
    6850:	3243      	adds	r2, #67	; 0x43
    6852:	7812      	ldrb	r2, [r2, #0]
    6854:	2a00      	cmp	r2, #0
    6856:	d001      	beq.n	685c <_printf_common+0x24>
    6858:	3301      	adds	r3, #1
    685a:	602b      	str	r3, [r5, #0]
    685c:	6823      	ldr	r3, [r4, #0]
    685e:	069b      	lsls	r3, r3, #26
    6860:	d502      	bpl.n	6868 <_printf_common+0x30>
    6862:	682b      	ldr	r3, [r5, #0]
    6864:	3302      	adds	r3, #2
    6866:	602b      	str	r3, [r5, #0]
    6868:	2706      	movs	r7, #6
    686a:	6823      	ldr	r3, [r4, #0]
    686c:	401f      	ands	r7, r3
    686e:	d027      	beq.n	68c0 <_printf_common+0x88>
    6870:	0023      	movs	r3, r4
    6872:	3343      	adds	r3, #67	; 0x43
    6874:	781b      	ldrb	r3, [r3, #0]
    6876:	1e5a      	subs	r2, r3, #1
    6878:	4193      	sbcs	r3, r2
    687a:	6822      	ldr	r2, [r4, #0]
    687c:	0692      	lsls	r2, r2, #26
    687e:	d430      	bmi.n	68e2 <_printf_common+0xaa>
    6880:	0022      	movs	r2, r4
    6882:	9901      	ldr	r1, [sp, #4]
    6884:	3243      	adds	r2, #67	; 0x43
    6886:	9800      	ldr	r0, [sp, #0]
    6888:	9e08      	ldr	r6, [sp, #32]
    688a:	47b0      	blx	r6
    688c:	1c43      	adds	r3, r0, #1
    688e:	d025      	beq.n	68dc <_printf_common+0xa4>
    6890:	2306      	movs	r3, #6
    6892:	6820      	ldr	r0, [r4, #0]
    6894:	682a      	ldr	r2, [r5, #0]
    6896:	68e1      	ldr	r1, [r4, #12]
    6898:	4003      	ands	r3, r0
    689a:	2500      	movs	r5, #0
    689c:	2b04      	cmp	r3, #4
    689e:	d103      	bne.n	68a8 <_printf_common+0x70>
    68a0:	1a8d      	subs	r5, r1, r2
    68a2:	43eb      	mvns	r3, r5
    68a4:	17db      	asrs	r3, r3, #31
    68a6:	401d      	ands	r5, r3
    68a8:	68a3      	ldr	r3, [r4, #8]
    68aa:	6922      	ldr	r2, [r4, #16]
    68ac:	4293      	cmp	r3, r2
    68ae:	dd01      	ble.n	68b4 <_printf_common+0x7c>
    68b0:	1a9b      	subs	r3, r3, r2
    68b2:	18ed      	adds	r5, r5, r3
    68b4:	2700      	movs	r7, #0
    68b6:	42bd      	cmp	r5, r7
    68b8:	d120      	bne.n	68fc <_printf_common+0xc4>
    68ba:	2000      	movs	r0, #0
    68bc:	e010      	b.n	68e0 <_printf_common+0xa8>
    68be:	3701      	adds	r7, #1
    68c0:	68e3      	ldr	r3, [r4, #12]
    68c2:	682a      	ldr	r2, [r5, #0]
    68c4:	1a9b      	subs	r3, r3, r2
    68c6:	429f      	cmp	r7, r3
    68c8:	dad2      	bge.n	6870 <_printf_common+0x38>
    68ca:	0022      	movs	r2, r4
    68cc:	2301      	movs	r3, #1
    68ce:	3219      	adds	r2, #25
    68d0:	9901      	ldr	r1, [sp, #4]
    68d2:	9800      	ldr	r0, [sp, #0]
    68d4:	9e08      	ldr	r6, [sp, #32]
    68d6:	47b0      	blx	r6
    68d8:	1c43      	adds	r3, r0, #1
    68da:	d1f0      	bne.n	68be <_printf_common+0x86>
    68dc:	2001      	movs	r0, #1
    68de:	4240      	negs	r0, r0
    68e0:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
    68e2:	2030      	movs	r0, #48	; 0x30
    68e4:	18e1      	adds	r1, r4, r3
    68e6:	3143      	adds	r1, #67	; 0x43
    68e8:	7008      	strb	r0, [r1, #0]
    68ea:	0021      	movs	r1, r4
    68ec:	1c5a      	adds	r2, r3, #1
    68ee:	3145      	adds	r1, #69	; 0x45
    68f0:	7809      	ldrb	r1, [r1, #0]
    68f2:	18a2      	adds	r2, r4, r2
    68f4:	3243      	adds	r2, #67	; 0x43
    68f6:	3302      	adds	r3, #2
    68f8:	7011      	strb	r1, [r2, #0]
    68fa:	e7c1      	b.n	6880 <_printf_common+0x48>
    68fc:	0022      	movs	r2, r4
    68fe:	2301      	movs	r3, #1
    6900:	321a      	adds	r2, #26
    6902:	9901      	ldr	r1, [sp, #4]
    6904:	9800      	ldr	r0, [sp, #0]
    6906:	9e08      	ldr	r6, [sp, #32]
    6908:	47b0      	blx	r6
    690a:	1c43      	adds	r3, r0, #1
    690c:	d0e6      	beq.n	68dc <_printf_common+0xa4>
    690e:	3701      	adds	r7, #1
    6910:	e7d1      	b.n	68b6 <_printf_common+0x7e>
	...

00006914 <_printf_i>:
    6914:	b5f0      	push	{r4, r5, r6, r7, lr}
    6916:	b08b      	sub	sp, #44	; 0x2c
    6918:	9206      	str	r2, [sp, #24]
    691a:	000a      	movs	r2, r1
    691c:	3243      	adds	r2, #67	; 0x43
    691e:	9307      	str	r3, [sp, #28]
    6920:	9005      	str	r0, [sp, #20]
    6922:	9204      	str	r2, [sp, #16]
    6924:	7e0a      	ldrb	r2, [r1, #24]
    6926:	000c      	movs	r4, r1
    6928:	9b10      	ldr	r3, [sp, #64]	; 0x40
    692a:	2a6e      	cmp	r2, #110	; 0x6e
    692c:	d100      	bne.n	6930 <_printf_i+0x1c>
    692e:	e08f      	b.n	6a50 <_printf_i+0x13c>
    6930:	d817      	bhi.n	6962 <_printf_i+0x4e>
    6932:	2a63      	cmp	r2, #99	; 0x63
    6934:	d02c      	beq.n	6990 <_printf_i+0x7c>
    6936:	d808      	bhi.n	694a <_printf_i+0x36>
    6938:	2a00      	cmp	r2, #0
    693a:	d100      	bne.n	693e <_printf_i+0x2a>
    693c:	e099      	b.n	6a72 <_printf_i+0x15e>
    693e:	2a58      	cmp	r2, #88	; 0x58
    6940:	d054      	beq.n	69ec <_printf_i+0xd8>
    6942:	0026      	movs	r6, r4
    6944:	3642      	adds	r6, #66	; 0x42
    6946:	7032      	strb	r2, [r6, #0]
    6948:	e029      	b.n	699e <_printf_i+0x8a>
    694a:	2a64      	cmp	r2, #100	; 0x64
    694c:	d001      	beq.n	6952 <_printf_i+0x3e>
    694e:	2a69      	cmp	r2, #105	; 0x69
    6950:	d1f7      	bne.n	6942 <_printf_i+0x2e>
    6952:	6821      	ldr	r1, [r4, #0]
    6954:	681a      	ldr	r2, [r3, #0]
    6956:	0608      	lsls	r0, r1, #24
    6958:	d523      	bpl.n	69a2 <_printf_i+0x8e>
    695a:	1d11      	adds	r1, r2, #4
    695c:	6019      	str	r1, [r3, #0]
    695e:	6815      	ldr	r5, [r2, #0]
    6960:	e025      	b.n	69ae <_printf_i+0x9a>
    6962:	2a73      	cmp	r2, #115	; 0x73
    6964:	d100      	bne.n	6968 <_printf_i+0x54>
    6966:	e088      	b.n	6a7a <_printf_i+0x166>
    6968:	d808      	bhi.n	697c <_printf_i+0x68>
    696a:	2a6f      	cmp	r2, #111	; 0x6f
    696c:	d029      	beq.n	69c2 <_printf_i+0xae>
    696e:	2a70      	cmp	r2, #112	; 0x70
    6970:	d1e7      	bne.n	6942 <_printf_i+0x2e>
    6972:	2220      	movs	r2, #32
    6974:	6809      	ldr	r1, [r1, #0]
    6976:	430a      	orrs	r2, r1
    6978:	6022      	str	r2, [r4, #0]
    697a:	e003      	b.n	6984 <_printf_i+0x70>
    697c:	2a75      	cmp	r2, #117	; 0x75
    697e:	d020      	beq.n	69c2 <_printf_i+0xae>
    6980:	2a78      	cmp	r2, #120	; 0x78
    6982:	d1de      	bne.n	6942 <_printf_i+0x2e>
    6984:	0022      	movs	r2, r4
    6986:	2178      	movs	r1, #120	; 0x78
    6988:	3245      	adds	r2, #69	; 0x45
    698a:	7011      	strb	r1, [r2, #0]
    698c:	4a6c      	ldr	r2, [pc, #432]	; (6b40 <_printf_i+0x22c>)
    698e:	e030      	b.n	69f2 <_printf_i+0xde>
    6990:	000e      	movs	r6, r1
    6992:	681a      	ldr	r2, [r3, #0]
    6994:	3642      	adds	r6, #66	; 0x42
    6996:	1d11      	adds	r1, r2, #4
    6998:	6019      	str	r1, [r3, #0]
    699a:	6813      	ldr	r3, [r2, #0]
    699c:	7033      	strb	r3, [r6, #0]
    699e:	2301      	movs	r3, #1
    69a0:	e079      	b.n	6a96 <_printf_i+0x182>
    69a2:	0649      	lsls	r1, r1, #25
    69a4:	d5d9      	bpl.n	695a <_printf_i+0x46>
    69a6:	1d11      	adds	r1, r2, #4
    69a8:	6019      	str	r1, [r3, #0]
    69aa:	2300      	movs	r3, #0
    69ac:	5ed5      	ldrsh	r5, [r2, r3]
    69ae:	2d00      	cmp	r5, #0
    69b0:	da03      	bge.n	69ba <_printf_i+0xa6>
    69b2:	232d      	movs	r3, #45	; 0x2d
    69b4:	9a04      	ldr	r2, [sp, #16]
    69b6:	426d      	negs	r5, r5
    69b8:	7013      	strb	r3, [r2, #0]
    69ba:	4b62      	ldr	r3, [pc, #392]	; (6b44 <_printf_i+0x230>)
    69bc:	270a      	movs	r7, #10
    69be:	9303      	str	r3, [sp, #12]
    69c0:	e02f      	b.n	6a22 <_printf_i+0x10e>
    69c2:	6820      	ldr	r0, [r4, #0]
    69c4:	6819      	ldr	r1, [r3, #0]
    69c6:	0605      	lsls	r5, r0, #24
    69c8:	d503      	bpl.n	69d2 <_printf_i+0xbe>
    69ca:	1d08      	adds	r0, r1, #4
    69cc:	6018      	str	r0, [r3, #0]
    69ce:	680d      	ldr	r5, [r1, #0]
    69d0:	e005      	b.n	69de <_printf_i+0xca>
    69d2:	0640      	lsls	r0, r0, #25
    69d4:	d5f9      	bpl.n	69ca <_printf_i+0xb6>
    69d6:	680d      	ldr	r5, [r1, #0]
    69d8:	1d08      	adds	r0, r1, #4
    69da:	6018      	str	r0, [r3, #0]
    69dc:	b2ad      	uxth	r5, r5
    69de:	4b59      	ldr	r3, [pc, #356]	; (6b44 <_printf_i+0x230>)
    69e0:	2708      	movs	r7, #8
    69e2:	9303      	str	r3, [sp, #12]
    69e4:	2a6f      	cmp	r2, #111	; 0x6f
    69e6:	d018      	beq.n	6a1a <_printf_i+0x106>
    69e8:	270a      	movs	r7, #10
    69ea:	e016      	b.n	6a1a <_printf_i+0x106>
    69ec:	3145      	adds	r1, #69	; 0x45
    69ee:	700a      	strb	r2, [r1, #0]
    69f0:	4a54      	ldr	r2, [pc, #336]	; (6b44 <_printf_i+0x230>)
    69f2:	9203      	str	r2, [sp, #12]
    69f4:	681a      	ldr	r2, [r3, #0]
    69f6:	6821      	ldr	r1, [r4, #0]
    69f8:	1d10      	adds	r0, r2, #4
    69fa:	6018      	str	r0, [r3, #0]
    69fc:	6815      	ldr	r5, [r2, #0]
    69fe:	0608      	lsls	r0, r1, #24
    6a00:	d522      	bpl.n	6a48 <_printf_i+0x134>
    6a02:	07cb      	lsls	r3, r1, #31
    6a04:	d502      	bpl.n	6a0c <_printf_i+0xf8>
    6a06:	2320      	movs	r3, #32
    6a08:	4319      	orrs	r1, r3
    6a0a:	6021      	str	r1, [r4, #0]
    6a0c:	2710      	movs	r7, #16
    6a0e:	2d00      	cmp	r5, #0
    6a10:	d103      	bne.n	6a1a <_printf_i+0x106>
    6a12:	2320      	movs	r3, #32
    6a14:	6822      	ldr	r2, [r4, #0]
    6a16:	439a      	bics	r2, r3
    6a18:	6022      	str	r2, [r4, #0]
    6a1a:	0023      	movs	r3, r4
    6a1c:	2200      	movs	r2, #0
    6a1e:	3343      	adds	r3, #67	; 0x43
    6a20:	701a      	strb	r2, [r3, #0]
    6a22:	6863      	ldr	r3, [r4, #4]
    6a24:	60a3      	str	r3, [r4, #8]
    6a26:	2b00      	cmp	r3, #0
    6a28:	db5c      	blt.n	6ae4 <_printf_i+0x1d0>
    6a2a:	2204      	movs	r2, #4
    6a2c:	6821      	ldr	r1, [r4, #0]
    6a2e:	4391      	bics	r1, r2
    6a30:	6021      	str	r1, [r4, #0]
    6a32:	2d00      	cmp	r5, #0
    6a34:	d158      	bne.n	6ae8 <_printf_i+0x1d4>
    6a36:	9e04      	ldr	r6, [sp, #16]
    6a38:	2b00      	cmp	r3, #0
    6a3a:	d064      	beq.n	6b06 <_printf_i+0x1f2>
    6a3c:	0026      	movs	r6, r4
    6a3e:	9b03      	ldr	r3, [sp, #12]
    6a40:	3642      	adds	r6, #66	; 0x42
    6a42:	781b      	ldrb	r3, [r3, #0]
    6a44:	7033      	strb	r3, [r6, #0]
    6a46:	e05e      	b.n	6b06 <_printf_i+0x1f2>
    6a48:	0648      	lsls	r0, r1, #25
    6a4a:	d5da      	bpl.n	6a02 <_printf_i+0xee>
    6a4c:	b2ad      	uxth	r5, r5
    6a4e:	e7d8      	b.n	6a02 <_printf_i+0xee>
    6a50:	6809      	ldr	r1, [r1, #0]
    6a52:	681a      	ldr	r2, [r3, #0]
    6a54:	0608      	lsls	r0, r1, #24
    6a56:	d505      	bpl.n	6a64 <_printf_i+0x150>
    6a58:	1d11      	adds	r1, r2, #4
    6a5a:	6019      	str	r1, [r3, #0]
    6a5c:	6813      	ldr	r3, [r2, #0]
    6a5e:	6962      	ldr	r2, [r4, #20]
    6a60:	601a      	str	r2, [r3, #0]
    6a62:	e006      	b.n	6a72 <_printf_i+0x15e>
    6a64:	0649      	lsls	r1, r1, #25
    6a66:	d5f7      	bpl.n	6a58 <_printf_i+0x144>
    6a68:	1d11      	adds	r1, r2, #4
    6a6a:	6019      	str	r1, [r3, #0]
    6a6c:	6813      	ldr	r3, [r2, #0]
    6a6e:	8aa2      	ldrh	r2, [r4, #20]
    6a70:	801a      	strh	r2, [r3, #0]
    6a72:	2300      	movs	r3, #0
    6a74:	9e04      	ldr	r6, [sp, #16]
    6a76:	6123      	str	r3, [r4, #16]
    6a78:	e054      	b.n	6b24 <_printf_i+0x210>
    6a7a:	681a      	ldr	r2, [r3, #0]
    6a7c:	1d11      	adds	r1, r2, #4
    6a7e:	6019      	str	r1, [r3, #0]
    6a80:	6816      	ldr	r6, [r2, #0]
    6a82:	2100      	movs	r1, #0
    6a84:	6862      	ldr	r2, [r4, #4]
    6a86:	0030      	movs	r0, r6
    6a88:	f000 f926 	bl	6cd8 <memchr>
    6a8c:	2800      	cmp	r0, #0
    6a8e:	d001      	beq.n	6a94 <_printf_i+0x180>
    6a90:	1b80      	subs	r0, r0, r6
    6a92:	6060      	str	r0, [r4, #4]
    6a94:	6863      	ldr	r3, [r4, #4]
    6a96:	6123      	str	r3, [r4, #16]
    6a98:	2300      	movs	r3, #0
    6a9a:	9a04      	ldr	r2, [sp, #16]
    6a9c:	7013      	strb	r3, [r2, #0]
    6a9e:	e041      	b.n	6b24 <_printf_i+0x210>
    6aa0:	6923      	ldr	r3, [r4, #16]
    6aa2:	0032      	movs	r2, r6
    6aa4:	9906      	ldr	r1, [sp, #24]
    6aa6:	9805      	ldr	r0, [sp, #20]
    6aa8:	9d07      	ldr	r5, [sp, #28]
    6aaa:	47a8      	blx	r5
    6aac:	1c43      	adds	r3, r0, #1
    6aae:	d043      	beq.n	6b38 <_printf_i+0x224>
    6ab0:	6823      	ldr	r3, [r4, #0]
    6ab2:	2500      	movs	r5, #0
    6ab4:	079b      	lsls	r3, r3, #30
    6ab6:	d40f      	bmi.n	6ad8 <_printf_i+0x1c4>
    6ab8:	9b09      	ldr	r3, [sp, #36]	; 0x24
    6aba:	68e0      	ldr	r0, [r4, #12]
    6abc:	4298      	cmp	r0, r3
    6abe:	da3d      	bge.n	6b3c <_printf_i+0x228>
    6ac0:	0018      	movs	r0, r3
    6ac2:	e03b      	b.n	6b3c <_printf_i+0x228>
    6ac4:	0022      	movs	r2, r4
    6ac6:	2301      	movs	r3, #1
    6ac8:	3219      	adds	r2, #25
    6aca:	9906      	ldr	r1, [sp, #24]
    6acc:	9805      	ldr	r0, [sp, #20]
    6ace:	9e07      	ldr	r6, [sp, #28]
    6ad0:	47b0      	blx	r6
    6ad2:	1c43      	adds	r3, r0, #1
    6ad4:	d030      	beq.n	6b38 <_printf_i+0x224>
    6ad6:	3501      	adds	r5, #1
    6ad8:	68e3      	ldr	r3, [r4, #12]
    6ada:	9a09      	ldr	r2, [sp, #36]	; 0x24
    6adc:	1a9b      	subs	r3, r3, r2
    6ade:	429d      	cmp	r5, r3
    6ae0:	dbf0      	blt.n	6ac4 <_printf_i+0x1b0>
    6ae2:	e7e9      	b.n	6ab8 <_printf_i+0x1a4>
    6ae4:	2d00      	cmp	r5, #0
    6ae6:	d0a9      	beq.n	6a3c <_printf_i+0x128>
    6ae8:	9e04      	ldr	r6, [sp, #16]
    6aea:	0028      	movs	r0, r5
    6aec:	0039      	movs	r1, r7
    6aee:	f7fe feb3 	bl	5858 <__aeabi_uidivmod>
    6af2:	9b03      	ldr	r3, [sp, #12]
    6af4:	3e01      	subs	r6, #1
    6af6:	5c5b      	ldrb	r3, [r3, r1]
    6af8:	0028      	movs	r0, r5
    6afa:	7033      	strb	r3, [r6, #0]
    6afc:	0039      	movs	r1, r7
    6afe:	f7fe fe25 	bl	574c <__udivsi3>
    6b02:	1e05      	subs	r5, r0, #0
    6b04:	d1f1      	bne.n	6aea <_printf_i+0x1d6>
    6b06:	2f08      	cmp	r7, #8
    6b08:	d109      	bne.n	6b1e <_printf_i+0x20a>
    6b0a:	6823      	ldr	r3, [r4, #0]
    6b0c:	07db      	lsls	r3, r3, #31
    6b0e:	d506      	bpl.n	6b1e <_printf_i+0x20a>
    6b10:	6863      	ldr	r3, [r4, #4]
    6b12:	6922      	ldr	r2, [r4, #16]
    6b14:	4293      	cmp	r3, r2
    6b16:	dc02      	bgt.n	6b1e <_printf_i+0x20a>
    6b18:	2330      	movs	r3, #48	; 0x30
    6b1a:	3e01      	subs	r6, #1
    6b1c:	7033      	strb	r3, [r6, #0]
    6b1e:	9b04      	ldr	r3, [sp, #16]
    6b20:	1b9b      	subs	r3, r3, r6
    6b22:	6123      	str	r3, [r4, #16]
    6b24:	9b07      	ldr	r3, [sp, #28]
    6b26:	aa09      	add	r2, sp, #36	; 0x24
    6b28:	9300      	str	r3, [sp, #0]
    6b2a:	0021      	movs	r1, r4
    6b2c:	9b06      	ldr	r3, [sp, #24]
    6b2e:	9805      	ldr	r0, [sp, #20]
    6b30:	f7ff fe82 	bl	6838 <_printf_common>
    6b34:	1c43      	adds	r3, r0, #1
    6b36:	d1b3      	bne.n	6aa0 <_printf_i+0x18c>
    6b38:	2001      	movs	r0, #1
    6b3a:	4240      	negs	r0, r0
    6b3c:	b00b      	add	sp, #44	; 0x2c
    6b3e:	bdf0      	pop	{r4, r5, r6, r7, pc}
    6b40:	00007a34 	.word	0x00007a34
    6b44:	00007a23 	.word	0x00007a23

00006b48 <_sbrk_r>:
    6b48:	2300      	movs	r3, #0
    6b4a:	b570      	push	{r4, r5, r6, lr}
    6b4c:	4c06      	ldr	r4, [pc, #24]	; (6b68 <_sbrk_r+0x20>)
    6b4e:	0005      	movs	r5, r0
    6b50:	0008      	movs	r0, r1
    6b52:	6023      	str	r3, [r4, #0]
    6b54:	f7fc fce4 	bl	3520 <_sbrk>
    6b58:	1c43      	adds	r3, r0, #1
    6b5a:	d103      	bne.n	6b64 <_sbrk_r+0x1c>
    6b5c:	6823      	ldr	r3, [r4, #0]
    6b5e:	2b00      	cmp	r3, #0
    6b60:	d000      	beq.n	6b64 <_sbrk_r+0x1c>
    6b62:	602b      	str	r3, [r5, #0]
    6b64:	bd70      	pop	{r4, r5, r6, pc}
    6b66:	46c0      	nop			; (mov r8, r8)
    6b68:	200006d8 	.word	0x200006d8

00006b6c <__sread>:
    6b6c:	b570      	push	{r4, r5, r6, lr}
    6b6e:	000c      	movs	r4, r1
    6b70:	250e      	movs	r5, #14
    6b72:	5f49      	ldrsh	r1, [r1, r5]
    6b74:	f000 f8be 	bl	6cf4 <_read_r>
    6b78:	2800      	cmp	r0, #0
    6b7a:	db03      	blt.n	6b84 <__sread+0x18>
    6b7c:	6d63      	ldr	r3, [r4, #84]	; 0x54
    6b7e:	181b      	adds	r3, r3, r0
    6b80:	6563      	str	r3, [r4, #84]	; 0x54
    6b82:	bd70      	pop	{r4, r5, r6, pc}
    6b84:	89a3      	ldrh	r3, [r4, #12]
    6b86:	4a02      	ldr	r2, [pc, #8]	; (6b90 <__sread+0x24>)
    6b88:	4013      	ands	r3, r2
    6b8a:	81a3      	strh	r3, [r4, #12]
    6b8c:	e7f9      	b.n	6b82 <__sread+0x16>
    6b8e:	46c0      	nop			; (mov r8, r8)
    6b90:	ffffefff 	.word	0xffffefff

00006b94 <__swrite>:
    6b94:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    6b96:	001f      	movs	r7, r3
    6b98:	898b      	ldrh	r3, [r1, #12]
    6b9a:	0005      	movs	r5, r0
    6b9c:	000c      	movs	r4, r1
    6b9e:	0016      	movs	r6, r2
    6ba0:	05db      	lsls	r3, r3, #23
    6ba2:	d505      	bpl.n	6bb0 <__swrite+0x1c>
    6ba4:	230e      	movs	r3, #14
    6ba6:	5ec9      	ldrsh	r1, [r1, r3]
    6ba8:	2200      	movs	r2, #0
    6baa:	2302      	movs	r3, #2
    6bac:	f000 f880 	bl	6cb0 <_lseek_r>
    6bb0:	89a3      	ldrh	r3, [r4, #12]
    6bb2:	4a05      	ldr	r2, [pc, #20]	; (6bc8 <__swrite+0x34>)
    6bb4:	0028      	movs	r0, r5
    6bb6:	4013      	ands	r3, r2
    6bb8:	81a3      	strh	r3, [r4, #12]
    6bba:	0032      	movs	r2, r6
    6bbc:	230e      	movs	r3, #14
    6bbe:	5ee1      	ldrsh	r1, [r4, r3]
    6bc0:	003b      	movs	r3, r7
    6bc2:	f000 f82b 	bl	6c1c <_write_r>
    6bc6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    6bc8:	ffffefff 	.word	0xffffefff

00006bcc <__sseek>:
    6bcc:	b570      	push	{r4, r5, r6, lr}
    6bce:	000c      	movs	r4, r1
    6bd0:	250e      	movs	r5, #14
    6bd2:	5f49      	ldrsh	r1, [r1, r5]
    6bd4:	f000 f86c 	bl	6cb0 <_lseek_r>
    6bd8:	89a3      	ldrh	r3, [r4, #12]
    6bda:	1c42      	adds	r2, r0, #1
    6bdc:	d103      	bne.n	6be6 <__sseek+0x1a>
    6bde:	4a05      	ldr	r2, [pc, #20]	; (6bf4 <__sseek+0x28>)
    6be0:	4013      	ands	r3, r2
    6be2:	81a3      	strh	r3, [r4, #12]
    6be4:	bd70      	pop	{r4, r5, r6, pc}
    6be6:	2280      	movs	r2, #128	; 0x80
    6be8:	0152      	lsls	r2, r2, #5
    6bea:	4313      	orrs	r3, r2
    6bec:	81a3      	strh	r3, [r4, #12]
    6bee:	6560      	str	r0, [r4, #84]	; 0x54
    6bf0:	e7f8      	b.n	6be4 <__sseek+0x18>
    6bf2:	46c0      	nop			; (mov r8, r8)
    6bf4:	ffffefff 	.word	0xffffefff

00006bf8 <__sclose>:
    6bf8:	b510      	push	{r4, lr}
    6bfa:	230e      	movs	r3, #14
    6bfc:	5ec9      	ldrsh	r1, [r1, r3]
    6bfe:	f000 f821 	bl	6c44 <_close_r>
    6c02:	bd10      	pop	{r4, pc}

00006c04 <__ascii_wctomb>:
    6c04:	1e0b      	subs	r3, r1, #0
    6c06:	d004      	beq.n	6c12 <__ascii_wctomb+0xe>
    6c08:	2aff      	cmp	r2, #255	; 0xff
    6c0a:	d904      	bls.n	6c16 <__ascii_wctomb+0x12>
    6c0c:	238a      	movs	r3, #138	; 0x8a
    6c0e:	6003      	str	r3, [r0, #0]
    6c10:	3b8b      	subs	r3, #139	; 0x8b
    6c12:	0018      	movs	r0, r3
    6c14:	4770      	bx	lr
    6c16:	700a      	strb	r2, [r1, #0]
    6c18:	2301      	movs	r3, #1
    6c1a:	e7fa      	b.n	6c12 <__ascii_wctomb+0xe>

00006c1c <_write_r>:
    6c1c:	b570      	push	{r4, r5, r6, lr}
    6c1e:	0005      	movs	r5, r0
    6c20:	0008      	movs	r0, r1
    6c22:	0011      	movs	r1, r2
    6c24:	2200      	movs	r2, #0
    6c26:	4c06      	ldr	r4, [pc, #24]	; (6c40 <_write_r+0x24>)
    6c28:	6022      	str	r2, [r4, #0]
    6c2a:	001a      	movs	r2, r3
    6c2c:	f7fc fc50 	bl	34d0 <_write>
    6c30:	1c43      	adds	r3, r0, #1
    6c32:	d103      	bne.n	6c3c <_write_r+0x20>
    6c34:	6823      	ldr	r3, [r4, #0]
    6c36:	2b00      	cmp	r3, #0
    6c38:	d000      	beq.n	6c3c <_write_r+0x20>
    6c3a:	602b      	str	r3, [r5, #0]
    6c3c:	bd70      	pop	{r4, r5, r6, pc}
    6c3e:	46c0      	nop			; (mov r8, r8)
    6c40:	200006d8 	.word	0x200006d8

00006c44 <_close_r>:
    6c44:	2300      	movs	r3, #0
    6c46:	b570      	push	{r4, r5, r6, lr}
    6c48:	4c06      	ldr	r4, [pc, #24]	; (6c64 <_close_r+0x20>)
    6c4a:	0005      	movs	r5, r0
    6c4c:	0008      	movs	r0, r1
    6c4e:	6023      	str	r3, [r4, #0]
    6c50:	f7fc fc78 	bl	3544 <_close>
    6c54:	1c43      	adds	r3, r0, #1
    6c56:	d103      	bne.n	6c60 <_close_r+0x1c>
    6c58:	6823      	ldr	r3, [r4, #0]
    6c5a:	2b00      	cmp	r3, #0
    6c5c:	d000      	beq.n	6c60 <_close_r+0x1c>
    6c5e:	602b      	str	r3, [r5, #0]
    6c60:	bd70      	pop	{r4, r5, r6, pc}
    6c62:	46c0      	nop			; (mov r8, r8)
    6c64:	200006d8 	.word	0x200006d8

00006c68 <_fstat_r>:
    6c68:	2300      	movs	r3, #0
    6c6a:	b570      	push	{r4, r5, r6, lr}
    6c6c:	4c06      	ldr	r4, [pc, #24]	; (6c88 <_fstat_r+0x20>)
    6c6e:	0005      	movs	r5, r0
    6c70:	0008      	movs	r0, r1
    6c72:	0011      	movs	r1, r2
    6c74:	6023      	str	r3, [r4, #0]
    6c76:	f7fc fc68 	bl	354a <_fstat>
    6c7a:	1c43      	adds	r3, r0, #1
    6c7c:	d103      	bne.n	6c86 <_fstat_r+0x1e>
    6c7e:	6823      	ldr	r3, [r4, #0]
    6c80:	2b00      	cmp	r3, #0
    6c82:	d000      	beq.n	6c86 <_fstat_r+0x1e>
    6c84:	602b      	str	r3, [r5, #0]
    6c86:	bd70      	pop	{r4, r5, r6, pc}
    6c88:	200006d8 	.word	0x200006d8

00006c8c <_isatty_r>:
    6c8c:	2300      	movs	r3, #0
    6c8e:	b570      	push	{r4, r5, r6, lr}
    6c90:	4c06      	ldr	r4, [pc, #24]	; (6cac <_isatty_r+0x20>)
    6c92:	0005      	movs	r5, r0
    6c94:	0008      	movs	r0, r1
    6c96:	6023      	str	r3, [r4, #0]
    6c98:	f7fc fc5c 	bl	3554 <_isatty>
    6c9c:	1c43      	adds	r3, r0, #1
    6c9e:	d103      	bne.n	6ca8 <_isatty_r+0x1c>
    6ca0:	6823      	ldr	r3, [r4, #0]
    6ca2:	2b00      	cmp	r3, #0
    6ca4:	d000      	beq.n	6ca8 <_isatty_r+0x1c>
    6ca6:	602b      	str	r3, [r5, #0]
    6ca8:	bd70      	pop	{r4, r5, r6, pc}
    6caa:	46c0      	nop			; (mov r8, r8)
    6cac:	200006d8 	.word	0x200006d8

00006cb0 <_lseek_r>:
    6cb0:	b570      	push	{r4, r5, r6, lr}
    6cb2:	0005      	movs	r5, r0
    6cb4:	0008      	movs	r0, r1
    6cb6:	0011      	movs	r1, r2
    6cb8:	2200      	movs	r2, #0
    6cba:	4c06      	ldr	r4, [pc, #24]	; (6cd4 <_lseek_r+0x24>)
    6cbc:	6022      	str	r2, [r4, #0]
    6cbe:	001a      	movs	r2, r3
    6cc0:	f7fc fc4a 	bl	3558 <_lseek>
    6cc4:	1c43      	adds	r3, r0, #1
    6cc6:	d103      	bne.n	6cd0 <_lseek_r+0x20>
    6cc8:	6823      	ldr	r3, [r4, #0]
    6cca:	2b00      	cmp	r3, #0
    6ccc:	d000      	beq.n	6cd0 <_lseek_r+0x20>
    6cce:	602b      	str	r3, [r5, #0]
    6cd0:	bd70      	pop	{r4, r5, r6, pc}
    6cd2:	46c0      	nop			; (mov r8, r8)
    6cd4:	200006d8 	.word	0x200006d8

00006cd8 <memchr>:
    6cd8:	b2c9      	uxtb	r1, r1
    6cda:	1882      	adds	r2, r0, r2
    6cdc:	4290      	cmp	r0, r2
    6cde:	d101      	bne.n	6ce4 <memchr+0xc>
    6ce0:	2000      	movs	r0, #0
    6ce2:	4770      	bx	lr
    6ce4:	7803      	ldrb	r3, [r0, #0]
    6ce6:	428b      	cmp	r3, r1
    6ce8:	d0fb      	beq.n	6ce2 <memchr+0xa>
    6cea:	3001      	adds	r0, #1
    6cec:	e7f6      	b.n	6cdc <memchr+0x4>

00006cee <__malloc_lock>:
    6cee:	4770      	bx	lr

00006cf0 <__malloc_unlock>:
    6cf0:	4770      	bx	lr
	...

00006cf4 <_read_r>:
    6cf4:	b570      	push	{r4, r5, r6, lr}
    6cf6:	0005      	movs	r5, r0
    6cf8:	0008      	movs	r0, r1
    6cfa:	0011      	movs	r1, r2
    6cfc:	2200      	movs	r2, #0
    6cfe:	4c06      	ldr	r4, [pc, #24]	; (6d18 <_read_r+0x24>)
    6d00:	6022      	str	r2, [r4, #0]
    6d02:	001a      	movs	r2, r3
    6d04:	f7fc fbc2 	bl	348c <_read>
    6d08:	1c43      	adds	r3, r0, #1
    6d0a:	d103      	bne.n	6d14 <_read_r+0x20>
    6d0c:	6823      	ldr	r3, [r4, #0]
    6d0e:	2b00      	cmp	r3, #0
    6d10:	d000      	beq.n	6d14 <_read_r+0x20>
    6d12:	602b      	str	r3, [r5, #0]
    6d14:	bd70      	pop	{r4, r5, r6, pc}
    6d16:	46c0      	nop			; (mov r8, r8)
    6d18:	200006d8 	.word	0x200006d8

00006d1c <mmc_trans_multipliers>:
    6d1c:	00000000 0000000a 0000000c 0000000d     ................
    6d2c:	0000000f 00000014 0000001a 0000001e     ................
    6d3c:	00000023 00000028 0000002d 00000034     #...(...-...4...
    6d4c:	00000037 0000003c 00000046 00000050     7...<...F...P...

00006d5c <sd_mmc_trans_units>:
    6d5c:	0000000a 00000064 000003e8 00002710     ....d........'..
	...

00006d78 <sd_trans_multipliers>:
    6d78:	00000000 0000000a 0000000c 0000000d     ................
    6d88:	0000000f 00000014 00000019 0000001e     ................
    6d98:	00000023 00000028 0000002d 00000032     #...(...-...2...
    6da8:	00000037 0000003c 00000046 00000050     7...<...F...P...
    6db8:	00001724 00001724 00001700 00001724     $...$.......$...
    6dc8:	00001700 000016e6 000016e6 00001724     ............$...
    6dd8:	00001724 00001724 00001724 00001724     $...$...$...$...
    6de8:	00001724 00001724 00001724 00001724     $...$...$...$...
    6df8:	00001724 00001724 00001724 00001724     $...$...$...$...
    6e08:	00001724 00001724 00001724 00001724     $...$...$...$...
    6e18:	00001724 00001724 00001724 00001724     $...$...$...$...
    6e28:	00001724 00001724 00001724 00001724     $...$...$...$...
    6e38:	00001724 00001724 00001724 00001724     $...$...$...$...
    6e48:	00001724 00001724 00001724 00001724     $...$...$...$...
    6e58:	00001724 00001724 00001724 00001724     $...$...$...$...
    6e68:	00001724 00001724 00001724 00001724     $...$...$...$...
    6e78:	00001724 00001724 00001724 00001724     $...$...$...$...
    6e88:	00001724 00001724 00001724 00001724     $...$...$...$...
    6e98:	00001724 00001724 00001724 00001724     $...$...$...$...
    6ea8:	00001724 00001724 00001724 00001724     $...$...$...$...
    6eb8:	00001700 00001700 00001708 00001708     ................
    6ec8:	00001708 00001708 42000800 42000c00     ...........B...B
    6ed8:	42001000 42001400 42001800 42001c00     ...B...B...B...B
    6ee8:	00002c16 00002c12 00002c12 00002c78     .,...,...,..x,..
    6ef8:	00002c78 00002c2a 00002c1c 00002c30     x,..*,...,..0,..
    6f08:	00002c66 00002e38 00002e18 00002e18     f,..8...........
    6f18:	00002ea4 00002e2a 00002e46 00002e1c     ....*...F.......
    6f28:	00002e54 00002e94                       T.......

00006f30 <LfnOfs>:
    6f30:	07050301 12100e09 1c181614 0000001e     ................

00006f40 <excvt.4558>:
    6f40:	b6909a80 808fb78e d8d4d3d2 8f8eded7     ................
    6f50:	e2929290 ebeae399 9d9a9959 9f9e9d9c     ........Y.......
    6f60:	e9e0d6b5 a7a6a5a5 abaaa9a8 afae21ac     .............!..
    6f70:	b3b2b1b0 b7b6b5b4 bbbab9b8 bfbebdbc     ................
    6f80:	c3c2c1c0 c7c7c5c4 cbcac9c8 cfcecdcc     ................
    6f90:	d3d2d1d0 d7d6d5d4 dbdad9d8 dfdedddc     ................
    6fa0:	e3e2e1e0 e7e6e5e5 ebeae9e7 efeeeded     ................
    6fb0:	f3f2f1f0 f7f6f5f4 fbfaf9f8 fffefdfc     ................
    6fc0:	3c3a2a22 7f7c3f3e 00000000 3d3b2c2b     "*:<>?|.....+,;=
    6fd0:	00005d5b                                []..

00006fd4 <Tbl>:
    6fd4:	00fc00c7 00e200e9 00e000e4 00e700e5     ................
    6fe4:	00eb00ea 00ef00e8 00ec00ee 00c500c4     ................
    6ff4:	00e600c9 00f400c6 00f200f6 00f900fb     ................
    7004:	00d600ff 00f800dc 00d800a3 019200d7     ................
    7014:	00ed00e1 00fa00f3 00d100f1 00ba00aa     ................
    7024:	00ae00bf 00bd00ac 00a100bc 00bb00ab     ................
    7034:	25922591 25022593 00c12524 00c000c2     .%.%.%.%$%......
    7044:	256300a9 25572551 00a2255d 251000a5     ..c%Q%W%]%.....%
    7054:	25342514 251c252c 253c2500 00c300e3     .%4%,%.%.%<%....
    7064:	2554255a 25662569 25502560 00a4256c     Z%T%i%f%`%P%l%..
    7074:	00d000f0 00cb00ca 013100c8 00ce00cd     ..........1.....
    7084:	251800cf 2588250c 00a62584 258000cc     ...%.%.%.%.....%
    7094:	00df00d3 00d200d4 00d500f5 00fe00b5     ................
    70a4:	00da00de 00d900db 00dd00fd 00b400af     ................
    70b4:	00b100ad 00be2017 00a700b6 00b800f7     ..... ..........
    70c4:	00a800b0 00b900b7 00b200b3 00a025a0     .............%..

000070d4 <tbl_lower.4308>:
    70d4:	00620061 00640063 00660065 00680067     a.b.c.d.e.f.g.h.
    70e4:	006a0069 006c006b 006e006d 0070006f     i.j.k.l.m.n.o.p.
    70f4:	00720071 00740073 00760075 00780077     q.r.s.t.u.v.w.x.
    7104:	007a0079 00a200a1 00a500a3 00af00ac     y.z.............
    7114:	00e100e0 00e300e2 00e500e4 00e700e6     ................
    7124:	00e900e8 00eb00ea 00ed00ec 00ef00ee     ................
    7134:	00f100f0 00f300f2 00f500f4 00f800f6     ................
    7144:	00fa00f9 00fc00fb 00fe00fd 010100ff     ................
    7154:	01050103 01090107 010d010b 0111010f     ................
    7164:	01150113 01190117 011d011b 0121011f     ..............!.
    7174:	01250123 01290127 012d012b 0131012f     #.%.'.).+.-./.1.
    7184:	01350133 013a0137 013e013c 01420140     3.5.7.:.<.>.@.B.
    7194:	01460144 014b0148 014f014d 01530151     D.F.H.K.M.O.Q.S.
    71a4:	01570155 015b0159 015f015d 01630161     U.W.Y.[.]._.a.c.
    71b4:	01670165 016b0169 016f016d 01730171     e.g.i.k.m.o.q.s.
    71c4:	01770175 017c017a 0192017e 03b203b1     u.w.z.|.~.......
    71d4:	03b403b3 03b603b5 03b803b7 03ba03b9     ................
    71e4:	03bc03bb 03be03bd 03c003bf 03c303c1     ................
    71f4:	03c503c4 03c703c6 03c903c8 043003ca     ..............0.
    7204:	04320431 04340433 04360435 04380437     1.2.3.4.5.6.7.8.
    7214:	043a0439 043c043b 043e043d 0440043f     9.:.;.<.=.>.?.@.
    7224:	04420441 04440443 04460445 04480447     A.B.C.D.E.F.G.H.
    7234:	044a0449 044c044b 044e044d 0451044f     I.J.K.L.M.N.O.Q.
    7244:	04530452 04550454 04570456 04590458     R.S.T.U.V.W.X.Y.
    7254:	045b045a 045e045c 2170045f 21722171     Z.[.\.^._.p!q!r!
    7264:	21742173 21762175 21782177 217a2179     s!t!u!v!w!x!y!z!
    7274:	217c217b 217e217d ff41217f ff43ff42     {!|!}!~!.!A.B.C.
    7284:	ff45ff44 ff47ff46 ff49ff48 ff4bff4a     D.E.F.G.H.I.J.K.
    7294:	ff4dff4c ff4fff4e ff51ff50 ff53ff52     L.M.N.O.P.Q.R.S.
    72a4:	ff55ff54 ff57ff56 ff59ff58 0000ff5a     T.U.V.W.X.Y.Z...

000072b4 <tbl_upper.4309>:
    72b4:	00420041 00440043 00460045 00480047     A.B.C.D.E.F.G.H.
    72c4:	004a0049 004c004b 004e004d 0050004f     I.J.K.L.M.N.O.P.
    72d4:	00520051 00540053 00560055 00580057     Q.R.S.T.U.V.W.X.
    72e4:	005a0059 ffe00021 ffe5ffe1 ffe3ffe2     Y.Z.!...........
    72f4:	00c100c0 00c300c2 00c500c4 00c700c6     ................
    7304:	00c900c8 00cb00ca 00cd00cc 00cf00ce     ................
    7314:	00d100d0 00d300d2 00d500d4 00d800d6     ................
    7324:	00da00d9 00dc00db 00de00dd 01000178     ............x...
    7334:	01040102 01080106 010c010a 0110010e     ................
    7344:	01140112 01180116 011c011a 0120011e     .............. .
    7354:	01240122 01280126 012c012a 0130012e     ".$.&.(.*.,...0.
    7364:	01340132 01390136 013d013b 0141013f     2.4.6.9.;.=.?.A.
    7374:	01450143 014a0147 014e014c 01520150     C.E.G.J.L.N.P.R.
    7384:	01560154 015a0158 015e015c 01620160     T.V.X.Z.\.^.`.b.
    7394:	01660164 016a0168 016e016c 01720170     d.f.h.j.l.n.p.r.
    73a4:	01760174 017b0179 0191017d 03920391     t.v.y.{.}.......
    73b4:	03940393 03960395 03980397 039a0399     ................
    73c4:	039c039b 039e039d 03a0039f 03a303a1     ................
    73d4:	03a503a4 03a703a6 03a903a8 041003aa     ................
    73e4:	04120411 04140413 04160415 04180417     ................
    73f4:	041a0419 041c041b 041e041d 0420041f     .............. .
    7404:	04220421 04240423 04260425 04280427     !.".#.$.%.&.'.(.
    7414:	042a0429 042c042b 042e042d 0401042f     ).*.+.,.-.../...
    7424:	04030402 04050404 04070406 04090408     ................
    7434:	040b040a 040e040c 2160040f 21622161     ..........`!a!b!
    7444:	21642163 21662165 21682167 216a2169     c!d!e!f!g!h!i!j!
    7454:	216c216b 216e216d ff21216f ff23ff22     k!l!m!n!o!!.".#.
    7464:	ff25ff24 ff27ff26 ff29ff28 ff2bff2a     $.%.&.'.(.).*.+.
    7474:	ff2dff2c ff2fff2e ff31ff30 ff33ff32     ,.-.../.0.1.2.3.
    7484:	ff35ff34 ff37ff36 ff39ff38 0000ff3a     4.5.6.7.8.9.:...
    7494:	746f6f62 646f6d20 63203a65 6b636568     boot mode: check
    74a4:	20676e69 62206669 6c746f6f 6564616f     ing if bootloade
    74b4:	726f2072 70706120 646f6320 73692065     r or app code is
    74c4:	206f7420 206e7572 2e2e2e2e 00000d0a      to run ........
    74d4:	746f6f62 646f6d20 3e203a65 6f42203e     boot mode: >> Bo
    74e4:	6f6c746f 72656461 74754220 206e6f74     otloader Button 
    74f4:	73657270 20646573 00000d0a 746f6f62     pressed ....boot
    7504:	646f6d20 3e203a65 544f203e 20554641      mode: >> OTAFU 
    7514:	00000d0a 746f6f62 646f6d20 3e203a65     ....boot mode: >
    7524:	4f4e203e 50504120 41564120 42414c49     > NO APP AVAILAB
    7534:	0a20454c 0000000d 61736964 20656c62     LE .....disable 
    7544:	69726570 72656870 3a736c61 69654420     peripherals: Dei
    7554:	6974696e 7a696c61 20676e69 69726570     nitializing peri
    7564:	72656870 20736c61 754a0d0a 6e69706d     pherals ..Jumpin
    7574:	6f742067 70706120 2e2e2e2e 0d0a202e     g to app..... ..
    7584:	00000000 2d2d0a0d 4f4f4220 414f4c54     ......-- BOOTLOA
    7594:	20524544 0a0d2d2d 44202d2d 534f4c45     DER --..-- DELOS
    75a4:	434e4920 2d2d202e 2d2d0a0d 6d6f4320      INC. --..-- Com
    75b4:	656c6970 4d203a64 20207961 30322035     piled: May  5 20
    75c4:	30203931 38313a30 2030343a 000d2d2d     19 00:18:40 --..
    75d4:	616d0a0d 203a6e69 74696e49 696c6169     ..main: Initiali
    75e4:	676e697a 616f4220 61206472 7020646e     zing Board and p
    75f4:	70697265 61726568 2e20736c 2e2e2e2e     eripherals .....
    7604:	0a0d202e 0000000d 74696e69 6f74735f     . ......init_sto
    7614:	65676172 6c70203a 65736165 756c7020     rage: please plu
    7624:	6e612067 2f445320 20434d4d 64726163     g an SD/MMC card
    7634:	206e6920 746f6c73 0d2e2e2e 00000000      in slot........
    7644:	74696e69 6f74735f 65676172 4453203a     init_storage: SD
    7654:	72614320 6e692064 6c617473 6166206c      Card install fa
    7664:	64656c69 00000d2e 74696e69 6f74735f     iled....init_sto
    7674:	65676172 7274203a 6e752079 67756c70     rage: try unplug
    7684:	646e6120 2d657220 67756c70 65687420      and re-plug the
    7694:	72616320 000d2e64 74696e69 6f74735f      card...init_sto
    76a4:	65676172 6f6d203a 69746e75 5320676e     rage: mounting S
    76b4:	61632044 2e2e6472 00000d2e 74696e69     D card......init
    76c4:	6f74735f 65676172 4453203a 72616320     _storage: SD car
    76d4:	6f6d2064 20746e75 6c696166 20216465     d mount failed! 
    76e4:	73657228 29642520 00000a0d 74696e69     (res %d)....init
    76f4:	6f74735f 65676172 4453203a 72616320     _storage: SD car
    7704:	6f6d2064 20746e75 0d2e4b4f 00000000     d mount OK......
    7714:	616d0d0a 203a6e69 42203e3e 6472616f     ..main: >> Board
    7724:	646e6120 72657020 65687069 736c6172      and peripherals
    7734:	696e6920 6c616974 64657a69 00000d0a      initialized....
    7744:	6e69616d 6553203a 7463656c 20676e69     main: Selecting 
    7754:	746f6f42 65646f6d 72502820 20737365     Bootmode (Press 
    7764:	74747562 74206e6f 6f66206f 20656372     button to force 
    7774:	746f6f62 0d0a2029 00000000 6e69616d     boot) ......main
    7784:	3e3e203a 50504120 65727020 746e6573     : >> APP present
    7794:	000d0a20 6e69616d 544f203a 69462041      ...main: OTA Fi
    77a4:	61776d72 64206572 63657465 20646574     rmware detected 
    77b4:	2e2e2e2e 0d0a202e 00000000 635f6473     ..... ......sd_c
    77c4:	5f647261 6e5f6f74 635f6d76 3a79706f     ard_to_nvm_copy:
    77d4:	61655220 676e6964 72616320 2e2e2064      Reading card ..
    77e4:	202e2e2e 00000d0a 565f4453 3d205245     ... ....SD_VER =
    77f4:	0a752520 0000000d 5f4d564e 20524556      %u.....NVM_VER 
    7804:	7525203d 00000d0a 635f6473 5f647261     = %u....sd_card_
    7814:	6e5f6f74 635f6d76 3a79706f 72655620     to_nvm_copy: Ver
    7824:	6e6f6973 66694420 65726566 202c746e     sion Different, 
    7834:	74697257 20676e69 2077656e 65646f63     Writing new code
    7844:	2e2e2e20 0a202e2e 0000000d 635f6473      ..... .....sd_c
    7854:	5f647261 6e5f6f74 635f6d76 3a79706f     ard_to_nvm_copy:
    7864:	203e3e20 73726556 206e6f69 656d6153      >> Version Same
    7874:	000d0a20 6f206473 61726570 6e6f6974      ...sd operation
    7884:	3e3e203a 65704f20 676e696e 66206120     : >> Opening a f
    7894:	20656c69 6c696166 0d0a6465 00000000     ile failed......
    78a4:	6f206473 61726570 6e6f6974 3e3e203a     sd operation: >>
    78b4:	6c694620 706f2065 73206e65 65636375      File open succe
    78c4:	0d0a7373 00000000 6f206473 61726570     ss......sd opera
    78d4:	6e6f6974 6e69203a 61697469 676e6974     tion: initiating
    78e4:	72696620 7261776d 72772065 20657469      firmware write 
    78f4:	6e206f74 2e206d76 2e2e2e2e 0a202e2e     to nvm ....... .
    7904:	0000000d 6f206473 61726570 6e6f6974     ....sd operation
    7914:	3e3e203a 57454e20 52494620 5241574d     : >> NEW FIRMWAR
    7924:	45562045 4f495352 5055204e 45544144     E VERSION UPDATE
    7934:	0d0a2044 00000000 6f206473 61726570     D ......sd opera
    7944:	6e6f6974 3e3e203a 57454e20 52494620     tion: >> NEW FIR
    7954:	5241574d 52572045 45545449 5553204e     MWARE WRITTEN SU
    7964:	53454343 4c554653 0a20594c 0000000d     CCESSFULLY .....
    7974:	6f206473 61726570 6e6f6974 3e3e203a     sd operation: >>
    7984:	57454e20 52494620 5241574d 52572045      NEW FIRMWARE WR
    7994:	20455449 4c494146 0d0a4445 00000000     ITE FAILED......

000079a4 <_global_impure_ptr>:
    79a4:	20000034                                4.. 

000079a8 <__sf_fake_stderr>:
	...

000079c8 <__sf_fake_stdin>:
	...

000079e8 <__sf_fake_stdout>:
	...
    7a08:	4f500043 00584953 2d23002e 00202b30     C.POSIX...#-0+ .
    7a18:	004c6c68 45676665 30004746 34333231     hlL.efgEFG.01234
    7a28:	38373635 43424139 00464544 33323130     56789ABCDEF.0123
    7a38:	37363534 62613938 66656463 20200000              456789abcdef.

00007a45 <_ctype_>:
    7a45:	20202000 20202020 28282020 20282828     .         ((((( 
    7a55:	20202020 20202020 20202020 20202020                     
    7a65:	10108820 10101010 10101010 10101010      ...............
    7a75:	04040410 04040404 10040404 10101010     ................
    7a85:	41411010 41414141 01010101 01010101     ..AAAAAA........
    7a95:	01010101 01010101 01010101 10101010     ................
    7aa5:	42421010 42424242 02020202 02020202     ..BBBBBB........
    7ab5:	02020202 02020202 02020202 10101010     ................
    7ac5:	00000020 00000000 00000000 00000000      ...............
	...

00007b48 <_init>:
    7b48:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    7b4a:	46c0      	nop			; (mov r8, r8)
    7b4c:	bcf8      	pop	{r3, r4, r5, r6, r7}
    7b4e:	bc08      	pop	{r3}
    7b50:	469e      	mov	lr, r3
    7b52:	4770      	bx	lr

00007b54 <__init_array_start>:
    7b54:	000000dd 	.word	0x000000dd

00007b58 <_fini>:
    7b58:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    7b5a:	46c0      	nop			; (mov r8, r8)
    7b5c:	bcf8      	pop	{r3, r4, r5, r6, r7}
    7b5e:	bc08      	pop	{r3}
    7b60:	469e      	mov	lr, r3
    7b62:	4770      	bx	lr

00007b64 <__fini_array_start>:
    7b64:	000000b5 	.word	0x000000b5
